[{"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\index.js":"1","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\context\\UserContext.js":"2","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\serviceWorker.js":"3","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\context\\LayoutContext.js":"4","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\app\\index.js":"5","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\themes\\index.js":"6","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\themes\\default.js":"7","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\app\\App.jsx":"8","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\index.js":"9","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\Router.jsx":"10","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\context\\Context.js":"11","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\adminRoute\\AuthRoute.jsx":"12","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\adminRoute\\HomeRoute.jsx":"13","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\adminRoute\\DashboardRoute.jsx":"14","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\adminRoute\\AdminRoute.jsx":"15","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\context\\Reducer.js":"16","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Layout\\Layout.js":"17","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\AllBranch\\AllBranch.jsx":"18","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\NewProduct.jsx":"19","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\TotalWithdrawal.jsx":"20","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\FixedSavingsRep.jsx":"21","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allmarketers\\Allmarketers.jsx":"22","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\OngoingLoans\\OngoingLoans.jsx":"23","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\TotalDeposite.jsx":"24","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Dashboard.js":"25","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\index.js":"26","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Layout\\styles.js":"27","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\styles.js":"28","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\PageTitle\\PageTitle.js":"29","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Widget\\Widget.js":"30","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\AllBranch\\BtnAction.jsx":"31","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Sidebar\\Sidebar.js":"32","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\tables\\Tables.js":"33","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\typography\\Typography.js":"34","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Header\\Header.js":"35","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\notifications\\Notifications.js":"36","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\maps\\Maps.js":"37","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\icons\\Icons.js":"38","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\charts\\Charts.js":"39","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\InterestRate.jsx":"40","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\Fees.jsx":"41","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\DeletedCustomer.jsx":"42","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\PendingCustomer.jsx":"43","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\expenses\\NewExpense.jsx":"44","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Wrappers\\Wrappers.js":"45","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\expenses\\AllExpenses.jsx":"46","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\OngoingLoan.jsx":"47","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\NewProduct.jsx":"48","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\PendingLoan.jsx":"49","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\AddBorrower.jsx":"50","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\NewCustomer.jsx":"51","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\AllCustomer.jsx":"52","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\DisbursedLoan.jsx":"53","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\MarketerAccount.jsx":"54","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\NewMarketer.jsx":"55","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\auth\\login\\Login.js":"56","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\AllMarketer.jsx":"57","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\auth\\login\\ConfirmEmail.js":"58","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\OngoingLoans\\ActionButton.jsx":"59","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allmarketers\\ActionButton.jsx":"60","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\branch\\AllBranches.jsx":"61","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\branch\\NewBranch.jsx":"62","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\PageTitle\\styles.js":"63","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Widget\\styles.js":"64","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\typography\\styles.js":"65","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Header\\styles.js":"66","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Sidebar\\styles.js":"67","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\notifications\\styles.js":"68","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\mock.js":"69","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\maps\\styles.js":"70","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"71","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\AllBranch\\Modal.jsx":"72","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\components\\Table\\Table.js":"73","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\icons\\styles.js":"74","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\charts\\components\\ApexLineChart.js":"75","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\charts\\components\\ApexHeatmap.js":"76","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\UserAvatar\\UserAvatar.js":"77","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Notification\\Notification.js":"78","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\expenses\\styles.js":"79","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\styles.js":"80","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\styles.js":"81","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\auth\\login\\styles.js":"82","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\styles.js":"83","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\ActionButton.jsx":"84","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\expenses\\ActionButton.jsx":"85","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\ActionButton.jsx":"86","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\branch\\styles.js":"87","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\OngoingLoans\\Modal.jsx":"88","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\assets\\index.js":"89","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\ActionButton.jsx":"90","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allmarketers\\Modal.jsx":"91","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Sidebar\\components\\Dot.js":"92","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"93","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\services\\index.js":"94","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\index.js":"95","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\branch\\ActionButton.jsx":"96","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\UserAvatar\\styles.js":"97","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Notification\\styles.js":"98","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\Modal.jsx":"99","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\expenses\\Modal.jsx":"100","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\Modal.jsx":"101","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\services\\serviceApi.js":"102","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\services\\localForage.js":"103","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\Modal.jsx":"104","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Textfield\\TextField.jsx":"105","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Select\\Select.jsx":"106","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Checkbox\\Checkbox.jsx":"107","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Table\\Table.jsx":"108","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\branch\\Modal.jsx":"109","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\DataTimePicker\\DataTimePicker.jsx":"110","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Button\\Button.jsx":"111","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Table\\styles.js":"112","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\styles.js":"113","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allcustomers\\Allcustomers.jsx":"114","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allcustomers\\ActionButton.jsx":"115","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allcustomers\\Modal.jsx":"116","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\ActionButtons\\ActionButton.jsx":"117","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\modals\\Modal.jsx":"118","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\modals\\AddNewIntrest.jsx":"119","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\ActionButtons\\FeeActionButton.jsx":"120","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\modals\\AddFees.jsx":"121","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\modals\\FeesModal.jsx":"122"},{"size":1132,"mtime":1658829388454,"results":"123","hashOfConfig":"124"},{"size":2053,"mtime":1658829388450,"results":"125","hashOfConfig":"124"},{"size":5083,"mtime":1658829388565,"results":"126","hashOfConfig":"124"},{"size":1444,"mtime":1658829388447,"results":"127","hashOfConfig":"124"},{"size":46,"mtime":1658829388287,"results":"128","hashOfConfig":"124"},{"size":534,"mtime":1658829388572,"results":"129","hashOfConfig":"124"},{"size":3127,"mtime":1658829388571,"results":"130","hashOfConfig":"124"},{"size":194,"mtime":1658829388286,"results":"131","hashOfConfig":"124"},{"size":56,"mtime":1658829388564,"results":"132","hashOfConfig":"124"},{"size":643,"mtime":1658954026504,"results":"133","hashOfConfig":"124"},{"size":745,"mtime":1658829388446,"results":"134","hashOfConfig":"124"},{"size":373,"mtime":1658829388536,"results":"135","hashOfConfig":"124"},{"size":204,"mtime":1658829388563,"results":"136","hashOfConfig":"124"},{"size":1514,"mtime":1659448785753,"results":"137","hashOfConfig":"124"},{"size":5993,"mtime":1659443473612,"results":"138","hashOfConfig":"124"},{"size":1031,"mtime":1658829388449,"results":"139","hashOfConfig":"124"},{"size":3599,"mtime":1659189368571,"results":"140","hashOfConfig":"124"},{"size":3016,"mtime":1659281223519,"results":"141","hashOfConfig":"124"},{"size":9958,"mtime":1659036005820,"results":"142","hashOfConfig":"124"},{"size":2857,"mtime":1658958064255,"results":"143","hashOfConfig":"124"},{"size":3181,"mtime":1659037305425,"results":"144","hashOfConfig":"124"},{"size":3117,"mtime":1659378787169,"results":"145","hashOfConfig":"124"},{"size":3581,"mtime":1659269561728,"results":"146","hashOfConfig":"124"},{"size":2988,"mtime":1658956808644,"results":"147","hashOfConfig":"124"},{"size":25961,"mtime":1659450744291,"results":"148","hashOfConfig":"124"},{"size":3705,"mtime":1659039415927,"results":"149","hashOfConfig":"124"},{"size":710,"mtime":1658829388321,"results":"150","hashOfConfig":"124"},{"size":4527,"mtime":1659011903996,"results":"151","hashOfConfig":"124"},{"size":447,"mtime":1658829388350,"results":"152","hashOfConfig":"124"},{"size":2581,"mtime":1658829388428,"results":"153","hashOfConfig":"124"},{"size":3187,"mtime":1659281198549,"results":"154","hashOfConfig":"124"},{"size":8255,"mtime":1659190357739,"results":"155","hashOfConfig":"124"},{"size":2146,"mtime":1658829388528,"results":"156","hashOfConfig":"124"},{"size":4632,"mtime":1658829388530,"results":"157","hashOfConfig":"124"},{"size":9257,"mtime":1658829388313,"results":"158","hashOfConfig":"124"},{"size":13862,"mtime":1658829388503,"results":"159","hashOfConfig":"124"},{"size":1010,"mtime":1658829388499,"results":"160","hashOfConfig":"124"},{"size":391433,"mtime":1658829388495,"results":"161","hashOfConfig":"124"},{"size":5790,"mtime":1658829388471,"results":"162","hashOfConfig":"124"},{"size":4980,"mtime":1659472781987,"results":"163","hashOfConfig":"124"},{"size":4339,"mtime":1659474812986,"results":"164","hashOfConfig":"124"},{"size":5725,"mtime":1659039415905,"results":"165","hashOfConfig":"124"},{"size":5994,"mtime":1659039415916,"results":"166","hashOfConfig":"124"},{"size":6020,"mtime":1659039415925,"results":"167","hashOfConfig":"124"},{"size":3971,"mtime":1658829388438,"results":"168","hashOfConfig":"124"},{"size":3776,"mtime":1659443473591,"results":"169","hashOfConfig":"124"},{"size":4791,"mtime":1659039415941,"results":"170","hashOfConfig":"124"},{"size":5208,"mtime":1659039415940,"results":"171","hashOfConfig":"124"},{"size":4789,"mtime":1659039415942,"results":"172","hashOfConfig":"124"},{"size":6927,"mtime":1659039415935,"results":"173","hashOfConfig":"124"},{"size":13991,"mtime":1659039415915,"results":"174","hashOfConfig":"124"},{"size":7956,"mtime":1659039415903,"results":"175","hashOfConfig":"124"},{"size":2555,"mtime":1659039415937,"results":"176","hashOfConfig":"124"},{"size":5060,"mtime":1659039415947,"results":"177","hashOfConfig":"124"},{"size":6320,"mtime":1659039415949,"results":"178","hashOfConfig":"124"},{"size":12892,"mtime":1659111929482,"results":"179","hashOfConfig":"124"},{"size":5231,"mtime":1659443473600,"results":"180","hashOfConfig":"124"},{"size":1330,"mtime":1658829388459,"results":"181","hashOfConfig":"124"},{"size":3053,"mtime":1659270381022,"results":"182","hashOfConfig":"124"},{"size":3092,"mtime":1659379914344,"results":"183","hashOfConfig":"124"},{"size":5745,"mtime":1659443473586,"results":"184","hashOfConfig":"124"},{"size":6103,"mtime":1659039415885,"results":"185","hashOfConfig":"124"},{"size":482,"mtime":1658829388352,"results":"186","hashOfConfig":"124"},{"size":1015,"mtime":1658829388434,"results":"187","hashOfConfig":"124"},{"size":389,"mtime":1658829388532,"results":"188","hashOfConfig":"124"},{"size":4043,"mtime":1658829388317,"results":"189","hashOfConfig":"124"},{"size":1363,"mtime":1658829388417,"results":"190","hashOfConfig":"124"},{"size":1943,"mtime":1658829388526,"results":"191","hashOfConfig":"124"},{"size":4288,"mtime":1658829388483,"results":"192","hashOfConfig":"124"},{"size":178,"mtime":1658829388501,"results":"193","hashOfConfig":"124"},{"size":4650,"mtime":1658921852969,"results":"194","hashOfConfig":"124"},{"size":6922,"mtime":1659281190623,"results":"195","hashOfConfig":"124"},{"size":1323,"mtime":1658829388482,"results":"196","hashOfConfig":"124"},{"size":812,"mtime":1658829388498,"results":"197","hashOfConfig":"124"},{"size":1396,"mtime":1658829388474,"results":"198","hashOfConfig":"124"},{"size":1909,"mtime":1658829388473,"results":"199","hashOfConfig":"124"},{"size":620,"mtime":1658829388420,"results":"200","hashOfConfig":"124"},{"size":3413,"mtime":1658829388347,"results":"201","hashOfConfig":"124"},{"size":4150,"mtime":1658921853079,"results":"202","hashOfConfig":"124"},{"size":4150,"mtime":1658921853068,"results":"203","hashOfConfig":"124"},{"size":4150,"mtime":1658921853089,"results":"204","hashOfConfig":"124"},{"size":3848,"mtime":1659112159827,"results":"205","hashOfConfig":"124"},{"size":4527,"mtime":1659443473610,"results":"206","hashOfConfig":"124"},{"size":3214,"mtime":1659039415934,"results":"207","hashOfConfig":"124"},{"size":4235,"mtime":1659443473589,"results":"208","hashOfConfig":"124"},{"size":3214,"mtime":1659039415902,"results":"209","hashOfConfig":"124"},{"size":4150,"mtime":1658870978627,"results":"210","hashOfConfig":"124"},{"size":8015,"mtime":1659270797561,"results":"211","hashOfConfig":"124"},{"size":65,"mtime":1658829388441,"results":"212","hashOfConfig":"124"},{"size":3162,"mtime":1659443473594,"results":"213","hashOfConfig":"124"},{"size":7818,"mtime":1659380044300,"results":"214","hashOfConfig":"124"},{"size":902,"mtime":1658829388357,"results":"215","hashOfConfig":"124"},{"size":1473,"mtime":1658829388360,"results":"216","hashOfConfig":"124"},{"size":101,"mtime":1658829388567,"results":"217","hashOfConfig":"124"},{"size":375,"mtime":1659111414333,"results":"218","hashOfConfig":"124"},{"size":4235,"mtime":1659443473577,"results":"219","hashOfConfig":"124"},{"size":291,"mtime":1658829388425,"results":"220","hashOfConfig":"124"},{"size":1040,"mtime":1658829388349,"results":"221","hashOfConfig":"124"},{"size":4928,"mtime":1659039415938,"results":"222","hashOfConfig":"124"},{"size":13753,"mtime":1659443473593,"results":"223","hashOfConfig":"124"},{"size":4928,"mtime":1659039415913,"results":"224","hashOfConfig":"124"},{"size":3439,"mtime":1658829388569,"results":"225","hashOfConfig":"124"},{"size":1338,"mtime":1658829388568,"results":"226","hashOfConfig":"124"},{"size":13425,"mtime":1659443473601,"results":"227","hashOfConfig":"124"},{"size":577,"mtime":1658921852940,"results":"228","hashOfConfig":"124"},{"size":1002,"mtime":1658921852938,"results":"229","hashOfConfig":"124"},{"size":1024,"mtime":1658921852937,"results":"230","hashOfConfig":"124"},{"size":1319,"mtime":1658921852939,"results":"231","hashOfConfig":"124"},{"size":13753,"mtime":1659443473587,"results":"232","hashOfConfig":"124"},{"size":669,"mtime":1658921852938,"results":"233","hashOfConfig":"124"},{"size":558,"mtime":1659111784795,"results":"234","hashOfConfig":"124"},{"size":3000,"mtime":1658829388298,"results":"235","hashOfConfig":"124"},{"size":4095,"mtime":1659472359435,"results":"236","hashOfConfig":"124"},{"size":3844,"mtime":1659450789282,"results":"237","hashOfConfig":"124"},{"size":3235,"mtime":1659454005184,"results":"238","hashOfConfig":"124"},{"size":15341,"mtime":1659454088667,"results":"239","hashOfConfig":"124"},{"size":3222,"mtime":1659472135961,"results":"240","hashOfConfig":"124"},{"size":4929,"mtime":1659464788281,"results":"241","hashOfConfig":"124"},{"size":4383,"mtime":1659474007682,"results":"242","hashOfConfig":"124"},{"size":3226,"mtime":1659475352171,"results":"243","hashOfConfig":"124"},{"size":3608,"mtime":1659475001770,"results":"244","hashOfConfig":"124"},{"size":5258,"mtime":1659476038757,"results":"245","hashOfConfig":"124"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},"1b4k6lt",{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"248"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"248"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"248"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"248"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"248"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"248"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"248"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"248"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"248"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"248"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"248"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"248"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"248"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"248"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"248"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"248"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"248"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"248"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"248"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"248"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"248"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"248"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"248"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"248"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"248"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"248"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"248"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"248"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"248"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"248"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"248"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"248"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"248"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"248"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"248"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"248"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\index.js",[],["522","523"],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\context\\UserContext.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\serviceWorker.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\context\\LayoutContext.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\app\\index.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\themes\\index.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\themes\\default.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\app\\App.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\index.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\Router.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\context\\Context.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\adminRoute\\AuthRoute.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\adminRoute\\HomeRoute.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\adminRoute\\DashboardRoute.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\router\\adminRoute\\AdminRoute.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\context\\Reducer.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Layout\\Layout.js",["524","525","526","527","528","529","530"],"import React from \"react\";\r\nimport {\r\n  useLocation,\r\n  Outlet,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box, IconButton } from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  const classes = useStyles();\r\n  // global\r\n  const layoutState = useLayoutState();\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar location={location} />\r\n\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <Outlet />\r\n\r\n          <div className={classes.fakeToolbar} />\r\n\r\n          <Box\r\n            mt={5}\r\n            width={\"100%\"}\r\n            display={\"flex\"}\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <div>\r\n              <Link\r\n                color={'primary'}\r\n                to=\"#\"\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                Fundhill\r\n              </Link>\r\n              <Link\r\n                color={'primary'}\r\n                to=\"#\"\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                About Us\r\n              </Link>\r\n              <Link\r\n                color={'primary'}\r\n                to=\"#\"\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                Blog\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <Link\r\n                to=\"#\"\r\n                target={'_blank'}\r\n              >\r\n                <IconButton aria-label=\"facebook\">\r\n                  <Icon\r\n                    path={FacebookIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n              <Link\r\n                to=\"#\"\r\n                target={'_blank'}\r\n              >\r\n                <IconButton aria-label=\"twitter\">\r\n                  <Icon\r\n                    path={TwitterIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n              <Link\r\n                to=\"#\"\r\n                target={'_blank'}\r\n              >\r\n                <IconButton\r\n                  aria-label=\"github\"\r\n                  style={{ marginRight: -12 }}\r\n                >\r\n                  <Icon\r\n                    path={GithubIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\AllBranch\\AllBranch.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\NewProduct.jsx",["531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550"],"import { Divider, Grid, TableContainer } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { css } from \"@emotion/react\";\r\nimport useStyles from './styles'\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport {\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell,\r\n    Chip\r\n} from \"@material-ui/core\";\r\n//   import useStyles from \"./styles\";\r\nimport { Fragment, useState } from \"react\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\n\r\n// Modal\r\nimport * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Fade from '@mui/material/Fade';\r\nimport Typography from '@mui/material/Typography';\r\nimport { IconButton, Paper, TextField } from \"@mui/material\";\r\nimport { textTransform } from \"@mui/system\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     tableOverflow: {\r\n//         overflow: 'auto'\r\n//     }\r\n// }))\r\nconst override = css`\r\ndisplay: block;\r\nmargin: 0 auto;\r\nborder-color: green;\r\nalign-items: center;\r\n`;\r\n\r\nconst StyledMenu = styled((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n        }}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    '& .MuiPaper-root': {\r\n        borderRadius: 6,\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 180,\r\n        color:\r\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n        boxShadow:\r\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n        '& .MuiMenu-list': {\r\n            padding: '4px 0',\r\n        },\r\n        '& .MuiMenuItem-root': {\r\n            '& .MuiSvgIcon-root': {\r\n                fontSize: 18,\r\n                color: theme.palette.text.secondary,\r\n                marginRight: theme.spacing(1.5),\r\n            },\r\n            '&:active': {\r\n                backgroundColor: alpha(\r\n                    theme.palette.primary.main,\r\n                    theme.palette.action.selectedOpacity,\r\n                ),\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\n\r\n// table\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData(1, '2022-05-2', 15000, 'Cash', 'For Loan'),\r\n    // createData('Ice cream sandwich', 237, 9.0, 37,),\r\n\r\n];\r\n\r\n\r\nconst NewProduct = () => {\r\n\r\n    const classes = useStyles();\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    // modal\r\n    const [openn, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClosee = () => setOpen(false);\r\n    // second modal\r\n    const [lock, setUnlock] = useState(false);\r\n    const handleUnlock = () => setUnlock(true);\r\n    const handleLock = () => setUnlock(false);\r\n\r\n    return (\r\n        <Fragment>\r\n            <PageTitle title=\"Disbursed Loan\" />\r\n            <Grid container spacing={4}>\r\n\r\n                {/* <div className=\"sweet-loading\">\r\n                    <BounceLoader color={color} l css={override} size={150} />\r\n                </div> */}\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"Disburse Loan Details\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <div style={{ marginTop: 10, marginBottom: 10, marginLeft: 20 }}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                disableElevation\r\n                                onClick={handleUnlock}\r\n                                style={{ textTransform: 'none' }}\r\n                            >\r\n                                Add Product\r\n                            </Button>\r\n                        </div>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell >ID </TableCell>\r\n                                    <TableCell >Product</TableCell>\r\n                                    <TableCell >Interest (%)</TableCell>\r\n                                    <TableCell>MGT Charges (%)</TableCell>\r\n                                    <TableCell>Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    {/* <TableCell className=\"pl-3 fw-normal\">23</TableCell>\r\n                                    <TableCell>\tDaniel Yusuf</TableCell>\r\n                                    <TableCell>Yakuku John</TableCell>\r\n                                    <TableCell>Account Number</TableCell>\r\n                                    <TableCell>08080080808</TableCell>\r\n                                    <TableCell>123456</TableCell>\r\n                                    <TableCell>5000000</TableCell>\r\n                                    <TableCell>\t5400000</TableCell>\r\n                                    <TableCell>Approved</TableCell>\r\n                                    <TableCell>On-going loan</TableCell> */}\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <div>\r\n                {/* <Button >Open modal</Button> */}\r\n\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    open={lock}\r\n                    onClose={handleLock}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                >\r\n                    <Fade in={lock}>\r\n                        <Box sx={style}>\r\n                            <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\r\n                                Add New Product\r\n                            </Typography>\r\n\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\r\n                                <IconButton onClick={handleLock}>\r\n                                    <CloseIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </Box>\r\n                            <Divider style={{ marginTop: 40 }} />\r\n\r\n                            <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Product</Typography>\r\n\r\n                            <form style={{ display: 'flex', flexDirection: 'column' }}>\r\n\r\n                                <div className={classes.formDiv}>\r\n                                    <div className={classes.divTypo}><Typography>Product Name</Typography></div>\r\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Product Name' required />\r\n\r\n                                </div>\r\n\r\n                                <div className={classes.formDiv}>\r\n                                    <div className={classes.divTypo}><Typography>Product Interest (%)</Typography></div>\r\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Product Interest (%)' required />\r\n\r\n                                </div>\r\n\r\n                                <div className={classes.formDiv}>\r\n                                    <div className={classes.divTypo}><Typography>Mgt Charges (%)</Typography></div>\r\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Mgt Charges (%)' required />\r\n\r\n                                </div>\r\n\r\n                                <Button variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\r\n                                    Add\r\n                                </Button>\r\n                            </form>\r\n\r\n                            <Divider style={{ marginTop: 40 }} />\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\r\n                                <Button onClick={handleClosee} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\r\n                            </Box>\r\n                        </Box>\r\n                    </Fade>\r\n                </Modal>\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default NewProduct","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\TotalWithdrawal.jsx",["551","552","553","554","555"],"import { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport { css } from \"@emotion/react\";\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport {\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell,\r\n    Chip\r\n} from \"@material-ui/core\";\r\n//   import useStyles from \"./styles\";\r\nimport { Fragment, useState } from \"react\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\nconst override = css`\r\ndisplay: block;\r\nmargin: 0 auto;\r\nborder-color: green;\r\nalign-items: center;\r\n`;\r\n\r\nconst TotalWithdrawal = () => {\r\n    const classes = useStyles();\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <PageTitle title=\"All Withdrawals Made Today\" />\r\n            <Grid container spacing={4}>\r\n\r\n                {/* <div className=\"sweet-loading\">\r\n                    <BounceLoader color={color} l css={override} size={150} />\r\n                </div> */}\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"Withdrawals\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell >Transaction ID </TableCell>\r\n                                    <TableCell >Date</TableCell>\r\n                                    <TableCell >Amount</TableCell>\r\n                                    <TableCell>Customer</TableCell>\r\n                                    <TableCell>Marketer</TableCell>\r\n                                    <TableCell>Account Number</TableCell>\r\n                                    <TableCell>Description</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className=\"pl-3 fw-normal\">1</TableCell>\r\n                                    <TableCell>1-2-2022</TableCell>\r\n                                    <TableCell>200000</TableCell>\r\n                                    <TableCell>Smart Dev</TableCell>\r\n                                    <TableCell>Tobi</TableCell>\r\n                                    <TableCell>0000000443</TableCell>\r\n                                    <TableCell>meaningfull</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Widget>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TotalWithdrawal","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\FixedSavingsRep.jsx",["556","557","558","559","560","561","562"],"import { Grid } from \"@material-ui/core\";\r\nimport { css } from \"@emotion/react\";\r\nimport useStyles from './styles'\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Menu from '@mui/material/Menu';\r\n\r\nimport {\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell,\r\n    Chip\r\n} from \"@material-ui/core\";\r\n//   import useStyles from \"./styles\";\r\nimport { Fragment, } from \"react\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\n\r\n// Modal\r\nimport * as React from 'react';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\n\r\n// table\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData(1, '2022-05-2', 15000, 'Cash', 'For Loan'),\r\n    // createData('Ice cream sandwich', 237, 9.0, 37,),\r\n\r\n];\r\n\r\n\r\nconst FixedSavingsRep = () => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Fragment>\r\n            <PageTitle title=\"All Savings Plan Report\" />\r\n            <Grid container spacing={4}>\r\n\r\n                {/* <div className=\"sweet-loading\">\r\n                    <BounceLoader color={color} l css={override} size={150} />\r\n                </div> */}\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"Fixed Savings\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell >Transaction ID </TableCell>\r\n                                    <TableCell >Date</TableCell>\r\n                                    <TableCell >Amount</TableCell>\r\n                                    <TableCell>Customer</TableCell>\r\n                                    <TableCell>Marketer</TableCell>\r\n                                    <TableCell>Account Number</TableCell>\r\n                                    <TableCell>Description</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className=\"pl-3 fw-normal\">1</TableCell>\r\n                                    <TableCell>\tTiger Nixon</TableCell>\r\n                                    <TableCell>John Bull</TableCell>\r\n                                    <TableCell>1234567890</TableCell>\r\n                                    <TableCell>\tEsusu</TableCell>\r\n                                    <TableCell>08076895837</TableCell>\r\n                                    <TableCell>$320,800</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default FixedSavingsRep","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allmarketers\\Allmarketers.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\OngoingLoans\\OngoingLoans.jsx",["563","564"],"import { Grid } from \"@material-ui/core\";\r\nimport { css } from \"@emotion/react\";\r\nimport useStyles from '../styles'\r\n// import { BounceLoader } from \"react-spinners\";\r\nimport {\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell,\r\n    // Chip\r\n} from \"@material-ui/core\";\r\n//   import useStyles from \"./styles\";\r\nimport { Fragment, useState } from \"react\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport ActionButton from \"./ActionButton\";\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     tableOverflow: {\r\n//         overflow: 'auto'\r\n//     }\r\n// }))\r\nconst override = css`\r\ndisplay: block;\r\nmargin: 0 auto;\r\nborder-color: green;\r\nalign-items: center;\r\n`;\r\n\r\n\r\nconst OngoingLoans = () => {\r\n\r\n    const classes = useStyles();\r\n    // let [color, setColor] = useState(\"#ADD8E6\");\r\n\r\n    return (\r\n        <Fragment>\r\n            <PageTitle title=\"Disbursed Loan\" />\r\n            <Grid container spacing={4}>\r\n\r\n                {/* <div className=\"sweet-loading\">\r\n                    <BounceLoader color={color} l css={override} size={150} />\r\n                </div> */}\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"Disburse Loan Details\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell >ID </TableCell>\r\n                                    <TableCell >Loan Officer</TableCell>\r\n                                    <TableCell >Client Names</TableCell>\r\n                                    <TableCell>Account Number</TableCell>\r\n                                    <TableCell>Client Contact</TableCell>\r\n                                    <TableCell>Loan ID</TableCell>\r\n                                    <TableCell>Principal</TableCell>\r\n                                    <TableCell>Loan + Interest</TableCell>\r\n                                    <TableCell>Status</TableCell>\r\n                                    <TableCell>Payment Status</TableCell>\r\n                                    <TableCell>Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className=\"pl-3 fw-normal\">23</TableCell>\r\n                                    <TableCell>\tDaniel Yusuf</TableCell>\r\n                                    <TableCell>Yakuku John</TableCell>\r\n                                    <TableCell>Account Number</TableCell>\r\n                                    <TableCell>08080080808</TableCell>\r\n                                    <TableCell>123456</TableCell>\r\n                                    <TableCell>5000000</TableCell>\r\n                                    <TableCell>\t5400000</TableCell>\r\n                                    <TableCell>Approved</TableCell>\r\n                                    <TableCell>On-going loan</TableCell>\r\n                                    <TableCell>\r\n                                        <ActionButton />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default OngoingLoans","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\TotalDeposite.jsx",["565","566","567","568","569"],"import { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport { css } from \"@emotion/react\";\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport {\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell,\r\n    Chip\r\n} from \"@material-ui/core\";\r\n//   import useStyles from \"./styles\";\r\nimport { Fragment, useState } from \"react\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n        overflow: 'auto'\r\n    }\r\n}))\r\nconst override = css`\r\ndisplay: block;\r\nmargin: 0 auto;\r\nborder-color: green;\r\nalign-items: center;\r\n`;\r\n\r\nconst TotalDeposite = () => {\r\n    const classes = useStyles();\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <PageTitle title=\"all deposite made today\" />\r\n            <Grid container spacing={4}>\r\n\r\n                {/* <div className=\"sweet-loading\">\r\n                    <BounceLoader color={color} l css={override} size={150} />\r\n                </div> */}\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"Deposit\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell >Transaction ID </TableCell>\r\n                                    <TableCell >Date</TableCell>\r\n                                    <TableCell >Amount</TableCell>\r\n                                    <TableCell>Depositors Name</TableCell>\r\n                                    <TableCell>Customer</TableCell>\r\n                                    <TableCell>Marketer</TableCell>\r\n                                    <TableCell>Account Number</TableCell>\r\n                                    <TableCell>Description</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className=\"pl-3 fw-normal\">1</TableCell>\r\n                                    <TableCell>1-2-2022</TableCell>\r\n                                    <TableCell>200000</TableCell>\r\n                                    <TableCell>Smart Dev</TableCell>\r\n                                    <TableCell>Sayae</TableCell>\r\n                                    <TableCell>Tobi</TableCell>\r\n                                    <TableCell>0000000443</TableCell>\r\n                                    <TableCell>meaningfull</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Widget>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TotalDeposite","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Dashboard.js",["570","571","572"],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\n\r\n\r\nexport default function Dashboard(props) {\r\n  const navigate = useNavigate();\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Total Deposite\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography className={classes.amount} size=\"xl\" weight=\"bold\" >\r\n                    <span>&#8358;</span>0\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  +11%\r\n                </Typography>\r\n                <Button className={classes.btnSeeMore} onClick={() => {\r\n                  navigate('total_deposite')\r\n                }}>See more</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Total Withdrawals\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"bold\" >\r\n                    <span>&#8358;</span>0\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  +11%\r\n                </Typography>\r\n                <Button className={classes.btnSeeMore} onClick={\r\n                  () => navigate('total_withdrawals')\r\n                }>See more</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Total Loans\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"bold\" noWrap>\r\n                    <span>&#8358;</span>0\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  0%\r\n                </Typography>\r\n                <Button className={classes.btnSeeMore} onClick={() => {\r\n                  navigate('ongoin_loan')\r\n                }}>See more</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"All Marketers\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"bold\" noWrap>\r\n                    7\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  +89%\r\n                </Typography>\r\n                <Button className={classes.btnSeeMore} onClick={() => { navigate('all_marketers') }}>See more</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"ALL CUSTOMER\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"bold\" >\r\n                    5\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  +11%\r\n                </Typography>\r\n                <Button className={classes.btnSeeMore} onClick={() => { navigate('all_customers') }}>See more</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"TOTAL EXPENDITURE\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"bold\" >\r\n                    1001001000\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  +89%\r\n                </Typography>\r\n                {/* <Button className={classes.btnSeeMore}>See more</Button> */}\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"UNPAID LOAN\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"bold\" noWrap>\r\n                    0\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  +89%\r\n                </Typography>\r\n                <Button className={classes.btnSeeMore} disabled>Last year</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"LOAN PRODUCT\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"bold\" noWrap>\r\n                    0\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  +89%\r\n                </Typography>\r\n                <Button className={classes.btnSeeMore} onClick={() => { navigate('new_product') }}>See more</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"TOTAL FIXED SAVINGS\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"bold\" noWrap>\r\n                    3577\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  +89%\r\n                </Typography>\r\n                <Button className={classes.btnSeeMore} onClick={() => { navigate('fixed_savings_rep') }}>See more</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"ALL BRANCHES\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"bold\" >\r\n                    2\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  +89%\r\n                </Typography>\r\n                <Button className={classes.btnSeeMore} onClick={() => { navigate('allbranchs') }}>See more</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"LOAN INTEREST\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"bold\" >\r\n                    0\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n\r\n              <Grid item xs={12} className={classes.rateGrid}>\r\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\r\n                  +89%\r\n                </Typography>\r\n                <Button className={classes.btnSeeMore} disabled>Last year</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n\r\n        {/* <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"App Performance\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Server Overview\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid> */}\r\n        {/* <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Daily Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={e => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid> */}\r\n        {/* {mock.bigStat.map(stat => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))} */}\r\n        {/* <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Support Requests\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\index.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Layout\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\AllBranch\\BtnAction.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\tables\\Tables.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\typography\\Typography.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Header\\Header.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\maps\\Maps.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\icons\\Icons.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\charts\\Charts.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\InterestRate.jsx",["573","574","575","576","577","578","579","580","581","582"],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\Fees.jsx",["583","584","585","586","587","588","589","590","591","592"],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\DeletedCustomer.jsx",["593","594","595","596","597","598","599","600","601","602","603","604","605"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\nfunction DeletedCustomer() {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [Loading, setLoading] = useState(false)\r\n    let [loading, setloading] = useState(true);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context)\r\n    const [data,setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n\r\n        const allCustomer = async() => {\r\n          const res = await api.service().fetch(\"/accounts/manage/?user_role=CUSTOMER&status=PENDING\",true);\r\n          console.log(res.data)\r\n          if(api.isSuccessful(res)){\r\n            setData(res.data.results)\r\n          }\r\n        setIsLoading(false);\r\n    \r\n        }\r\n\r\n        allCustomer();\r\n      },[])\r\n\r\n      const savingsFormState = (id) => ({\r\n        user: id,\r\n        frequency: null,\r\n        amount_per_cycle: null,\r\n        duration_in_months: null,\r\n        amount: null,\r\n        plan_type: null\r\n      });\r\n    \r\n    \r\n      const savingsValidationSchema = yupObject().shape({\r\n        user: yupNumber()\r\n        .required(\"User is required\"),\r\n        frequency: yupString()\r\n        .required(\"frequency is required\"),\r\n        amount_per_cycle: yupNumber()\r\n        .required(\"Amount cycle is required\"),\r\n        duration_in_months: yupNumber()\r\n        .required(\"Duration is required\"),\r\n        amount: yupNumber()\r\n        .required(\"Amount is required\"),\r\n        plan_type: yupString()\r\n        .required(\"Select a savings plan.\"),\r\n      });\r\n\r\n\r\n      const savings = async(values) => {\r\n        setLoading(true);\r\n        console.log(values)\r\n\r\n        const response = await api\r\n            .service()\r\n            .push(\"/dashboard/savings-plan/add/\",values,true)\r\n\r\n        if(api.isSuccessful(response)){\r\n        setTimeout( () => {\r\n            toast.success(\"Savings Plan successfully added!\");\r\n            // navigate(\"/admin/allbranch\",{replace: true})\r\n        },0);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    \r\n    const activateCustomer = async(id) => {\r\n        const res = await api.service().fetch(`https://fundhill-api.herokuapp.com/accounts/auth/${id}/activate/`,true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n            setTimeout( () => {\r\n                toast.success(\"Successfully activated customer!\");\r\n            },0);\r\n            }\r\n  \r\n      }\r\n    const deactivateCustomer = async(id) => {\r\n        const res = await api.service().fetch(`https://fundhill-api.herokuapp.com/accounts/auth/${id}/deactivate/`,true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n            setTimeout( () => {\r\n                toast.success(\"Successfully deactivated customer!\");\r\n            },0);\r\n            }\r\n  \r\n      }\r\n      \r\n  return (\r\n<Fragment>\r\n    <PageTitle title=\"Fundhill\" />\r\n    <Grid container spacing={4}>\r\n      {\r\n        isLoading ?\r\n          (\r\n\r\n\r\n            <div className=\"sweet-loading\">\r\n              <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n            </div>\r\n\r\n          )\r\n          :\r\n          (\r\n            <Grid item xs={12}>\r\n              <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                <Table className=\"mb-0\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell >Full Name </TableCell>\r\n                      <TableCell >Account Number </TableCell>\r\n                      <TableCell >Telephone </TableCell>\r\n                      <TableCell>Email</TableCell>\r\n                      <TableCell>Marketer</TableCell>\r\n                      <TableCell>Status</TableCell>\r\n                      <TableCell>Action</TableCell>\r\n\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data.map((customer) => (\r\n                      <TableRow key={customer?.id}>\r\n                        <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\r\n                        <TableCell>{customer?.first_name} {customer?.last_name} </TableCell>\r\n                        <TableCell>{customer?.account_number}</TableCell>\r\n                        <TableCell>{customer?.phone}</TableCell>\r\n                        <TableCell>{customer?.email}</TableCell>\r\n                        <TableCell>{customer?.agent.first_name} </TableCell>\r\n                        <TableCell>\r\n                          <ActionButton />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </Widget>\r\n            </Grid>\r\n          )\r\n      }\r\n\r\n    </Grid>\r\n  </Fragment>\r\n    )\r\n}\r\n\r\nexport default DeletedCustomer","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\PendingCustomer.jsx",["606","607","608","609","610","611","612","613","614","615","616","617","618","619"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nfunction PendingCustomer() {\r\n  const classes = useStyles();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [Loading, setLoading] = useState(false)\r\n    let [loading, setloading] = useState(true);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context)\r\n    const [data,setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n\r\n        const allCustomer = async() => {\r\n          const res = await api.service().fetch(\"/accounts/manage/?user_role=CUSTOMER&status=PENDING\",true);\r\n          console.log(res.data)\r\n          if(api.isSuccessful(res)){\r\n            setData(res.data.results)\r\n          }\r\n        setIsLoading(false);\r\n    \r\n        }\r\n\r\n        allCustomer();\r\n      },[])\r\n\r\n      const savingsFormState = (id) => ({\r\n        user: id,\r\n        frequency: null,\r\n        amount_per_cycle: null,\r\n        duration_in_months: null,\r\n        amount: null,\r\n        plan_type: null\r\n      });\r\n    \r\n    \r\n      const savingsValidationSchema = yupObject().shape({\r\n        user: yupNumber()\r\n        .required(\"User is required\"),\r\n        frequency: yupString()\r\n        .required(\"frequency is required\"),\r\n        amount_per_cycle: yupNumber()\r\n        .required(\"Amount cycle is required\"),\r\n        duration_in_months: yupNumber()\r\n        .required(\"Duration is required\"),\r\n        amount: yupNumber()\r\n        .required(\"Amount is required\"),\r\n        plan_type: yupString()\r\n        .required(\"Select a savings plan.\"),\r\n      });\r\n\r\n\r\n      const savings = async(values) => {\r\n        setLoading(true);\r\n        console.log(values)\r\n\r\n        const response = await api\r\n            .service()\r\n            .push(\"/dashboard/savings-plan/add/\",values,true)\r\n\r\n        if(api.isSuccessful(response)){\r\n        setTimeout( () => {\r\n            toast.success(\"Savings Plan successfully added!\");\r\n            // navigate(\"/admin/allbranch\",{replace: true})\r\n        },0);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    \r\n    const activateCustomer = async(id) => {\r\n        const res = await api.service().fetch(`/accounts/auth/${id}/activate/`,true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n            setTimeout( () => {\r\n                toast.success(\"Successfully activated customer!\");\r\n            },0);\r\n            }\r\n  \r\n      }\r\n    const deactivateCustomer = async(id) => {\r\n        const res = await api.service().fetch(`/accounts/auth/${id}/deactivate/`,true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n            setTimeout( () => {\r\n                toast.success(\"Successfully deactivated customer!\");\r\n            },0);\r\n            }\r\n  \r\n      }\r\n\r\n      const deleteCustomer = async(id) => {\r\n        const res = await api.service().remove(`/accounts/auth/${id}/`,true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n            setTimeout( () => {\r\n                toast.success(\"Successfully deleted customer!\");\r\n            },0);\r\n            }\r\n  \r\n      }\r\n  return (\r\n    <Fragment>\r\n    <PageTitle title=\"Fundhill\" />\r\n    <Grid container spacing={4}>\r\n      {\r\n        isLoading ?\r\n          (\r\n\r\n\r\n            <div className=\"sweet-loading\">\r\n              <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n            </div>\r\n\r\n          )\r\n          :\r\n          (\r\n            <Grid item xs={12}>\r\n              <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                <Table className=\"mb-0\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell >Full Name </TableCell>\r\n                      <TableCell >Account Number </TableCell>\r\n                      <TableCell >Telephone </TableCell>\r\n                      <TableCell>Email</TableCell>\r\n                      <TableCell>Marketer</TableCell>\r\n                      <TableCell>Status</TableCell>\r\n                      <TableCell>Action</TableCell>\r\n\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data.map((customer) => (\r\n                      <TableRow key={customer?.id}>\r\n                        <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\r\n                        <TableCell>{customer?.first_name} {customer?.last_name} </TableCell>\r\n                        <TableCell>{customer?.account_number}</TableCell>\r\n                        <TableCell>{customer?.phone}</TableCell>\r\n                        <TableCell>{customer?.email}</TableCell>\r\n                        <TableCell>{customer?.agent.first_name} </TableCell>\r\n                        <TableCell>\r\n                          <ActionButton />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </Widget>\r\n            </Grid>\r\n          )\r\n      }\r\n\r\n    </Grid>\r\n  </Fragment>\r\n  )\r\n}\r\n\r\nexport default PendingCustomer","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\expenses\\NewExpense.jsx",["620","621","622","623","624","625","626","627","628"],"import { Fragment,useContext, useState,useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form, useField,useFormikContext } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { css } from \"@emotion/react\";\r\nimport {DotLoader} from \"react-spinners\";\r\nimport { Box, Button,Select, Typography,MenuItem, TextareaAutosize } from '@material-ui/core'\r\nimport PageTitle from '../../../components/PageTitle/PageTitle'\r\nimport useStyles from './styles';\r\nimport {api} from \"../../../services\"\r\nimport {Context} from \"../../../context/Context\";\r\nimport {TextField} from \"../../../components/FormsUI\";\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\nfunction NewExpense() {\r\n    const classes = useStyles();\r\n\r\n    const {user} = useContext(Context)\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let [loading, setLoading] = useState(true);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const [bhead, setBHead] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [marketers,setMarketers] = useState([]);\r\n  \r\n  \r\n  \r\n  \r\n    const initialFormState = () => ({\r\n      agent: \"\",\r\n      amount: \"\",\r\n      desc: \"\",\r\n      // org_id: `${user.data.organisation}`,\r\n    });\r\n  \r\n    const validationSchema = yupObject().shape({\r\n      // agent: yupNumber()\r\n      // .required(\"Select agent \"),\r\n      amount: yupNumber()\r\n      .required(\"Branch Address is required\"),\r\n      desc: yupString()\r\n      .required(\"Enter a description\")\r\n    })\r\n  \r\n    useEffect(() => {\r\n        try {\r\n                  // setIsLoading(true)\r\n  \r\n      const allMarketer = async() => {\r\n        const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\",true);\r\n        // console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n            console.log(res.data)\r\n          setMarketers(res.data.results)\r\n        }\r\n  \r\n        // setIsLoading(false);\r\n  \r\n      }\r\n  \r\n      allMarketer();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    },[])\r\n  \r\n      const add_expenses = async(values) => {\r\n            try {\r\n                setIsLoading(true);\r\n                console.log(values)\r\n      \r\n                const response = await api\r\n                      .service()\r\n                      .push(\"dashboard/expense/add/\",values,true)\r\n      \r\n                if(api.isSuccessful(response)){\r\n                  setTimeout( () => {\r\n                    toast.success(\"Expenses successfully saved!\");\r\n                    navigate(\"/admin/dashboard/expense/new_expenses\",{replace: true})\r\n                  },0);\r\n                }\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n      }\r\n  \r\n  \r\n  return (\r\n<Fragment>\r\n            <PageTitle title=\"FUNDHILL\" />\r\n            <Box className={classes.formBox}>\r\n                <Typography variant='h5'>Add New Expense</Typography>\r\n                <Formik\r\n                    initialValues={initialFormState()}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={ async(values) => {\r\n                        await add_expenses(values)\r\n                    }}\r\n                >\r\n                    <Form style={{ marginBottom: 30 }} >\r\n                    <div className={classes.inputDiv}>\r\n                        <div className={classes.label}>\r\n                            <Typography >Marketer</Typography>\r\n                        </div>\r\n                    <TextField\r\n                        select={true} \r\n                        className={classes.input}\r\n                        name=\"agent\"  \r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                    >\r\n                        {marketers.map((marketer) => {\r\n                            return (\r\n                            <MenuItem key={marketer.id} value={marketer.id}>\r\n                                {marketer.first_name}\r\n                            </MenuItem>\r\n                            )\r\n                        })}\r\n                        </TextField>\r\n                    </div>\r\n                    <div className={classes.inputDiv}>\r\n                        <div className={classes.label}>\r\n                            <Typography >Amount</Typography>\r\n                        </div>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            variant=\"outlined\"\r\n                            size='small'\r\n                            name='amount'\r\n                            type='number'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={classes.inputDiv}>\r\n                        <div className={classes.label}>\r\n                            <Typography >Description</Typography>\r\n                        </div>\r\n                        <TextField\r\n                            name=\"desc\"\r\n                            className={classes.input}\r\n                            variant=\"outlined\"\r\n                            type='text'\r\n                            fullWidth={true}\r\n                        />\r\n                    </div>\r\n\r\n                    {\r\n                            isLoading ? \r\n                              ( <div className=\"sweet-loading\">\r\n                                  <DotLoader color={color} loading={loading} css={override}  size={80} />\r\n                                </div>)\r\n                              : (\r\n                                <Button type=\"submit\" className={classes.btnSubmit}>Submit</Button>\r\n                              )\r\n                          }\r\n                    </Form>\r\n                </Formik>\r\n                \r\n            </Box>\r\n        </Fragment>\r\n          )\r\n}\r\n\r\nexport default NewExpense","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\expenses\\AllExpenses.jsx",["629","630","631","632","633","634","635","636","637","638","639","640","641"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\n\r\n\r\nfunction AllExpenses() {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let [loading, setLoading] = useState(true);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context);\r\n    const [expenses,setExpenses] = useState([]);\r\n    const [currentId,setCurrentId] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        try {\r\n            setIsLoading(true)\r\n\r\n            const allExpenses = async() => {\r\n              const res = await api.service().fetch(\"/dashboard/expense/\",true);\r\n              console.log(res.data)\r\n              if(api.isSuccessful(res)){\r\n                  console.log(res.data.results)\r\n                setExpenses(res.data.results)\r\n              }\r\n        \r\n              setIsLoading(false);\r\n        \r\n            }\r\n    \r\n            allExpenses();\r\n        } catch (error) {\r\n            console.log(error)\r\n            setIsLoading(false)\r\n        }\r\n      },[]);\r\n\r\n      \r\n  return (\r\n<Fragment>\r\n      <PageTitle title=\"Fundhill\" />\r\n      <Grid container spacing={4}>\r\n        {\r\n          isLoading ?\r\n            (\r\n\r\n\r\n              <div className=\"sweet-loading\">\r\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n              </div>\r\n\r\n            )\r\n            :\r\n            (\r\n              <Grid item xs={12}>\r\n                <Widget title=\"All Expenses\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                  <Table className=\"mb-0\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell >Expense ID </TableCell>\r\n                        <TableCell >Marketer Expense </TableCell>\r\n                        <TableCell >Expense Amount </TableCell>\r\n                        <TableCell>Description</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {expenses.map((expense) => (\r\n                        <TableRow key={expense?.id}>\r\n                          <TableCell className=\"pl-3 fw-normal\">{expense?.id}</TableCell>\r\n                          <TableCell>{expense?.agent?.first_name} {expense?.agent?.last_name} </TableCell>\r\n                          <TableCell>{expense?.amount}</TableCell>\r\n                          <TableCell>{expense?.description}</TableCell>\r\n                          <TableCell>\r\n                          <ActionButton setCurrentId={expense?.id}  />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Widget>\r\n              </Grid>\r\n            )\r\n        }\r\n\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AllExpenses","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\OngoingLoan.jsx",["642","643","644","645","646","647","648","649","650","651","652","653"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\n\r\nfunction OngoingLoan() {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let [loading, setLoading] = useState(true);\r\n    const [loader, setLoader] = useState(false);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context)\r\n    const [data,setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            setIsLoading(true)\r\n\r\n            const allCustomer = async() => {\r\n              const res = await api.service().fetch(\"/dashboard/loan/?status=PENDING\",true);\r\n              console.log(res.data)\r\n              if(api.isSuccessful(res)){\r\n                setData(res.data.results)\r\n              }\r\n            setIsLoading(false);\r\n        \r\n            }\r\n    \r\n            allCustomer();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n      },[])\r\n\r\n      const approve_loan = async(values) => {\r\n            try {\r\n                setLoader(true);\r\n                console.log(values)\r\n        \r\n                const response = await api\r\n                    .service()\r\n                    .push(\"/dashboard/loan/action/\",values,true)\r\n        \r\n                if(api.isSuccessful(response)){\r\n                setTimeout( () => {\r\n                    toast.success(\"Successfully approved loan!\");\r\n                    // navigate(\"/admin/dashboard/add_borrower\",{replace: true});\r\n                },0);\r\n                }\r\n                setLoader(false);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n    }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageTitle title=\"Fundhill\" />\r\n      <Grid container spacing={4}>\r\n        {\r\n          isLoading ?\r\n            (\r\n\r\n\r\n              <div className=\"sweet-loading\">\r\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n              </div>\r\n\r\n            )\r\n            :\r\n            (\r\n              <Grid item xs={12}>\r\n                <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                  <Table className=\"mb-0\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell > Names </TableCell>\r\n                        <TableCell > Amount + Interest </TableCell>\r\n                        <TableCell > Account Number </TableCell>\r\n                        <TableCell> Loan Product </TableCell>\r\n                        <TableCell> Payback Date </TableCell>\r\n                        <TableCell>Status</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.map((customer) => (\r\n                        <TableRow key={customer?.id}>\r\n                          <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\r\n                          <TableCell>{customer?.borrower?.first_name} {customer?.borrower?.last_name} </TableCell>\r\n                          <TableCell>{customer?.amount_to_repay}</TableCell>\r\n                          <TableCell>{customer?.account_number}</TableCell>\r\n                          <TableCell>{customer?.loan_product.name}</TableCell>\r\n                          <TableCell>{customer?.final_due_date}</TableCell>\r\n                          <TableCell>{customer?.date_created} </TableCell>\r\n                          <TableCell>{customer?.status}</TableCell>\r\n                          <TableCell>\r\n                            <ActionButton />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Widget>\r\n              </Grid>\r\n            )\r\n        }\r\n\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default OngoingLoan","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\NewProduct.jsx",["654","655","656","657","658","659","660","661","662","663"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { useNavigate} from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\n\r\nfunction NewProduct() {\r\n\r\n        const classes = useStyles();\r\n        const [isLoading, setIsLoading] = useState(false);\r\n        let [loading, setLoading] = useState(true);\r\n        let [color, setColor] = useState(\"#ADD8E6\");\r\n        const {user} = useContext(Context)\r\n        const [data, setData] = useState([]);\r\n        const  navigate = useNavigate();\r\n\r\n\r\n\r\n\r\n        useEffect(  () => {\r\n                try {\r\n                    setIsLoading(true)\r\n\r\n                    const newProduct = async() => {\r\n                        const products = await api\r\n                        .service()\r\n                        .fetch(\"/dashboard/loan-product\",true);\r\n                        console.log(products.data.results)\r\n                        \r\n                    if((api.isSuccessful(products))){\r\n                        setData(products.data.results);\r\n                        setIsLoading(false)\r\n                    }else{\r\n                        setIsLoading(true)\r\n                    }\r\n                            }\r\n                            newProduct();\r\n                        } catch (error) {\r\n                            console.log(error)\r\n                        }\r\n\r\n                }, [])\r\n\r\n        const initialFormState = () => ({\r\n            name: \"\",\r\n            mgt_charges: null,\r\n            interest: null,\r\n        });\r\n\r\n        const validationSchema = yupObject().shape({\r\n            name: yupString()\r\n            .required(\"Product name is required\"),\r\n            mgt_charges: yupNumber()\r\n            .required(\"Managment Charges is required\"),\r\n            interest: yupNumber()\r\n            .required(\"interest rate is required\"),\r\n        });\r\n\r\n        const add_product = async(values) => {\r\n                try {\r\n                    setIsLoading(true);\r\n                    console.log(values)\r\n        \r\n                    const response = await api\r\n                        .service()\r\n                        .push(\"dashboard/loan-product/add/\",values,true)\r\n        \r\n                    if(api.isSuccessful(response)){\r\n                    setTimeout( () => {\r\n                        toast.success(\"Loan Product successfully created!\");\r\n                        // navigate(\"/dashboard/loan-product\",{replace: true});\r\n                    },0);\r\n                    }\r\n                    setIsLoading(false);\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n    }\r\n  return (\r\n<Fragment>\r\n      <PageTitle title=\"Fundhill\" />\r\n      <Grid container spacing={4}>\r\n        {\r\n          isLoading ?\r\n            (\r\n\r\n\r\n              <div className=\"sweet-loading\">\r\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n              </div>\r\n\r\n            )\r\n            :\r\n            (\r\n              <Grid item xs={12}>\r\n                <Widget title=\"All Expenses\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                  <Table className=\"mb-0\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell >Product ID </TableCell>\r\n                        <TableCell > Product </TableCell>\r\n                        <TableCell > Interest (%) </TableCell>\r\n                        <TableCell> MGT Charges (%) </TableCell>\r\n                        <TableCell>Action</TableCell>\r\n\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.map((product) => (\r\n                        <TableRow key={product?.id}>\r\n                          <TableCell className=\"pl-3 fw-normal\">{product?.id}</TableCell>\r\n                          <TableCell >{product?.name}</TableCell>\r\n                          <TableCell>{product?.interest}</TableCell>\r\n                          <TableCell>{product?.mgt_charges}</TableCell>\r\n                          <TableCell>\r\n                            <ActionButton />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Widget>\r\n              </Grid>\r\n            )\r\n        }\r\n\r\n      </Grid>\r\n    </Fragment>\r\n      )\r\n}\r\n\r\nexport default NewProduct","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\PendingLoan.jsx",["664","665","666","667","668","669","670","671","672","673","674","675"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nfunction PendingLoan() {\r\n\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let [loading, setLoading] = useState(true);\r\n    const [loader, setLoader] = useState(false);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context)\r\n    const [data,setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            setIsLoading(true)\r\n\r\n            const allCustomer = async() => {\r\n              const res = await api.service().fetch(\"/dashboard/loan/?status=PENDING\",true);\r\n              console.log(res.data)\r\n              if(api.isSuccessful(res)){\r\n                setData(res.data.results)\r\n              }\r\n            setIsLoading(false);\r\n        \r\n            }\r\n    \r\n            allCustomer();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n      },[])\r\n\r\n      const approve_loan = async(values) => {\r\n            try {\r\n                setLoader(true);\r\n                console.log(values)\r\n        \r\n                const response = await api\r\n                    .service()\r\n                    .push(\"/dashboard/loan/action/\",values,true)\r\n        \r\n                if(api.isSuccessful(response)){\r\n                setTimeout( () => {\r\n                    toast.success(\"Successfully approved loan!\");\r\n                    // navigate(\"/admin/dashboard/add_borrower\",{replace: true});\r\n                },0);\r\n                }\r\n                setLoader(false);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n    }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageTitle title=\"Fundhill\" />\r\n      <Grid container spacing={4}>\r\n        {\r\n          isLoading ?\r\n            (\r\n\r\n\r\n              <div className=\"sweet-loading\">\r\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n              </div>\r\n\r\n            )\r\n            :\r\n            (\r\n              <Grid item xs={12}>\r\n                <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                  <Table className=\"mb-0\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell > Names </TableCell>\r\n                        <TableCell > Amount + Interest </TableCell>\r\n                        <TableCell > Account Number </TableCell>\r\n                        <TableCell> Loan Product </TableCell>\r\n                        <TableCell> Payback Date </TableCell>\r\n                        <TableCell>Status</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.map((customer) => (\r\n                        <TableRow key={customer?.id}>\r\n                          <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\r\n                          <TableCell>{customer?.borrower?.first_name} {customer?.borrower?.last_name} </TableCell>\r\n                          <TableCell>{customer?.amount_to_repay}</TableCell>\r\n                          <TableCell>{customer?.account_number}</TableCell>\r\n                          <TableCell>{customer?.loan_product.name}</TableCell>\r\n                          <TableCell>{customer?.final_due_date}</TableCell>\r\n                          <TableCell>{customer?.date_created} </TableCell>\r\n                          <TableCell>{customer?.status}</TableCell>\r\n                          <TableCell>\r\n                            <ActionButton />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Widget>\r\n              </Grid>\r\n            )\r\n        }\r\n\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PendingLoan","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\AddBorrower.jsx",["676","677","678","679","680","681","682","683","684","685","686","687"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { useNavigate} from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\n\r\nfunction AddBorrower() {\r\n    const classes = useStyles();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context)\r\n    const [marketers,setMarketers] = useState([]);\r\n    const [branches,setBranches] = useState([]);\r\n    const [customers,setCustomers] = useState([]);\r\n    const [products,setProducts] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n\r\nuseEffect(() => {\r\n    setIsLoading(true)\r\n\r\n    const allCustomer = async() => {\r\n        const res = await api.service().fetch(\"/accounts/manage/?user_role=CUSTOMER\",true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n          setCustomers(res.data.results)\r\n        }\r\n  \r\n      // setIsLoading(false);\r\n  \r\n      }\r\n  \r\n      allCustomer();\r\n\r\n    const allMarketer = async() => {\r\n        const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\",true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n          //   console.log(res)\r\n          setMarketers(res.data.results)\r\n        }\r\n  \r\n        // setIsLoading(false);\r\n  \r\n      }\r\n\r\n      allMarketer();\r\n\r\n    const allBranches = async() => {\r\n        const res = await api.service().fetch(\"/dashboard/branches/\",true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n          setBranches(res.data.results)\r\n        }\r\n  \r\n        setIsLoading(false);\r\n  \r\n      }\r\n\r\n      allBranches();\r\n\r\n\r\n      const newProduct = async() => {\r\n            const res = await api\r\n            .service()\r\n            .fetch(\"/dashboard/loan-product\",true);\r\n            console.log(res.data.results)\r\n\r\n            if((api.isSuccessful(res))){\r\n            setProducts(res.data.results);\r\n            setIsLoading(false)\r\n            }\r\n                }\r\n\r\n        newProduct();\r\n\r\n      setIsLoading(false);\r\n\r\n  },[]);\r\n\r\n\r\n            const initialFormState = (id) => ({\r\n                borrower: id,\r\n                loan_product: null,\r\n                amount: null,\r\n                branch: null,\r\n                category: \"\",\r\n                payment_frequency: \"\",\r\n                loan_period_in_months: null,\r\n                payment_schedule: \"\",\r\n                loan_officer: null,\r\n                organisation: user.data.organisation\r\n            });\r\n\r\n            const validationSchema = yupObject().shape({\r\n                borrower: yupNumber()\r\n                .required(\"Please select a valid customer\"),\r\n                loan_product: yupNumber()\r\n                .required(\"Select a loan product\"),\r\n                amount: yupNumber()\r\n                .required(\"Enter an amount to be disburse\"),\r\n                category: yupString()\r\n                .required(\"Please select a category.\"),\r\n                payment_frequency: yupString()\r\n                .required(\"Select a payment frequency\"),\r\n                payment_schedule: yupString()\r\n                .required(\"Select a payment schedule\"),\r\n                // branch: yupNumber()\r\n                // .required(\"Select a branch name\"),\r\n                loan_period_in_months: yupNumber()\r\n                .required(\"Enter loan period\"),\r\n                loan_officer: yupNumber()\r\n                .required(\"Select a loan officer\"),\r\n\r\n            });\r\n\r\n            const add_borrower = async(values) => {\r\n                setLoader(true);\r\n                console.log(values)\r\n\r\n                const response = await api\r\n                    .service()\r\n                    .push(\"/dashboard/loan/add/\",values,true)\r\n\r\n                if(api.isSuccessful(response)){\r\n                setTimeout( () => {\r\n                    toast.success(\"Successfully assign loan!\");\r\n                    navigate(\"/admin/dashboard/add_borrower\",{replace: true});\r\n                },0);\r\n                }\r\n                setLoader(false);\r\n            }\r\n\r\n  return (\r\n<Fragment>\r\n      <PageTitle title=\"Fundhill\" />\r\n      <Grid container spacing={4}>\r\n        {\r\n          isLoading ?\r\n            (\r\n\r\n\r\n              <div className=\"sweet-loading\">\r\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n              </div>\r\n\r\n            )\r\n            :\r\n            (\r\n              <Grid item xs={12}>\r\n                <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                  <Table className=\"mb-0\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell >Full Name </TableCell>\r\n                        <TableCell >Account Number </TableCell>\r\n                        <TableCell >Telephone </TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {customers.map((customer) => (\r\n                        <TableRow key={customer?.id}>\r\n                          <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\r\n                          <TableCell>{customer?.first_name} {customer?.last_name} </TableCell>\r\n                          <TableCell>{customer?.account_number}</TableCell>\r\n                          <TableCell>{customer?.phone}</TableCell>\r\n                          <TableCell>{customer?.email}</TableCell>\r\n                          <TableCell>{customer?.agent.first_name} </TableCell>\r\n                          <TableCell>\r\n                            <ActionButton />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Widget>\r\n              </Grid>\r\n            )\r\n        }\r\n\r\n      </Grid>\r\n    </Fragment>\r\n          )\r\n}\r\n\r\nexport default AddBorrower","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\NewCustomer.jsx",["688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoaderk,DotLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Box,\r\n  Select,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\nimport {DateTimePicker} from \"../../../components/FormsUI\"\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nfunction genPassword() {\r\n  let chars = \"0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n  let passwordLength = 12;\r\n  let password = \"\";\r\nfor (let i = 0; i <= passwordLength; i++) {\r\n let randomNumber = Math.floor(Math.random() * chars.length);\r\n password += chars.substring(randomNumber, randomNumber +1);\r\n}\r\n      return password;\r\n}\r\n\r\nfunction NewCustomer() {\r\n  \r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loading,setLoading] = useState(true)\r\n  const [color,setColor] = useState(\"#ADD8E6\");\r\n  const navigate = useNavigate();\r\n  const {user} = useContext(Context);\r\n  const [marketers,setMarketers] = useState([]);\r\n\r\n\r\n\r\n\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [id_document, setIdDocument] = useState(null);\r\n  const [utility_bill, setUtilityBill] = useState(null);\r\n \r\n  const [bvn, setBvn] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n\r\n    const allMarketer = async() => {\r\n      const res = await api.service().fetch(\"/accounts/manage/?is_staff=True&user_role=AGENT\",true);\r\n      // console.log(res.data)\r\n      if(api.isSuccessful(res)){\r\n        //   console.log(res)\r\n        setMarketers(res.data.results)\r\n      }\r\n\r\n      setIsLoading(false);\r\n\r\n    }\r\n\r\n    allMarketer();\r\n  },[])\r\n  \r\n\r\n\r\n  const handleAvatarOnChange = (file) => {\r\n    setAvatar(file[0])\r\n  }\r\n\r\n\r\n  const handleUtilityOnChange = (file) => {\r\n    setUtilityBill(file[0])\r\n  }\r\n\r\n\r\n  const handleDocOnChange = (file) => {\r\n    setIdDocument(file[0])\r\n  }\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        // setLoading(false)\r\n        let data = new FormData(e.target);\r\n        data.append(\"user_role\",\"CUSTOMER\");\r\n        data.append(\"password\",genPassword());\r\n        data.append(\"avatar\",avatar);\r\n        data.append(\"id_document\",id_document);\r\n        data.append(\"utility_bill\",utility_bill);\r\n        data.append(\"country\",\"Nigeria\");\r\n        console.log(data)\r\n\r\n\r\n\r\n        let values = Object.fromEntries(data.entries())\r\n        // let remains = {\r\n        //   user_role: \"CUSTOMER\",\r\n        //   password: genPassword()\r\n        // }\r\n        // let values = Object.assign(data,remains)\r\n        // values.append(\"user_role\",\"CUSTOMER\");\r\n        // values.append(\"password\",genPassword());\r\n\r\n        console.log(values);\r\n\r\n    const response = await api.service().push(`/accounts/manage/signup/?org_id=${user.data.organisation}`,data,true,true);\r\n\r\n    if(api.isSuccessful(response)){\r\n      setTimeout(() => {\r\n        \r\n        toast.success(\"Customer registration was successfully\");\r\n        navigate(\"/admin/dashboard/newcustomer\",{replace: true})\r\n        setIsLoading(false)\r\n\r\n      },0);\r\n    }\r\n\r\n        setIsLoading(false)\r\n        // setLoading(false)\r\n\r\n    }\r\n  return (\r\n    <Fragment>\r\n    <PageTitle title=\"Add New Branch\" />\r\n    <Box className={classes.formBox}>\r\n        <Typography variant='h5'>New Customer</Typography>\r\n        <form style={{ marginBottom: 30 }} onSubmit={handleSubmit} >\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Title</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='title'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >First Name</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='first_name'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Middle Name</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='middle_name'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Last Name</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='last_name'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Gender</Typography>\r\n                </div>\r\n                <Select\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='gender'\r\n                    type='text'\r\n                    required\r\n                >   \r\n                    <MenuItem>Select One</MenuItem>\r\n                    <MenuItem value={\"M\"} >Male</MenuItem>\r\n                    <MenuItem value={\"F\"}>Female</MenuItem>\r\n                </Select>\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Date of Birth</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='dob'\r\n                    type=\"date\"\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Profile Photo</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    type='file'\r\n                    required\r\n                    onChange={(e)  => handleAvatarOnChange(e.target.files)}\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >ID</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    type='file'\r\n                    required\r\n                    onChange={(e)  => handleDocOnChange(e.target.files)}                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Utility Bill</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    type='file'\r\n                    required\r\n                    onChange={(e)  => handleUtilityOnChange(e.target.files)}\r\n                     />\r\n            </div> \r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >BVN</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='bvn'\r\n                    type='text'\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Currency</Typography>\r\n                </div>\r\n                <Select\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='currency'\r\n                    type='text'\r\n                    required\r\n                >   \r\n                    <MenuItem>Select One</MenuItem>\r\n                    <MenuItem value={\"NGN\"} >NGN</MenuItem>\r\n                    <MenuItem value={\"USD\"}>USD</MenuItem>\r\n                </Select>\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Email</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='email'\r\n                    type='email'\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Residential Address</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='residential_address'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Business Address</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='business_address'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Phone Number</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='phone'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >State</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='state'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >City</Typography>\r\n                </div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='middle_name'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                        <div className={classes.label}>\r\n                            <Typography >Marketer</Typography>\r\n                        </div>\r\n                    <TextField\r\n                        select={true} \r\n                        className={classes.input}\r\n                        name=\"agent_id\"  \r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                    >\r\n                        {marketers.map((marketer) => {\r\n                            return (\r\n                            <MenuItem key={marketer.id} value={marketer.id}>\r\n                                {marketer.first_name}\r\n                            </MenuItem>\r\n                            )\r\n                        })}\r\n                        </TextField>\r\n                </div>\r\n                {\r\n                            isLoading ? \r\n                              ( <div className=\"sweet-loading\">\r\n                                  <DotLoader color={color} loading={loading} css={override}  size={80} />\r\n                                </div>)\r\n                              : (\r\n                                <Button type=\"submit\" className={classes.btnSubmit}>Create Account</Button>\r\n                              )\r\n                          }      \r\n              </form>\r\n    </Box>\r\n</Fragment>\r\n  )\r\n}\r\n\r\nexport default NewCustomer","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\AllCustomer.jsx",["708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader,DotLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nfunction AllCustomer() {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [Loading, setLoading] = useState(false)\r\n    let [loading, setloading] = useState(true);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context)\r\n    const [data,setData] = useState([]);\r\n    const [marketers,setMarketers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n\r\n        const allCustomer = async() => {\r\n          const res = await api.service().fetch(\"/accounts/manage/?user_role=CUSTOMER&status=VERIFIED\",true);\r\n          console.log(res.data)\r\n          if(api.isSuccessful(res)){\r\n            setData(res.data.results)\r\n          }\r\n        setIsLoading(false);\r\n    \r\n        }\r\n\r\n        allCustomer();\r\n      },[])\r\n\r\n      const savingsFormState = (id) => ({\r\n        user: id,\r\n        frequency: \"\",\r\n        amount_per_cycle: null,\r\n        duration_in_months: null,\r\n        amount: null,\r\n        plan_type: \"\"\r\n      });\r\n    \r\n    \r\n      const savingsValidationSchema = yupObject().shape({\r\n        user: yupNumber()\r\n        .required(\"User is required\"),\r\n        frequency: yupString()\r\n        .required(\"frequency is required\"),\r\n        amount_per_cycle: yupNumber()\r\n        .required(\"Amount cycle is required\"),\r\n        duration_in_months: yupNumber()\r\n        .required(\"Duration is required\"),\r\n        amount: yupNumber()\r\n        .required(\"Amount is required\"),\r\n        plan_type: yupString()\r\n        .required(\"Select a savings plan.\"),\r\n      });\r\n\r\n\r\n      const savings = async(values) => {\r\n        setLoading(true);\r\n        console.log(values)\r\n\r\n        const response = await api\r\n            .service()\r\n            .push(\"/dashboard/savings-plan/add/\",values,true)\r\n\r\n        if(api.isSuccessful(response)){\r\n        setTimeout( () => {\r\n            toast.success(\"Savings Plan successfully added!\");\r\n            // navigate(\"/admin/allbranch\",{replace: true})\r\n        },0);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n    \r\n        const allMarketer = async() => {\r\n          const res = await api.service().fetch(\"/accounts/manage/?is_staff=True&user_role=AGENT\",true);\r\n          // console.log(res.data)\r\n          if(api.isSuccessful(res)){\r\n            //   console.log(res)\r\n            setMarketers(res.data.results)\r\n          }\r\n    \r\n          setIsLoading(false);\r\n    \r\n        }\r\n    \r\n        allMarketer();\r\n      },[])\r\n\r\n\r\n    //   const initialFormState = (email) => ({\r\n    //     first_name: \"\",\r\n    //     middle_name: \"\",\r\n    //     last_name: \"\",\r\n    //     email: `${email}`,\r\n    //     residential_address: \"\",\r\n    //     business_address: \"\",\r\n    //     phone: \"\",   \r\n    //     agent_id: null,\r\n    //   });\r\n    \r\n      const validationSchema = yupObject().shape({\r\n        title: yupString()\r\n        .required(\"The title is required\"),\r\n        first_name: yupString()\r\n        .required(\"First name is required\"),\r\n        middle_name: yupString(),\r\n        last_name: yupString()\r\n        .required(\"Last name is required\"),\r\n        gender: yupString()\r\n        .required(\"Gender is required\"),\r\n        dob: yupString()\r\n        .required(\"Dirth of birth is required\"),\r\n        // avatar: yupString()\r\n        // .required(\"Profile Picture is required\"),\r\n        // country: yupString()\r\n        // .required(\"Please Select your country\"),\r\n        // state: yupString()\r\n        // .required(\"Please select your state\"),\r\n        // city: yupString()\r\n        // .required(\"Please select your city\")\r\n      })\r\n      const edit_customer = async(values,id) => {\r\n        setLoading(true);\r\n        console.log(values)\r\n\r\n        const response = await api\r\n            .service()\r\n            .update(`/accounts/auth/${id}/`,values,true)\r\n\r\n        if(api.isSuccessful(response)){\r\n        setTimeout( () => {\r\n            toast.success(\"Customer profile successfully updated!!\");\r\n            // navigate(\"/admin/allbranch\",{replace: true})\r\n        },0);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const deleteCustomer = async(id) => {\r\n        const res = await api.service().remove(`/accounts/auth/${id}/`,true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n            setTimeout( () => {\r\n                toast.success(\"Successfully deleted customer!\");\r\n            },0);\r\n            }\r\n  \r\n      }\r\n\r\n      const fundCustomer = async(id) => {\r\n        const res = await api.service().get(`/accounts/auth/${id}/`,true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n            setTimeout( () => {\r\n                toast.success(\"Transaction successfully\");\r\n            },0);\r\n            }\r\n  \r\n      }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageTitle title=\"Fundhill\" />\r\n      <Grid container spacing={4}>\r\n        {\r\n          isLoading ?\r\n            (\r\n\r\n\r\n              <div className=\"sweet-loading\">\r\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n              </div>\r\n\r\n            )\r\n            :\r\n            (\r\n              <Grid item xs={12}>\r\n                <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                  <Table className=\"mb-0\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell >Customer ID </TableCell>\r\n                        <TableCell >Full Name </TableCell>\r\n                        <TableCell >Account Number </TableCell>\r\n                        <TableCell >Telephone </TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>Marketer</TableCell>\r\n                        <TableCell>Status</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.map((customer) => (\r\n                        <TableRow key={customer?.id}>\r\n                          <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\r\n                          <TableCell>{customer?.first_name} {customer?.last_name} </TableCell>\r\n                          <TableCell>{customer?.account_number}</TableCell>\r\n                          <TableCell>{customer?.phone}</TableCell>\r\n                          <TableCell>{customer?.email}</TableCell>\r\n                          <TableCell>{customer?.agent.first_name} </TableCell>\r\n                          <TableCell>{customer?.status}</TableCell>\r\n                          <TableCell>\r\n                            <ActionButton />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Widget>\r\n              </Grid>\r\n            )\r\n        }\r\n\r\n      </Grid>\r\n    </Fragment>\r\n      )\r\n}\r\n\r\nexport default AllCustomer","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\DisbursedLoan.jsx",["725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\nfunction DisbursedLoan() {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let [loading, setLoading] = useState(true);\r\n    const [loader, setLoader] = useState(false);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context)\r\n    const [data,setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            setIsLoading(true)\r\n\r\n            const allCustomer = async() => {\r\n              const res = await api.service().fetch(\"/dashboard/loan/?status=PENDING\",true);\r\n              console.log(res.data)\r\n              if(api.isSuccessful(res)){\r\n                setData(res.data.results)\r\n              }\r\n            setIsLoading(false);\r\n        \r\n            }\r\n    \r\n            allCustomer();\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n      },[])\r\n\r\n      const approve_loan = async(values) => {\r\n            try {\r\n                setLoader(true);\r\n                console.log(values)\r\n        \r\n                const response = await api\r\n                    .service()\r\n                    .push(\"/dashboard/loan/action/\",values,true)\r\n        \r\n                if(api.isSuccessful(response)){\r\n                setTimeout( () => {\r\n                    toast.success(\"Successfully approved loan!\");\r\n                    // navigate(\"/admin/dashboard/add_borrower\",{replace: true});\r\n                },0);\r\n                }\r\n                setLoader(false);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n    }\r\n\r\n  return (\r\n    <div>DisbursedLoan</div>\r\n  )\r\n}\r\n\r\nexport default DisbursedLoan","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\MarketerAccount.jsx",["754","755","756","757","758","759","760","761","762","763","764","765"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\nfunction MarketerAccount() {\r\n  const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let [loading, setLoading] = useState(true);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context);\r\n    const [marketers,setMarketers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n\r\n        const allMarketerWallet = async() => {\r\n          const res = await api.service().fetch(\"/wallet/marketer/\",true);\r\n          console.log(res.data)\r\n          if(api.isSuccessful(res)){\r\n              console.log(res)\r\n            setMarketers(res.data.results)\r\n          }\r\n    \r\n          setIsLoading(false);\r\n    \r\n        }\r\n\r\n        allMarketerWallet();\r\n      },[])\r\n\r\n      const edit_marketer = async(values,id) => {\r\n        setLoading(true);\r\n        console.log(values)\r\n\r\n        const response = await api\r\n            .service()\r\n            .update(`/accounts/auth/${id}/`,values,true)\r\n\r\n        if(api.isSuccessful(response)){\r\n        setTimeout( () => {\r\n            toast.success(\"Marketer profile successfully updated!!\");\r\n            // navigate(\"/admin/allbranch\",{replace: true})\r\n        },0);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const fund_marketer = async(values,id) => {\r\n        setLoading(true);\r\n        console.log(values)\r\n\r\n        const response = await api\r\n            .service()\r\n            .push(`/wallet/marketer/${id}/fund-wallet/`,values,true)\r\n\r\n        if(api.isSuccessful(response)){\r\n        setTimeout( () => {\r\n            toast.success(\"Transaction successful\");\r\n            // navigate(\"/admin/allbranch\",{replace: true})\r\n        },0);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n\r\n      const deleteMarketer = async(id) => {\r\n        const res = await api.service().remove(`/accounts/auth/${id}/`,true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n            setTimeout( () => {\r\n                toast.success(\"Successfully deleted marketer!\");\r\n            },0);\r\n            }\r\n  \r\n      }\r\n\r\n  return (\r\n<Fragment>\r\n      <PageTitle title=\"Fundhill\" />\r\n      <Grid container spacing={4}>\r\n        {\r\n          isLoading ?\r\n            (\r\n\r\n\r\n              <div className=\"sweet-loading\">\r\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n              </div>\r\n\r\n            )\r\n            :\r\n            (\r\n              <Grid item xs={12}>\r\n                <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                  <Table className=\"mb-0\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell >Marketer ID </TableCell>\r\n                        <TableCell >Full Name </TableCell>\r\n                        <TableCell >Telephone </TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>Balance</TableCell>\r\n                        <TableCell>Role</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {marketers.map((marketer) => (\r\n                        <TableRow key={marketer?.id}>\r\n                          <TableCell className=\"pl-3 fw-normal\">{marketer?.id}</TableCell>\r\n                          <TableCell>{marketer?.first_name} {marketer?.last_name} </TableCell>\r\n                          <TableCell>{marketer?.phone}</TableCell>\r\n                          <TableCell>{marketer?.email}</TableCell>\r\n                          <TableCell> {marketer?.balance} </TableCell>\r\n                          <TableCell>{marketer?.user_role} </TableCell>\r\n                          <TableCell>\r\n                            <ActionButton />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Widget>\r\n              </Grid>\r\n            )\r\n        }\r\n\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default MarketerAccount","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\NewMarketer.jsx",["766","767","768","769","770","771"],"import { Formik, Form, Field } from \"formik\";\r\nimport { object as yupObject, string as yupString } from 'yup';\r\nimport { Fragment, useState,useContext } from \"react\";\r\nimport { api } from \"../../../services\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { css } from \"@emotion/react\";\r\nimport {DotLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport { Box, Button, FormControl,Select, Typography,MenuItem } from '@material-ui/core'\r\nimport PageTitle from '../../../components/PageTitle/PageTitle'\r\nimport useStyles from './styles';\r\nimport {TextField} from \"../../../components/FormsUI\"\r\n\r\n\r\n\r\nfunction genPassword() {\r\n    let chars = \"0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    let passwordLength = 12;\r\n    let password = \"\";\r\n for (let i = 0; i <= passwordLength; i++) {\r\n   let randomNumber = Math.floor(Math.random() * chars.length);\r\n   password += chars.substring(randomNumber, randomNumber +1);\r\n  }\r\n        return password;\r\n }\r\n\r\n// console.log(genPassword())\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst initialFormState = () => (\r\n    {\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  phone: \"\",\r\n  email: \"\",\r\n  user_role: \"\",\r\n  password: genPassword(),\r\n\r\n});\r\n\r\nconst validationSchema = yupObject().shape({\r\n  first_name: yupString()\r\n  .required(\"first name is required\"),\r\n  last_name: yupString()\r\n  .required(\"last name is require\"),\r\n  email: yupString()\r\n  .required(\"email is required\"),\r\n  phone: yupString()\r\n  .required(\"phone is required\"),\r\n  user_role: yupString()\r\n  .required(\"Marketer role is required\")\r\n})\r\n\r\nfunction NewMarketer() {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let [loading, setLoading] = useState(true);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    let {user} = useContext(Context);\r\n    // #90EE90\r\n    const navigate = useNavigate();\r\n  \r\n  \r\n    const marketer = async(values) => {\r\n       try {\r\n        setIsLoading(true);\r\n        console.log(values)\r\n        const response = await api\r\n              .service()\r\n              .push(`/accounts/manage/signup/?org_id=${user.data.organisation}`,values,true)\r\n\r\n        if(api.isSuccessful(response)){\r\n          setTimeout(() => {\r\n            toast.success('New marketer added successfully!');\r\n            navigate(\"/admin/dashboard/marketer/new_marketer\",{replace: true})\r\n          }, 0);\r\n        }\r\n        setIsLoading(false);\r\n       } catch (error) {\r\n            console.log(error)\r\n            setIsLoading(false);\r\n       }\r\n    }\r\n\r\n  return (\r\n    <Fragment>\r\n    <PageTitle title=\"Marketer\" />\r\n    <Box className={classes.formBox}>\r\n        <Typography variant='h5'>Add New Marketer</Typography>\r\n        <Formik\r\n            initialValues={initialFormState()}\r\n            validationSchema={validationSchema}\r\n            onSubmit={ async(values) => {\r\n                await marketer(values)\r\n            }}\r\n        >\r\n            <Form style={{ marginBottom: 30 }} >\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >First Name</Typography>\r\n                </div>\r\n                <TextField\r\n                    name=\"first_name\"\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Last Name</Typography>\r\n                </div>\r\n                <TextField\r\n                    name=\"last_name\"\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Email</Typography>\r\n                </div>\r\n                <TextField\r\n                    name=\"email\"\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    type='text'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Phone Number</Typography>\r\n                </div>\r\n                <TextField\r\n                    name=\"phone\"\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    type='number'\r\n                    required\r\n                />\r\n            </div>\r\n            <div className={classes.inputDiv}>\r\n                <div className={classes.label}>\r\n                    <Typography >Marketer Role</Typography>\r\n                </div>\r\n                <TextField\r\n                    select={true}\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    size='small'\r\n                    name='user_role'\r\n                    type='text'\r\n                    required\r\n                >   \r\n                    <MenuItem>Select One</MenuItem>\r\n                    <MenuItem value={\"MANAGER\"} >Manager</MenuItem>\r\n                    <MenuItem value={\"TELLER\"}>Teller</MenuItem>\r\n                    <MenuItem value={\"AGENT\"}>Agent</MenuItem>\r\n\r\n                </TextField>\r\n            </div>\r\n            {\r\n                    isLoading ? \r\n                      ( <div className=\"sweet-loading\">\r\n                          <DotLoader color={color} loading={loading} css={override}  size={80} />\r\n                        </div>)\r\n                      : (\r\n                        <Button type=\"submit\" className={classes.btnSubmit}>Submit</Button>\r\n                      )\r\n                  }\r\n            </Form>\r\n        </Formik>\r\n        \r\n    </Box>\r\n</Fragment>\r\n  )\r\n}\r\n\r\nexport default NewMarketer","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\auth\\login\\Login.js",["772","773","774","775","776","777","778","779","780"],"// CONTEXT\r\nimport { Context } from \"../../../../context/Context\";\r\n\r\n\r\n// import classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../../../context/UserContext\"\r\n\r\n\r\nimport assets from \"../../../../components/assets/\";\r\n\r\nimport { TextField, Button } from \"../../../../components/FormsUI\"\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Fade,\r\n  FormControl,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { css } from \"@emotion/react\";\r\nimport { DotLoader } from \"react-spinners\"\r\nimport { api } from \"../../../../services\";\r\n;\r\n\r\n\r\n\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\nconst registerInitialFormState = () => ({\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  \"org_name\": \"\",\r\n  \"org_type\": \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  password: \"\",\r\n  user_role: \"ADMIN\"\r\n});\r\n\r\nconst registerFormValidation = Yup.object().shape({\r\n  first_name: Yup.string()\r\n    .required('Required'),\r\n  last_name: Yup.string()\r\n    .required('Required'),\r\n  email: Yup.string()\r\n    .email('Invalid email.')\r\n    .required('Required'),\r\n  phone: Yup.number()\r\n    .integer()\r\n    .typeError('Please enter a valid phone number')\r\n    .required('Required'),\r\n  org_name: Yup.string()\r\n    .required('Required'),\r\n  org_type: Yup.string()\r\n    .required('Required'),\r\n  password: Yup.string()\r\n    .required('Required'),\r\n});\r\n\r\nconst loginInitialFormState = () => ({\r\n  email: \"\",\r\n  password: \"\",\r\n});\r\n\r\n\r\n\r\nconst loginFormValidation = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Invalid email.')\r\n    .required('Required'),\r\n  password: Yup.string()\r\n    .required('Required'),\r\n});\r\n\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n  // global\r\n  const userDispatch = useUserDispatch();\r\n  let [loading, setLoading] = useState(true);\r\n  let [color, setColor] = useState(\"#ADD8E6\");\r\n\r\n  const navigate = useNavigate();\r\n  // const history = useHistory();\r\n  const { dispatch, } = useContext(Context)\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeTabId, setActiveTabId] = useState(0);\r\n\r\n\r\n  const orgs = {\r\n    \"B\": \"MFB\",\r\n    \"I\": \"MFI\",\r\n    \"E\": \"ESUSU\",\r\n    \"C\": \"COOPERATIVE\"\r\n  }\r\n\r\n  const login = async (values) => {\r\n    setIsLoading(true);\r\n    console.log(values);\r\n    const response = await api\r\n      .service()\r\n      .push('/accounts/auth/signin/', values, true);\r\n\r\n    if (api.isSuccessful(response)) {\r\n      localStorage.setItem(\"token\", response?.data?.data?.token)\r\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: response?.data });\r\n      setTimeout(() => {\r\n        toast.success('Logged in successfully!');\r\n        // navigate(\"/admin/dashboard\",{replace: true})\r\n        navigate(\"/admin/dashboard/branch/allbranch\", { replace: true });\r\n      }, 0);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const register = async (values) => {\r\n    try {\r\n      setIsLoading(true);\r\n      console.log(values)\r\n      localStorage.setItem(\"email\", values.email);\r\n\r\n      const response = await api\r\n        .service()\r\n        .push(\"/accounts/manage/signup/\", values, true)\r\n\r\n      if (api.isSuccessful(response)) {\r\n        setTimeout(() => {\r\n          toast.success('Registration successfully!');\r\n          navigate(\"/auth/confirm_email\", { replace: true })\r\n        }, 0);\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setIsLoading(true);\r\n    }\r\n  }\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={assets.logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>FundHill</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n\r\n\r\n              <Formik\r\n                initialValues={loginInitialFormState()}\r\n                validationSchema={loginFormValidation}\r\n                onSubmit={async (values) => {\r\n                  await login(values)\r\n                }}\r\n              >\r\n                <Form>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    margin=\"normal\"\r\n                    placeholder=\"Email Adress\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                  />\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    margin=\"normal\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                  />\r\n                  <div className={classes.formButtons}>\r\n                    {isLoading ? (\r\n                      <CircularProgress size={26} className={classes.loginLoader} />\r\n                    ) : (\r\n                      <Button\r\n                        constiant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                      >\r\n                        Login\r\n                      </Button>\r\n                    )}\r\n                    <button\r\n                      className={classes.forgetButton}\r\n                    >\r\n                      Forget Password\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              </Formik>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography constiant=\"h2\" className={classes.subGreeting}>\r\n                Create your account\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <Formik\r\n                initialValues={registerInitialFormState()}\r\n                validationSchema={registerFormValidation}\r\n                onSubmit={async (values) => {\r\n                  await register(values)\r\n                }}\r\n              >\r\n                <Form>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name=\"first_name\"\r\n                    id=\"first_name\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    margin=\"normal\"\r\n                    placeholder=\"First Name\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                  />\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name=\"last_name\"\r\n                    id=\"last_name\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    margin=\"normal\"\r\n                    placeholder=\"Last Name\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                  />\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name=\"org_name\"\r\n                    id=\"org_name\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    margin=\"normal\"\r\n                    placeholder=\"Full Co-operation/Organization Name\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                  />\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    margin=\"normal\"\r\n                    placeholder=\"Email Adress\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                  />\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name=\"phone\"\r\n                    id=\"number\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    margin=\"normal\"\r\n                    placeholder=\"Enter your phone number\"\r\n                    type=\"number\"\r\n                    fullWidth\r\n                  />\r\n\r\n                  <FormControl style={{ marginTop: 2, width: '100%' }} >\r\n                    {/* <InputLabel id=\"demo-select-small\">Company Type</InputLabel> */}\r\n                    <Select\r\n                      variant=\"outlined\"\r\n                      labelid=\"demo-select-small\"\r\n                      id=\"demo-select-small\"\r\n                      name=\"org_type\"\r\n                      label=\"Company Type\"\r\n                      options={orgs}\r\n                    />\r\n                  </FormControl>\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    margin=\"normal\"\r\n                    placeholder=\"Address location of company\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                  />\r\n\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    InputProps={{\r\n                      classes: {\r\n                        underline: classes.textFieldUnderline,\r\n                        input: classes.textField,\r\n                      },\r\n                    }}\r\n                    margin=\"normal\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                  />\r\n\r\n                  <div className={classes.creatingButtonContainer}>\r\n                    {isLoading ? (\r\n                      <CircularProgress size={26} />\r\n                    ) : (\r\n                      <Button\r\n                        size=\"large\"\r\n                        constiant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        className={classes.createAccountButton}\r\n                      >\r\n                        Create your account\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </Form>\r\n              </Formik>\r\n\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\AllMarketer.jsx",["781","782","783","784","785","786","787","788","789","790","791","792","793","794"],"import {Fragment,useEffect,useContext,useState} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n// import \"./Dashboard.css\"\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {BounceLoader} from \"react-spinners\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from './styles';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\nfunction AllMarketer() {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let [loading, setLoading] = useState(true);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context);\r\n    const [marketers,setMarketers] = useState([]);\r\n    const [currentId,setCurrentId] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n\r\n        const allMarketer = async() => {\r\n          const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\",true);\r\n          console.log(res.data)\r\n          if(api.isSuccessful(res)){\r\n            //   console.log(res)\r\n            setMarketers(res.data.results)\r\n          }\r\n    \r\n          setIsLoading(false);\r\n    \r\n        }\r\n\r\n        allMarketer();\r\n      },[])\r\n\r\n\r\n      const edit_marketer = async(values,id) => {\r\n        setLoading(true);\r\n        console.log(values)\r\n\r\n        const response = await api\r\n            .service()\r\n            .update(`/accounts/auth/${id}/`,values,true)\r\n\r\n        if(api.isSuccessful(response)){\r\n        setTimeout( () => {\r\n            toast.success(\"Marketer profile successfully updated!!\");\r\n            // navigate(\"/admin/allbranch\",{replace: true})\r\n        },0);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const fund_marketer = async(values,id) => {\r\n            try {\r\n                setLoading(true);\r\n                console.log(values)\r\n\r\n                const response = await api\r\n                    .service()\r\n                    .push(`/wallets/marketers/${id}/fund-wallet/`,values,true)\r\n                if(api.isSuccessful(response)){\r\n                setTimeout( () => {\r\n                    toast.success(\"Transaction successful\");\r\n                    // navigate(\"/admin/allbranch\",{replace: true})\r\n                },0);\r\n                }\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n                }\r\n\r\n\r\n\r\n      const deleteMarketer = async(id) => {\r\n        const res = await api.service().remove(`/accounts/auth/${id}/`,true);\r\n        console.log(res.data)\r\n        if(api.isSuccessful(res)){\r\n            setTimeout( () => {\r\n                toast.success(\"Successfully deleted marketer!\");\r\n            },0);\r\n            }\r\n  \r\n      }\r\n  return (\r\n    <Fragment>\r\n      <PageTitle title=\"Fundhill\" />\r\n      <Grid container spacing={4}>\r\n        {\r\n          isLoading ?\r\n            (\r\n\r\n\r\n              <div className=\"sweet-loading\">\r\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n              </div>\r\n\r\n            )\r\n            :\r\n            (\r\n              <Grid item xs={12}>\r\n                <Widget title=\"All Marketers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                  <Table className=\"mb-0\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell >Marketer ID </TableCell>\r\n                        <TableCell >Full Name </TableCell>\r\n                        <TableCell >Telephone </TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>Role</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {marketers.map((marketer) => (\r\n                        <TableRow key={marketer?.id}>\r\n                          <TableCell className=\"pl-3 fw-normal\">{marketer?.id}</TableCell>\r\n                          <TableCell>{marketer?.first_name} {marketer?.last_name} </TableCell>\r\n                          <TableCell>{marketer?.phone}</TableCell>\r\n                          <TableCell>{marketer?.email}</TableCell>\r\n                          <TableCell>{marketer?.user_role} </TableCell>\r\n                          <TableCell>\r\n                          <ActionButton setCurrentId={marketer?.id}  />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Widget>\r\n              </Grid>\r\n            )\r\n        }\r\n\r\n      </Grid>\r\n    </Fragment>\r\n      )\r\n}\r\n\r\nexport default AllMarketer","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\auth\\login\\ConfirmEmail.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\OngoingLoans\\ActionButton.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allmarketers\\ActionButton.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\branch\\AllBranches.jsx",["795","796","797","798","799","800","801","802","803","804","805","806","807","808"],"import { Fragment, useState, useEffect, useContext } from 'react'\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n//   import useStyles from \"./styles\";\r\nimport PageTitle from \"../../../components/PageTitle\"\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport { Context } from \"../../../context/Context\"\r\nimport ActionButton from './ActionButton';\r\n\r\n\r\n\r\nconst override = css`\r\ndisplay: block;\r\nmargin: 0 auto;\r\nborder-color: green;\r\nalign-items: center;\r\n`;\r\n\r\nconst states = {\r\n  sent: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n  tableOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}))\r\nfunction AllBranches() {\r\n  const classes = useStyles();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  let [loading, setLoading] = useState(true);\r\n  let [color, setColor] = useState(\"#ADD8E6\");\r\n  const [data, setData] = useState([]);\r\n  const { user } = useContext(Context);\r\n  const [marketers, setMarketers] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [currentId,setCurrentId] = useState(\"\");\r\n\r\n  //  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\r\n  //  keys.shift(); // delete \"id\" key\r\n\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n\r\n    const allBranch = async () => {\r\n      const res = await api.service().fetch(\"/dashboard/branches/\", true);\r\n      console.log(res.data)\r\n      if (api.isSuccessful(res)) {\r\n        setData(res.data.results)\r\n      }\r\n\r\n      setIsLoading(false);\r\n\r\n    }\r\n\r\n    allBranch();\r\n  }, [])\r\n\r\n\r\n\r\n  const allBranch = async () => {\r\n    setIsLoading(true)\r\n    const res = await api.service().fetch(\"/dashboard/branches/\", true);\r\n    console.log(res.data)\r\n    if (api.isSuccessful(res)) {\r\n      setData(res.data.results)\r\n    }\r\n\r\n    setIsLoading(false);\r\n\r\n  }\r\n\r\n\r\n  const deleteBranch = async (id) => {\r\n    const res = await api.service().remove(`/dashboard/branches/${id}/`, true);\r\n    console.log(res.data)\r\n    if (api.isSuccessful(res)) {\r\n      setTimeout(() => {\r\n        toast.success(\"Successfully deleted branch?!\");\r\n        allBranch();\r\n        // setIsLoading(true)\r\n\r\n        // const allBranches = async() => {\r\n        //   const res = await api.service().fetch(\"/dashboard/branches/\",true);\r\n        //   console.log(res.data)\r\n        //   if(api.isSuccessful(res)){\r\n        //     setData(res.data.results)\r\n        //   }\r\n\r\n        //   setIsLoading(false);\r\n\r\n        // }\r\n\r\n        // allBranches();\r\n\r\n\r\n      }, 0);\r\n    }\r\n\r\n  }\r\n\r\n  const edit_branch = async (values, id) => {\r\n    setLoading(true);\r\n    console.log(values)\r\n\r\n    const response = await api\r\n      .service()\r\n      .update(`/dashboard/branches/${id}/`, values, true)\r\n\r\n    if (api.isSuccessful(response)) {\r\n      setTimeout(() => {\r\n        toast.success(\"branch? successfully updated!!\");\r\n        // navigate(\"/admin/dashboard/branch/allbranch\",{replace: true})\r\n        allBranch();\r\n      }, 0);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n\r\n    const allMarketer = async () => {\r\n      const res = await api.service().fetch(\"/accounts/manage/?is_staff=True&user_role=AGENT\", true);\r\n      // console.log(res.data)\r\n      if (api.isSuccessful(res)) {\r\n        //   console.log(res)\r\n        setMarketers(res.data.results)\r\n      }\r\n\r\n      setIsLoading(false);\r\n\r\n    }\r\n\r\n    allMarketer();\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageTitle title=\"Fundhill\" />\r\n      <Grid container spacing={4}>\r\n        {\r\n          isLoading ?\r\n            (\r\n\r\n\r\n              <div className=\"sweet-loading\">\r\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\r\n              </div>\r\n\r\n            )\r\n            :\r\n            (\r\n              <Grid item xs={12}>\r\n                <Widget title=\"All Branches\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                  <Table className=\"mb-0\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell >Branch ID </TableCell>\r\n                        <TableCell >Branch Name </TableCell>\r\n                        <TableCell >Branch Branch Location </TableCell>\r\n                        <TableCell>Head of Branch</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {data.map((branch) => (\r\n                        <TableRow key={branch?.id}>\r\n                          <TableCell className=\"pl-3 fw-normal\">{branch?.id}</TableCell>\r\n                          <TableCell>{branch?.name}</TableCell>\r\n                          <TableCell>{branch?.branch_address}</TableCell>\r\n                          <TableCell>{branch?.branch_head.first_name} {branch?.branch_head.last_name}</TableCell>\r\n                          <TableCell>\r\n                            <ActionButton setCurrentId={branch?.id}  />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Widget>\r\n              </Grid>\r\n            )\r\n        }\r\n\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AllBranches\r\n\r\n","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\branch\\NewBranch.jsx",["809","810","811","812","813","814","815","816","817"],"import { Fragment, useState,useEffect } from \"react\";\r\nimport { Link,useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form, useField,useFormikContext } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { css } from \"@emotion/react\";\r\nimport {DotLoader} from \"react-spinners\";\r\nimport { Box, Button, FormControl,Select, Typography,MenuItem } from '@material-ui/core'\r\nimport PageTitle from '../../../components/PageTitle/PageTitle'\r\nimport useStyles from './styles';\r\nimport {api} from \"../../../services\"\r\nimport {TextField} from \"../../../components/FormsUI\"\r\n\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\nconst NewBranch = () => {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    let [loading, setLoading] = useState(true);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const [bhead, setBHead] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [marketers,setMarketers] = useState([]);\r\n  \r\n\r\n  \r\n  \r\n    const initialFormState = () => ({\r\n      name: \"\",\r\n      branch_head_id: \"\",\r\n      branch_address: \"\",\r\n    });\r\n  \r\n    const validationSchema = yupObject().shape({\r\n      name: yupString()\r\n      .required(\"Branch name is required\"),\r\n      branch_address: yupString()\r\n      .required(\"Branch Address is required\"),\r\n      branch_head_id: yupNumber()\r\n    //   .required(\"This field is required\")\r\n    })\r\n  \r\n    useEffect(() => {\r\n        try {\r\n   \r\n            const allMarketer = async() => {\r\n                const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\",true);\r\n                console.log(res.data.results)\r\n                console.log(\"what is this runinnng\")\r\n                console.log(res.data)\r\n                if(api.isSuccessful(res)){\r\n                  setMarketers(res.data.results)\r\n                }\r\n          \r\n                setIsLoading(false);\r\n              }\r\n              allMarketer();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n                         setIsLoading(true)\r\n\r\n\r\n    },[])\r\n\r\n\r\n  \r\n      const create_branch = async(values) => {\r\n        try {\r\n            setIsLoading(true);\r\n            console.log(values)\r\n  \r\n            const response = await api\r\n                  .service()\r\n                  .push(\"dashboard/branches/create-branch/\",values,true)\r\n  \r\n            if(api.isSuccessful(response)){\r\n              setTimeout( () => {\r\n                toast.success(\"Branch successfully created!\");\r\n                navigate(\"/admin/dashboard/branch/newbranch\",{replace: true})\r\n              },0);\r\n            }\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n      }\r\n\r\n      \r\n    return (\r\n        <Fragment>\r\n            <PageTitle title=\"FundHill\" />\r\n            <Box className={classes.formBox}>\r\n                <Typography variant='h5'>Add New Branch</Typography>\r\n                <Formik\r\n                    initialValues={initialFormState()}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={ async(values) => {\r\n                        await create_branch(values)\r\n                    }}\r\n                >\r\n                    <Form style={{ marginBottom: 30 }} >\r\n                    <div className={classes.inputDiv}>\r\n                        <div className={classes.label}>\r\n                            <Typography >Branch Name</Typography>\r\n                        </div>\r\n                        <TextField\r\n                            name=\"name\"\r\n                            className={classes.input}\r\n                            variant=\"outlined\"\r\n                            size='small'\r\n                            type='text'\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className={classes.inputDiv}>\r\n                        <div className={classes.label}>\r\n                            <Typography >Branch Head</Typography>\r\n                        </div>\r\n                    <TextField\r\n                        select={true} \r\n                        className={classes.input}\r\n                        name=\"branch_head_id\"  \r\n                        variant='outlined'\r\n                        fullWidth={true}\r\n                    >\r\n                        {marketers.map((marketer) => {\r\n                            return (\r\n                            <MenuItem key={marketer.id} value={marketer.id}>\r\n                                {marketer.first_name}\r\n                            </MenuItem>\r\n                            )\r\n                        })}\r\n                        </TextField>\r\n                    </div>\r\n                    <div className={classes.inputDiv}>\r\n                        <div className={classes.label}>\r\n                            <Typography >Branch Address</Typography>\r\n                        </div>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            variant=\"outlined\"\r\n                            size='small'\r\n                            name='branch_address'\r\n                            type='text'\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {\r\n                            isLoading ? \r\n                              ( <div className=\"sweet-loading\">\r\n                                  <DotLoader color={color} loading={loading} css={override}  size={80} />\r\n                                </div>)\r\n                              : (\r\n                                <Button type=\"submit\" className={classes.btnSubmit}>Submit</Button>\r\n                              )\r\n                          }\r\n                    </Form>\r\n                </Formik>\r\n                \r\n            </Box>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewBranch","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Widget\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\typography\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Header\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\notifications\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\maps\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",["818"],"import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link,useLocation } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Dot from \"../Dot\";\r\n\r\nexport default function SidebarLink({\r\n  links,\r\n  icon,\r\n  label,\r\n  children,\r\n  location,\r\n  isSidebarOpened,\r\n  nested,\r\n  type,\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [isOpen, setIsOpen] = useState(false);\r\n  var isLinkActive =\r\n    links &&\r\n    (location.pathname === links || location.pathname.indexOf(links) !== -1);\r\n\r\n  if (type === \"title\")\r\n    return (\r\n      <Typography\r\n        className={classnames(classes.linkText, classes.sectionTitle, {\r\n          [classes.linkTextHidden]: !isSidebarOpened,\r\n        })}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    );\r\n\r\n  if (type === \"divider\") return <Divider className={classes.divider} />;\r\n  if (links && links.includes('http')) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <Link className={classes.externalLink} to={links}>\r\n          <ListItemIcon\r\n            className={classnames(classes.linkIcon, {\r\n              [classes.linkIconActive]: isLinkActive,\r\n            })}\r\n          >\r\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classnames(classes.linkText, {\r\n                [classes.linkTextActive]: isLinkActive,\r\n                [classes.linkTextHidden]: !isSidebarOpened,\r\n              }),\r\n            }}\r\n            primary={label}\r\n          />\r\n        </Link>\r\n      </ListItem>\r\n    )\r\n  }\r\n  if (!children)\r\n    return (\r\n      <ListItem\r\n        button\r\n        component={links && Link}\r\n        to={links}\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        component={links && Link}\r\n        onClick={toggleCollapse}\r\n        className={classes.link}\r\n        to={links}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {icon ? icon : <InboxIcon />}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n      {children && (\r\n        <Collapse\r\n          in={isOpen && isSidebarOpened}\r\n          timeout=\"auto\"\r\n          unmountOnExit\r\n          className={classes.nestedList}\r\n        >\r\n          <List component=\"div\" disablePadding >\r\n            {children.map(childrenLink => (\r\n              <SidebarLink\r\n                key={childrenLink && childrenLink.links}\r\n                location={location}\r\n                isSidebarOpened={isSidebarOpened}\r\n                classes={classes}\r\n                nested\r\n                {...childrenLink}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\AllBranch\\Modal.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\icons\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\expenses\\styles.js",["819"],"import { lightBlue } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles(theme => ({\r\n  card: {\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  visitsNumberContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  progressSection: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  progressTitle: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  progress: {\r\n    marginBottom: theme.spacing(1),\r\n    backgroundColor: 'rgb(236, 236, 236)',\r\n  },\r\n  pieChartLegendWrapper: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  legendItemContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  fullHeightBody: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  tableWidget: {\r\n    overflowX: \"auto\",\r\n  },\r\n  progressBarPrimary: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  progressBarWarning: {\r\n    backgroundColor: theme.palette.warning.main,\r\n  },\r\n  performanceLegendWrapper: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  legendElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  legendElementText: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  serverOverviewElement: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  serverOverviewElementText: {\r\n    minWidth: 145,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  serverOverviewElementChartWrapper: {\r\n    width: \"100%\",\r\n  },\r\n  mainChartBody: {\r\n    overflowX: \"auto\",\r\n  },\r\n  mainChartHeader: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      flexWrap: \"wrap\",\r\n    },\r\n  },\r\n  mainChartHeaderLabels: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      order: 3,\r\n      width: \"100%\",\r\n      justifyContent: \"center\",\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  mainChartHeaderLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  mainChartSelectRoot: {\r\n    borderColor: theme.palette.text.hint + \"80 !important\",\r\n  },\r\n  mainChartSelect: {\r\n    padding: 10,\r\n    paddingRight: 25,\r\n  },\r\n  mainChartLegentElement: {\r\n    fontSize: \"18px !important\",\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n\r\n  // for addNewbranch\r\n  formBox: {\r\n    width: '100%',\r\n    background: 'white',\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n  inputDiv: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: 'column',\r\n      alignItems: 'start',\r\n      width: '90%',\r\n\r\n    }\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: '100%',\r\n  },\r\n  label: {\r\n    width: '15%',\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: '50%'\r\n    }\r\n  },\r\n  btnSubmit: {\r\n    width: '100%',\r\n    backgroundColor: 'blue',\r\n    color: '#fff',\r\n    marginTop: 10,\r\n    fontWeight: 600,\r\n\r\n    '&:hover': {\r\n      backgroundColor: 'lightBlue',\r\n      color: 'black'\r\n    }\r\n  },\r\n\r\n  // modal styles\r\n  formDiv: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: 10\r\n  },\r\n\r\n  divTypo: {\r\n    width: '20%',\r\n    marginRight: 5\r\n  },\r\n\r\n  success: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: '#fff',\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main,\r\n    color: '#fff',\r\n  },\r\n  secondary: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: '#fff',\r\n  }\r\n}));\r\n","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\styles.js",["820"],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\styles.js",["821"],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\auth\\login\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\ActionButton.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\expenses\\ActionButton.jsx",["822","823","824","825","826","827","828","829","830","831"],"import { Button, MenuItem } from '@mui/material';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Menu from '@mui/material/Menu';\r\nimport React, { useState,useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AllModal from './Modal';\r\nimport { api } from '../../../services';\r\nimport {toast} from \"react-toastify\"\r\nconst StyledMenu = styled((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n        }}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    '& .MuiPaper-root': {\r\n        borderRadius: 6,\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 180,\r\n        color:\r\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n        boxShadow:\r\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n        '& .MuiMenu-list': {\r\n            padding: '4px 0',\r\n        },\r\n        '& .MuiMenuItem-root': {\r\n            '& .MuiSvgIcon-root': {\r\n                fontSize: 18,\r\n                color: theme.palette.text.secondary,\r\n                marginRight: theme.spacing(1.5),\r\n            },\r\n            '&:active': {\r\n                backgroundColor: alpha(\r\n                    theme.palette.primary.main,\r\n                    theme.palette.action.selectedOpacity,\r\n                ),\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function ActionButton({setCurrentId}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    // let [color, setColor] = useState(\"#ADD8E6\");\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  let [loading, setLoading] = useState(true);\r\n  let [color, setColor] = useState(\"#ADD8E6\");\r\n  const [data, setData] = useState([]);\r\n  const [marketers, setMarketers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  \r\n    //  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\r\n    //  keys.shift(); // delete \"id\" key\r\n  \r\n  \r\n    useEffect(() => {\r\n      setIsLoading(true)\r\n  \r\n      const allBranch = async () => {\r\n        const res = await api.service().fetch(\"/dashboard/branches/\", true);\r\n        // console.log(res.data)\r\n        if (api.isSuccessful(res)) {\r\n          setData(res.data.results)\r\n        }\r\n  \r\n        setIsLoading(false);\r\n  \r\n      }\r\n  \r\n      allBranch();\r\n    }, []);\r\n\r\n    // const marketer = marketers.map((item) => {return item})\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                id=\"demo-customized-button\"\r\n                aria-controls={open ? 'demo-customized-menu' : undefined}\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                variant=\"contained\"\r\n                disableElevation\r\n                onClick={handleClick}\r\n                endIcon={<KeyboardArrowDownIcon />}\r\n                style={{ textTransform: 'none' }}\r\n            >\r\n                Action\r\n            </Button>\r\n            <StyledMenu\r\n                id=\"demo-customized-menu\"\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'demo-customized-button',\r\n                }}\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                {/* <MenuItem onClick={handleOpen} history disableRipple>\r\n                    Action\r\n                </MenuItem> */}\r\n                <MenuItem disableRipple>\r\n                    <AllModal setCurrentId={setCurrentId} />\r\n                </MenuItem>\r\n                <MenuItem disableRipple>\r\n                    <AllModal setCurrentId={setCurrentId} updates />\r\n                </MenuItem>\r\n            </StyledMenu>\r\n        </div>\r\n    )\r\n\r\n}\r\n","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\ActionButton.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\branch\\styles.js",["832"],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\OngoingLoans\\Modal.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\assets\\index.js",["833"],"import logo from './logo.png';\r\n\r\nexport default {\r\n    logo,\r\n};","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\ActionButton.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allmarketers\\Modal.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\services\\index.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\index.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\branch\\ActionButton.jsx",["834","835","836","837","838","839","840","841","842","843"],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\Notification\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\loan\\Modal.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\expenses\\Modal.jsx",["844","845","846","847","848","849","850"],"import { Backdrop, Box, Button, Divider, Fade, IconButton, Modal,  Typography, MenuItem } from '@mui/material'\r\nimport React, { useState, useEffect,useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Formik, Form, useField,useFormikContext } from \"formik\";\r\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\r\nimport { css } from \"@emotion/react\";\r\nimport {DotLoader} from \"react-spinners\";\r\nimport { api } from '../../../services';\r\nimport {toast} from \"react-toastify\"\r\nimport {TextField} from \"../../../components/FormsUI\"\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n// import { makeStyles } from \"@material-ui/styles\";\r\nimport useStyles from './styles';\r\n\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\n\r\nconst AllModal = ({ updates,setCurrentId }) => {\r\n\r\n    const [lock, setUnlock] = useState(false);\r\n    const handleUnlock = () => setUnlock(true);\r\n    const handleLock = () => setUnlock(false);\r\n    const classes = useStyles();\r\n\r\n \r\n\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  let [loading, setLoading] = useState(true);\r\n  let [color, setColor] = useState(\"#ADD8E6\");\r\n  const [data, setData] = useState([]);\r\n  const [marketers, setMarketers] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [item, setItem] = useState(\"\");\r\n\r\n  //  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\r\n  //  keys.shift(); // delete \"id\" key\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n\r\n    const allBranch = async () => {\r\n      const res = await api.service().fetch(\"/dashboard/branches/\", true);\r\n      console.log(res.data)\r\n      if (api.isSuccessful(res)) {\r\n        setData(res.data.results)\r\n      }\r\n\r\n      setIsLoading(false);\r\n\r\n    }\r\n\r\n    allBranch();\r\n  }, [])\r\n\r\n\r\n  const branches = (id) => {\r\n    const branch = data.filter((item) => item.id === id);\r\n    // console.log(branch);\r\n    setItem(branch[0]);\r\n    console.log(item);\r\n    // return branch\r\n  }\r\n\r\n  const handleProps = () => {\r\n    // console.log(setCurrentId);\r\n    branches(setCurrentId);\r\n    // setItem(branches(setCurrentId));\r\n    return setUnlock(true);\r\n  }\r\n\r\n\r\n  const allBranch = async () => {\r\n    setIsLoading(true)\r\n    const res = await api.service().fetch(\"/dashboard/branches/\", true);\r\n    // console.log(res.data)\r\n    if (api.isSuccessful(res)) {\r\n      setData(res.data.results)\r\n    }\r\n\r\n    setIsLoading(false);\r\n\r\n  }\r\n  const initialFormState = () => ({\r\n    name: `${item.name}`,\r\n    branch_head_id: `${item.branch_head.id}`,\r\n    branch_address: `${item.branch_address}`,\r\n  });\r\n\r\n\r\n\r\n\r\n  const deleteBranch = async (id) => {\r\n    const res = await api.service().remove(`/dashboard/branches/${id}/`, true);\r\n    console.log(res.data)\r\n    if (api.isSuccessful(res)) {\r\n      setTimeout(() => {\r\n        toast.success(\"Successfully deleted branch!\");\r\n        allBranch();\r\n\r\n\r\n      }, 0);\r\n    }\r\n\r\n  }\r\n\r\n  const edit_branch = async (values, id) => {\r\n    setLoading(true);\r\n    console.log(values)\r\n\r\n    const response = await api\r\n      .service()\r\n      .update(`/dashboard/branches/${id}/`, values, true)\r\n\r\n    if (api.isSuccessful(response)) {\r\n      setTimeout(() => {\r\n        toast.success(\"branch successfully updated!!\");\r\n        navigate(\"/admin/dashboard/branch/allbranch\",{replace: true})\r\n        // allBranch();\r\n      }, 0);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n\r\n    const allMarketer = async () => {\r\n      const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\", true);\r\n      // console.log(res.data)\r\n      if (api.isSuccessful(res)) {\r\n        //   console.log(res)\r\n        setMarketers(res.data.results)\r\n      }\r\n\r\n      setIsLoading(false);\r\n\r\n    }\r\n\r\n    allMarketer();\r\n  }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleUnlock  && handleProps}>{updates ? 'Delete' : 'Update'}</Button>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={lock}\r\n                onClose={handleLock}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={lock}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            {updates ? 'Confirm Delete of Leasson Teacher' : 'branch ID'}\r\n                        </Typography>\r\n\r\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\r\n                            <IconButton onClick={handleLock}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Box>\r\n                        <Divider style={{ marginTop: 40 }} />\r\n                        {updates ? (\r\n                            <>\r\n                                <Typography style={{ fontWeight: 500, marginTop: 10, marginBottom: 10, marginLeft: 10, textAlign: 'center' }}>Are you sure you want to delete this branch?</Typography>\r\n\r\n                                <Divider style={{ marginTop: 40 }} />\r\n                                <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\r\n                                    <Button onClick={handleLock} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\r\n                                    <Button onClick={() => deleteBranch(item.id)} variant=\"contained\" style={{ textTransform: 'none', background: 'red', marginLeft: 5 }}>Delete</Button>\r\n                                </Box>\r\n                            </>\r\n                        ) : (\r\n                            item && (\r\n                                \r\n                                <>\r\n                                <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Edit branch Profile</Typography>\r\n                                <Formik \r\n                                    initialValues={initialFormState()}\r\n                                    onSubmit={async(values) => {\r\n                                        await edit_branch(values,item.id)\r\n                                    }}\r\n                                >\r\n                                    <Form>\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Branch Name </Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"text\"  name=\"name\" size='small'  required />\r\n\r\n                                    </div>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Branch Address</Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"branch_address\"  size='small'  required />\r\n\r\n                                    </div>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Marketer</Typography></div>\r\n                                        <TextField\r\n                                        select={true} \r\n                                        className={classes.input}\r\n                                        name=\"branch_head_id\"  \r\n                                        variant='outlined'\r\n                                        fullWidth={true}\r\n                                        // type=\"number\"\r\n                                    >\r\n                                        {marketers.map((marketer) => {\r\n                                            return (\r\n                                                <MenuItem key={marketer.id} value={marketer.id}>\r\n                                                    {marketer.first_name}\r\n                                                </MenuItem>      \r\n   \r\n                                            )\r\n                                        })}\r\n                                        </TextField>\r\n                                    </div>                                                    {\r\n                                            isLoading ? \r\n                                            ( <div className=\"sweet-loading\">\r\n                                                <DotLoader color={color} loading={loading} css={override}  size={80} />\r\n                                                </div>)\r\n                                            : (\r\n                                                <Button type='submit' variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\r\n                                                        Update\r\n                                                    </Button>\r\n                                             )\r\n                                        }\r\n                                            \r\n                                    </Form>\r\n                                </Formik>\r\n                                {/* <form style={{ display: 'flex', flexDirection: 'column' }}>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Branch Address </Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"\" value={item.name} size='small'  required />\r\n\r\n                                    </div>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Branch Address</Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Branch Address' required />\r\n\r\n                                    </div>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Marketer</Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Marketer' required />\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <Button variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\r\n                                        Update\r\n                                    </Button>\r\n                                </form> */}\r\n                            \r\n                                </>\r\n                                \r\n                            )\r\n                        )}\r\n                        {!updates &&\r\n                            (\r\n                                <>\r\n                                    <Divider style={{ marginTop: 40 }} />\r\n                                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\r\n                                        <Button onClick={handleLock} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\r\n                                    </Box>\r\n                                </>\r\n                            )\r\n                        }\r\n\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n\r\n            {/* <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        open={openn}\r\n        onClose={handleLock}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n            timeout: 500,\r\n        }}\r\n    >\r\n        <Fade in={openn}>\r\n            <Box sx={style}>\r\n                <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Confirm Delete of Leasson Teacher\r\n                </Typography>\r\n\r\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\r\n                    <IconButton onClick={handleLock}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </Box>\r\n                <Divider style={{ marginTop: 40 }} />\r\n\r\n                <Typography style={{ fontWeight: 500, marginTop: 10, marginBottom: 10, marginLeft: 10, textAlign: 'center' }}>Are you sure you want to delete this branch?</Typography>\r\n\r\n                <Divider style={{ marginTop: 40 }} />\r\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\r\n                    <Button onClick={handleClosee} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\r\n                    <Button onClick={handleClosee} variant=\"contained\" style={{ textTransform: 'none', background: 'red', marginLeft: 5 }}>Delete</Button>\r\n                </Box>\r\n            </Box>\r\n        </Fade>\r\n    </Modal> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllModal","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\customer\\Modal.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\services\\serviceApi.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\services\\localForage.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\marketer\\Modal.jsx",["851","852","853","854","855"],"import { Box, Button, Divider, Fade, IconButton, Modal,MenuItem,Typography } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport {  useState,useEffect,useContext } from \"react\";\r\nimport {DotLoader} from \"react-spinners\";\r\nimport { Formik, Form} from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from '../../../services';\r\nimport { css } from \"@emotion/react\";\r\nimport {Context} from \"../../../context/Context\";\r\nimport useStyles from './styles';\r\nimport {TextField} from \"../../../components/FormsUI\"\r\n\r\n// CONTEXT\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst AllmarketerModal = ({ fund,setCurrentId }) => {\r\n    const classes = useStyles();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [btnLoading, setBtnLoading] = useState(false);\r\n    let [loading, setLoading] = useState(true);\r\n    let [color, setColor] = useState(\"#ADD8E6\");\r\n    const {user} = useContext(Context);\r\n    const [marketers,setMarketers] = useState([]);\r\n    const [data,setData] = useState(\"\");\r\n    const [lock, setUnlock] = useState(false);\r\n    const handleUnlock = () => setUnlock(true);\r\n    const handleLock = () => setUnlock(false);\r\n\r\n\r\n\r\n\r\n\r\n      useEffect(() => {\r\n          setIsLoading(true)\r\n  \r\n          const allMarketer = async() => {\r\n            const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\",true);\r\n            console.log(res.data)\r\n            if(api.isSuccessful(res)){\r\n              //   console.log(res)\r\n              setMarketers(res.data.results)\r\n            }\r\n      \r\n            setIsLoading(false);\r\n      \r\n          }\r\n  \r\n          allMarketer();\r\n        },[]);\r\n\r\n        const getMarketer = (id) => {\r\n            const marketer = marketers.filter((item) => item.id === id);\r\n            // console.log(branch);\r\n            setData(marketer[0]);\r\n            console.log(data);\r\n            // return branch\r\n          }\r\n        \r\n          const handleProps = () => {\r\n            // console.log(setCurrentId);\r\n            getMarketer(setCurrentId);\r\n            // setItem(branches(setCurrentId));\r\n            return setUnlock(true);\r\n          }\r\n  \r\n  \r\n        const edit_marketer = async(values,id) => {\r\n            setBtnLoading(true);\r\n            console.log(values)\r\n  \r\n          const response = await api\r\n              .service()\r\n              .update(`/accounts/auth/${id}/`,values,true)\r\n  \r\n          if(api.isSuccessful(response)){\r\n          setTimeout( () => {\r\n              toast.success(\"Marketer profile successfully updated!!\");\r\n              // navigate(\"/admin/allbranch\",{replace: true})\r\n          },0);\r\n          }\r\n          setBtnLoading(false);\r\n        }\r\n      const fund_marketer = async(values,id) => {\r\n              try {\r\n                  setBtnLoading(true);\r\n                  console.log(values)\r\n  \r\n                  const response = await api\r\n                      .service()\r\n                      .push(`/wallets/marketers/${id}/fund-wallet/`,values,true)\r\n                  if(api.isSuccessful(response)){\r\n                  setTimeout( () => {\r\n                      toast.success(\"Transaction successful\");\r\n                      // navigate(\"/admin/allbranch\",{replace: true})\r\n                  },0);\r\n                  }\r\n                  setBtnLoading(false);\r\n              } catch (error) {\r\n                  console.log(error)\r\n              }\r\n                  }\r\n  \r\n  \r\n  \r\n        const deleteMarketer = async(id) => {\r\n          const res = await api.service().remove(`/accounts/auth/${id}/`,true);\r\n          console.log(res.data)\r\n          if(api.isSuccessful(res)){\r\n              setTimeout( () => {\r\n                  toast.success(\"Successfully deleted marketer!\");\r\n              },0);\r\n              }\r\n    \r\n        }\r\n    return (\r\n        <div>\r\n            <Button onClick={handleUnlock && handleProps }>{fund ? 'Fund Wallet' : 'Edit Profile'}</Button>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={lock}\r\n                onClose={handleLock}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={lock}>\r\n                    <Box sx={style}>\r\n\r\n                        {fund ? (\r\n                        <>\r\n\r\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\r\n                            <IconButton onClick={handleLock}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Box>\r\n\r\n                        <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\r\n                           Fund Marketer\r\n                        </Typography>\r\n\r\n                        <Divider style={{ marginTop: 40 }} />\r\n                         <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Fund Marketer Wallet </Typography> \r\n\r\n                         <Formik\r\n                                    initialValues={{\r\n                                         amount: 0,\r\n                                        }}\r\n                                 // validationSchema= {validationSchema}\r\n                                 onSubmit = { async (values) => {\r\n                                    await fund_marketer(values,data.wallet.id)\r\n                                }}\r\n                                >\r\n                                    <Form style={{ display: 'flex', flexDirection: 'column' }} >\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Amount</Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"number\" name=\"amount\" size='small' />\r\n\r\n                                    </div>\r\n\r\n\r\n                                    {\r\n                                            btnLoading ? \r\n                                            ( <div className=\"sweet-loading\">\r\n                                                <DotLoader color={color} loading={loading} css={override}  size={80} />\r\n                                                </div>)\r\n                                            : (\r\n                                                <Button type=\"submit\" variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\r\n                                                    Fund\r\n                                                </Button>\r\n                                              )\r\n                                        }\r\n                                    </Form>\r\n                                </Formik>\r\n                        </>      \r\n                        ) : (\r\n                            <>\r\n\r\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\r\n                            <IconButton onClick={handleLock}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Box>\r\n                             <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Marketer Id\r\n                            </Typography> \r\n                        <Divider style={{ marginTop: 40 }} />\r\n                         <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Edit Marketer Profile</Typography>\r\n                         <Formik\r\n                                        initialValues={{\r\n                                        first_name: `${data?.first_name}`,\r\n                                        middle_name: `${data?.middle_name}`,\r\n                                        last_name: `${data?.last_name}`,\r\n                                        email: `${data?.email}`,\r\n                                        phone: `${data?.phone}`,   \r\n                                        user_role: `${data?.user_role}`,\r\n                                     }}\r\n                            // validationSchema= {validationSchema}\r\n                            onSubmit = { async (values) => {\r\n                                await edit_marketer(values,data.id)\r\n                            }}\r\n                        >         \r\n                                    <Form style={{ display: 'flex', flexDirection: 'column' }}>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>First Name</Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"first_name\" size='small' />\r\n\r\n                                    </div>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Middle Name</Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"middle_name\" size='small' />\r\n\r\n                                    </div>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Last Name</Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"last_name\" size='small' />\r\n\r\n                                    </div>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Email</Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"email\" name=\"email\" size='small' />\r\n\r\n                                    </div>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Phone</Typography></div>\r\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"phone\" size='small' />\r\n\r\n                                    </div>\r\n\r\n                                    <div className={classes.formDiv}>\r\n                                        <div className={classes.divTypo}><Typography>Marketer</Typography></div>\r\n                                        <TextField\r\n                                            select={true}\r\n                                            className={classes.input}\r\n                                            variant=\"outlined\"\r\n                                            size='small'\r\n                                            name='user_role'\r\n                                            type='text'\r\n                                            required\r\n                                        >   \r\n                                            <MenuItem value={\"MANAGER\"} >Manager</MenuItem>\r\n                                            <MenuItem value={\"TELLER\"}>Teller</MenuItem>\r\n                                            <MenuItem value={\"AGENT\"}>Agent</MenuItem>\r\n\r\n                                        </TextField>\r\n                                    </div>\r\n\r\n                                        {\r\n                                            btnLoading ? \r\n                                            ( <div className=\"sweet-loading\">\r\n                                                <DotLoader color={color} loading={loading} css={override}  size={80} />\r\n                                                </div>)\r\n                                            : (\r\n                                                <Button type=\"submit\" variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\r\n                                                    Update\r\n                                                </Button>\r\n                                              )\r\n                                        }\r\n\r\n                                    </Form>\r\n                                </Formik>\r\n                        </>  \r\n                        )   \r\n                        }\r\n\r\n                    \r\n                        <Divider style={{ marginTop: 40 }} />\r\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\r\n                            <Button onClick={handleLock} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllmarketerModal","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Textfield\\TextField.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Select\\Select.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Checkbox\\Checkbox.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Table\\Table.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\branch\\Modal.jsx",["856","857","858","859","860","861","862"],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\DataTimePicker\\DataTimePicker.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Button\\Button.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\components\\FormsUI\\Table\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\styles.js",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allcustomers\\Allcustomers.jsx",["863","864","865","866","867","868","869","870","871","872","873","874","875"],"import { Divider, Grid, TableContainer } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { css } from \"@emotion/react\";\r\nimport useStyles from '../styles'\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { BounceLoader } from \"react-spinners\";\r\nimport {\r\n    Table,\r\n    TableRow,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell,\r\n    Chip\r\n} from \"@material-ui/core\";\r\n//   import useStyles from \"./styles\";\r\nimport { Fragment } from \"react\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport ActionButton from \"./ActionButton\";\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     tableOverflow: {\r\n//         overflow: 'auto'\r\n//     }\r\n// }))\r\n// const override = css`\r\n// display: block;\r\n// margin: 0 auto;\r\n// border-color: green;\r\n// align-items: center;\r\n// `;\r\n\r\n\r\n// table\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData(1, '2022-05-2', 15000, 'Cash', 'For Loan'),\r\n    // createData('Ice cream sandwich', 237, 9.0, 37,),\r\n\r\n];\r\n\r\n\r\n\r\n\r\nconst Allcustomers = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            <PageTitle title=\"All Customers\" />\r\n            <Grid container spacing={4}>\r\n\r\n                {/* <div className=\"sweet-loading\">\r\n                    <BounceLoader color={color} l css={override} size={150} />\r\n                </div> */}\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"Maketers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell >ID</TableCell>\r\n                                    <TableCell >Full Name</TableCell>\r\n                                    <TableCell >Account Number</TableCell>\r\n                                    <TableCell>Telephone</TableCell>\r\n                                    <TableCell>Email</TableCell>\r\n                                    <TableCell>Marketer</TableCell>\r\n                                    <TableCell>Status</TableCell>\r\n                                    <TableCell>Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className=\"pl-3 fw-normal\">5</TableCell>\r\n                                    <TableCell>\tSteven Umar</TableCell>\r\n                                    <TableCell>8061516479</TableCell>\r\n                                    <TableCell>2348084395900</TableCell>\r\n                                    <TableCell>\ttestcustomer@gmail.com</TableCell>\r\n                                    <TableCell>\tjohn</TableCell>\r\n                                    <TableCell>\t<Button style={{ textTransform: 'none' }} variant=\"contained\" disableElevation>Approved</Button></TableCell>\r\n                                    <TableCell>\r\n                                        <ActionButton />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Allcustomers","C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allcustomers\\ActionButton.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\dashboard\\Allcustomers\\Modal.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\ActionButtons\\ActionButton.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\modals\\Modal.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\modals\\AddNewIntrest.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\ActionButtons\\FeeActionButton.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\modals\\AddFees.jsx",[],"C:\\Users\\HP PC\\desktop\\fundhill-new\\Fundhill-MVP\\src\\pages\\admin\\interest\\modals\\FeesModal.jsx",[],{"ruleId":"876","replacedBy":"877"},{"ruleId":"878","replacedBy":"879"},{"ruleId":"880","severity":1,"message":"881","line":26,"column":8,"nodeType":"882","messageId":"883","endLine":26,"endColumn":17},{"ruleId":"880","severity":1,"message":"884","line":27,"column":8,"nodeType":"882","messageId":"883","endLine":27,"endColumn":18},{"ruleId":"880","severity":1,"message":"885","line":28,"column":8,"nodeType":"882","messageId":"883","endLine":28,"endColumn":21},{"ruleId":"880","severity":1,"message":"886","line":29,"column":8,"nodeType":"882","messageId":"883","endLine":29,"endColumn":12},{"ruleId":"880","severity":1,"message":"887","line":30,"column":8,"nodeType":"882","messageId":"883","endLine":30,"endColumn":14},{"ruleId":"880","severity":1,"message":"888","line":31,"column":8,"nodeType":"882","messageId":"883","endLine":31,"endColumn":13},{"ruleId":"880","severity":1,"message":"889","line":32,"column":8,"nodeType":"882","messageId":"883","endLine":32,"endColumn":14},{"ruleId":"880","severity":1,"message":"890","line":1,"column":25,"nodeType":"882","messageId":"883","endLine":1,"endColumn":39},{"ruleId":"880","severity":1,"message":"891","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":20},{"ruleId":"880","severity":1,"message":"892","line":8,"column":8,"nodeType":"882","messageId":"883","endLine":8,"endColumn":16},{"ruleId":"880","severity":1,"message":"893","line":9,"column":8,"nodeType":"882","messageId":"883","endLine":9,"endColumn":16},{"ruleId":"880","severity":1,"message":"894","line":10,"column":8,"nodeType":"882","messageId":"883","endLine":10,"endColumn":20},{"ruleId":"880","severity":1,"message":"895","line":11,"column":8,"nodeType":"882","messageId":"883","endLine":11,"endColumn":29},{"ruleId":"880","severity":1,"message":"896","line":13,"column":10,"nodeType":"882","messageId":"883","endLine":13,"endColumn":22},{"ruleId":"880","severity":1,"message":"897","line":20,"column":5,"nodeType":"882","messageId":"883","endLine":20,"endColumn":9},{"ruleId":"880","severity":1,"message":"898","line":34,"column":22,"nodeType":"882","messageId":"883","endLine":34,"endColumn":27},{"ruleId":"880","severity":1,"message":"899","line":35,"column":10,"nodeType":"882","messageId":"883","endLine":35,"endColumn":23},{"ruleId":"880","severity":1,"message":"900","line":55,"column":7,"nodeType":"882","messageId":"883","endLine":55,"endColumn":15},{"ruleId":"880","severity":1,"message":"901","line":62,"column":7,"nodeType":"882","messageId":"883","endLine":62,"endColumn":17},{"ruleId":"880","severity":1,"message":"902","line":109,"column":7,"nodeType":"882","messageId":"883","endLine":109,"endColumn":11},{"ruleId":"880","severity":1,"message":"903","line":119,"column":10,"nodeType":"882","messageId":"883","endLine":119,"endColumn":15},{"ruleId":"880","severity":1,"message":"904","line":119,"column":17,"nodeType":"882","messageId":"883","endLine":119,"endColumn":25},{"ruleId":"880","severity":1,"message":"905","line":121,"column":11,"nodeType":"882","messageId":"883","endLine":121,"endColumn":15},{"ruleId":"880","severity":1,"message":"906","line":122,"column":11,"nodeType":"882","messageId":"883","endLine":122,"endColumn":22},{"ruleId":"880","severity":1,"message":"907","line":125,"column":11,"nodeType":"882","messageId":"883","endLine":125,"endColumn":22},{"ruleId":"880","severity":1,"message":"908","line":131,"column":12,"nodeType":"882","messageId":"883","endLine":131,"endColumn":17},{"ruleId":"880","severity":1,"message":"909","line":132,"column":11,"nodeType":"882","messageId":"883","endLine":132,"endColumn":21},{"ruleId":"880","severity":1,"message":"896","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":22},{"ruleId":"880","severity":1,"message":"897","line":12,"column":5,"nodeType":"882","messageId":"883","endLine":12,"endColumn":9},{"ruleId":"880","severity":1,"message":"900","line":24,"column":7,"nodeType":"882","messageId":"883","endLine":24,"endColumn":15},{"ruleId":"880","severity":1,"message":"903","line":33,"column":10,"nodeType":"882","messageId":"883","endLine":33,"endColumn":15},{"ruleId":"880","severity":1,"message":"904","line":33,"column":17,"nodeType":"882","messageId":"883","endLine":33,"endColumn":25},{"ruleId":"880","severity":1,"message":"910","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":13},{"ruleId":"880","severity":1,"message":"911","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"912","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":23},{"ruleId":"880","severity":1,"message":"913","line":5,"column":8,"nodeType":"882","messageId":"883","endLine":5,"endColumn":12},{"ruleId":"880","severity":1,"message":"897","line":13,"column":5,"nodeType":"882","messageId":"883","endLine":13,"endColumn":9},{"ruleId":"880","severity":1,"message":"914","line":23,"column":7,"nodeType":"882","messageId":"883","endLine":23,"endColumn":12},{"ruleId":"880","severity":1,"message":"902","line":41,"column":7,"nodeType":"882","messageId":"883","endLine":41,"endColumn":11},{"ruleId":"880","severity":1,"message":"915","line":14,"column":20,"nodeType":"882","messageId":"883","endLine":14,"endColumn":28},{"ruleId":"880","severity":1,"message":"900","line":24,"column":7,"nodeType":"882","messageId":"883","endLine":24,"endColumn":15},{"ruleId":"880","severity":1,"message":"896","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":22},{"ruleId":"880","severity":1,"message":"897","line":12,"column":5,"nodeType":"882","messageId":"883","endLine":12,"endColumn":9},{"ruleId":"880","severity":1,"message":"900","line":24,"column":7,"nodeType":"882","messageId":"883","endLine":24,"endColumn":15},{"ruleId":"880","severity":1,"message":"903","line":33,"column":10,"nodeType":"882","messageId":"883","endLine":33,"endColumn":15},{"ruleId":"880","severity":1,"message":"904","line":33,"column":17,"nodeType":"882","messageId":"883","endLine":33,"endColumn":25},{"ruleId":"880","severity":1,"message":"915","line":1,"column":17,"nodeType":"882","messageId":"883","endLine":1,"endColumn":25},{"ruleId":"880","severity":1,"message":"916","line":21,"column":7,"nodeType":"882","messageId":"883","endLine":21,"endColumn":12},{"ruleId":"880","severity":1,"message":"917","line":724,"column":10,"nodeType":"882","messageId":"883","endLine":724,"endColumn":26},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"921","line":37,"column":17,"nodeType":"882","messageId":"883","endLine":37,"endColumn":27},{"ruleId":"880","severity":1,"message":"904","line":38,"column":15,"nodeType":"882","messageId":"883","endLine":38,"endColumn":23},{"ruleId":"880","severity":1,"message":"922","line":39,"column":11,"nodeType":"882","messageId":"883","endLine":39,"endColumn":15},{"ruleId":"880","severity":1,"message":"923","line":41,"column":9,"nodeType":"882","messageId":"883","endLine":41,"endColumn":17},{"ruleId":"880","severity":1,"message":"924","line":70,"column":9,"nodeType":"882","messageId":"883","endLine":70,"endColumn":25},{"ruleId":"880","severity":1,"message":"925","line":77,"column":9,"nodeType":"882","messageId":"883","endLine":77,"endColumn":25},{"ruleId":"880","severity":1,"message":"926","line":88,"column":9,"nodeType":"882","messageId":"883","endLine":88,"endColumn":21},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"921","line":37,"column":17,"nodeType":"882","messageId":"883","endLine":37,"endColumn":27},{"ruleId":"880","severity":1,"message":"904","line":38,"column":15,"nodeType":"882","messageId":"883","endLine":38,"endColumn":23},{"ruleId":"880","severity":1,"message":"922","line":39,"column":11,"nodeType":"882","messageId":"883","endLine":39,"endColumn":15},{"ruleId":"880","severity":1,"message":"923","line":41,"column":9,"nodeType":"882","messageId":"883","endLine":41,"endColumn":17},{"ruleId":"880","severity":1,"message":"924","line":71,"column":9,"nodeType":"882","messageId":"883","endLine":71,"endColumn":25},{"ruleId":"880","severity":1,"message":"925","line":76,"column":9,"nodeType":"882","messageId":"883","endLine":76,"endColumn":25},{"ruleId":"880","severity":1,"message":"927","line":83,"column":9,"nodeType":"882","messageId":"883","endLine":83,"endColumn":16},{"ruleId":"880","severity":1,"message":"928","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"929","line":33,"column":12,"nodeType":"882","messageId":"883","endLine":33,"endColumn":19},{"ruleId":"880","severity":1,"message":"930","line":34,"column":19,"nodeType":"882","messageId":"883","endLine":34,"endColumn":29},{"ruleId":"880","severity":1,"message":"904","line":35,"column":17,"nodeType":"882","messageId":"883","endLine":35,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":36,"column":12,"nodeType":"882","messageId":"883","endLine":36,"endColumn":16},{"ruleId":"880","severity":1,"message":"931","line":55,"column":13,"nodeType":"882","messageId":"883","endLine":55,"endColumn":29},{"ruleId":"880","severity":1,"message":"932","line":65,"column":13,"nodeType":"882","messageId":"883","endLine":65,"endColumn":36},{"ruleId":"880","severity":1,"message":"933","line":81,"column":13,"nodeType":"882","messageId":"883","endLine":81,"endColumn":20},{"ruleId":"880","severity":1,"message":"934","line":99,"column":11,"nodeType":"882","messageId":"883","endLine":99,"endColumn":27},{"ruleId":"880","severity":1,"message":"935","line":109,"column":11,"nodeType":"882","messageId":"883","endLine":109,"endColumn":29},{"ruleId":"880","severity":1,"message":"928","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"929","line":36,"column":12,"nodeType":"882","messageId":"883","endLine":36,"endColumn":19},{"ruleId":"880","severity":1,"message":"930","line":37,"column":19,"nodeType":"882","messageId":"883","endLine":37,"endColumn":29},{"ruleId":"880","severity":1,"message":"904","line":38,"column":17,"nodeType":"882","messageId":"883","endLine":38,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":39,"column":12,"nodeType":"882","messageId":"883","endLine":39,"endColumn":16},{"ruleId":"880","severity":1,"message":"931","line":58,"column":13,"nodeType":"882","messageId":"883","endLine":58,"endColumn":29},{"ruleId":"880","severity":1,"message":"932","line":68,"column":13,"nodeType":"882","messageId":"883","endLine":68,"endColumn":36},{"ruleId":"880","severity":1,"message":"933","line":84,"column":13,"nodeType":"882","messageId":"883","endLine":84,"endColumn":20},{"ruleId":"880","severity":1,"message":"934","line":102,"column":11,"nodeType":"882","messageId":"883","endLine":102,"endColumn":27},{"ruleId":"880","severity":1,"message":"935","line":112,"column":11,"nodeType":"882","messageId":"883","endLine":112,"endColumn":29},{"ruleId":"880","severity":1,"message":"936","line":123,"column":13,"nodeType":"882","messageId":"883","endLine":123,"endColumn":27},{"ruleId":"880","severity":1,"message":"937","line":3,"column":24,"nodeType":"882","messageId":"883","endLine":3,"endColumn":32},{"ruleId":"880","severity":1,"message":"938","line":3,"column":33,"nodeType":"882","messageId":"883","endLine":3,"endColumn":49},{"ruleId":"880","severity":1,"message":"939","line":8,"column":22,"nodeType":"882","messageId":"883","endLine":8,"endColumn":28},{"ruleId":"880","severity":1,"message":"940","line":8,"column":51,"nodeType":"882","messageId":"883","endLine":8,"endColumn":67},{"ruleId":"880","severity":1,"message":"922","line":25,"column":12,"nodeType":"882","messageId":"883","endLine":25,"endColumn":16},{"ruleId":"880","severity":1,"message":"921","line":27,"column":19,"nodeType":"882","messageId":"883","endLine":27,"endColumn":29},{"ruleId":"880","severity":1,"message":"904","line":28,"column":17,"nodeType":"882","messageId":"883","endLine":28,"endColumn":25},{"ruleId":"880","severity":1,"message":"941","line":29,"column":12,"nodeType":"882","messageId":"883","endLine":29,"endColumn":17},{"ruleId":"880","severity":1,"message":"942","line":29,"column":19,"nodeType":"882","messageId":"883","endLine":29,"endColumn":27},{"ruleId":"880","severity":1,"message":"928","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"943","line":5,"column":19,"nodeType":"882","messageId":"883","endLine":5,"endColumn":28},{"ruleId":"880","severity":1,"message":"944","line":5,"column":39,"nodeType":"882","messageId":"883","endLine":5,"endColumn":48},{"ruleId":"880","severity":1,"message":"945","line":5,"column":59,"nodeType":"882","messageId":"883","endLine":5,"endColumn":68},{"ruleId":"880","severity":1,"message":"946","line":6,"column":10,"nodeType":"882","messageId":"883","endLine":6,"endColumn":15},{"ruleId":"880","severity":1,"message":"921","line":38,"column":19,"nodeType":"882","messageId":"883","endLine":38,"endColumn":29},{"ruleId":"880","severity":1,"message":"904","line":39,"column":17,"nodeType":"882","messageId":"883","endLine":39,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":40,"column":12,"nodeType":"882","messageId":"883","endLine":40,"endColumn":16},{"ruleId":"880","severity":1,"message":"947","line":42,"column":12,"nodeType":"882","messageId":"883","endLine":42,"endColumn":21},{"ruleId":"880","severity":1,"message":"948","line":42,"column":22,"nodeType":"882","messageId":"883","endLine":42,"endColumn":34},{"ruleId":"880","severity":1,"message":"928","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"943","line":5,"column":19,"nodeType":"882","messageId":"883","endLine":5,"endColumn":28},{"ruleId":"880","severity":1,"message":"944","line":5,"column":39,"nodeType":"882","messageId":"883","endLine":5,"endColumn":48},{"ruleId":"880","severity":1,"message":"945","line":5,"column":59,"nodeType":"882","messageId":"883","endLine":5,"endColumn":68},{"ruleId":"880","severity":1,"message":"921","line":37,"column":19,"nodeType":"882","messageId":"883","endLine":37,"endColumn":29},{"ruleId":"880","severity":1,"message":"949","line":38,"column":12,"nodeType":"882","messageId":"883","endLine":38,"endColumn":18},{"ruleId":"880","severity":1,"message":"904","line":39,"column":17,"nodeType":"882","messageId":"883","endLine":39,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":40,"column":12,"nodeType":"882","messageId":"883","endLine":40,"endColumn":16},{"ruleId":"880","severity":1,"message":"950","line":63,"column":13,"nodeType":"882","messageId":"883","endLine":63,"endColumn":25},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"921","line":38,"column":23,"nodeType":"882","messageId":"883","endLine":38,"endColumn":33},{"ruleId":"880","severity":1,"message":"904","line":39,"column":21,"nodeType":"882","messageId":"883","endLine":39,"endColumn":29},{"ruleId":"880","severity":1,"message":"922","line":40,"column":16,"nodeType":"882","messageId":"883","endLine":40,"endColumn":20},{"ruleId":"880","severity":1,"message":"923","line":42,"column":16,"nodeType":"882","messageId":"883","endLine":42,"endColumn":24},{"ruleId":"880","severity":1,"message":"924","line":71,"column":15,"nodeType":"882","messageId":"883","endLine":71,"endColumn":31},{"ruleId":"880","severity":1,"message":"925","line":77,"column":15,"nodeType":"882","messageId":"883","endLine":77,"endColumn":31},{"ruleId":"880","severity":1,"message":"951","line":86,"column":15,"nodeType":"882","messageId":"883","endLine":86,"endColumn":26},{"ruleId":"880","severity":1,"message":"928","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"943","line":5,"column":19,"nodeType":"882","messageId":"883","endLine":5,"endColumn":28},{"ruleId":"880","severity":1,"message":"944","line":5,"column":39,"nodeType":"882","messageId":"883","endLine":5,"endColumn":48},{"ruleId":"880","severity":1,"message":"945","line":5,"column":59,"nodeType":"882","messageId":"883","endLine":5,"endColumn":68},{"ruleId":"880","severity":1,"message":"921","line":36,"column":19,"nodeType":"882","messageId":"883","endLine":36,"endColumn":29},{"ruleId":"880","severity":1,"message":"949","line":37,"column":12,"nodeType":"882","messageId":"883","endLine":37,"endColumn":18},{"ruleId":"880","severity":1,"message":"904","line":38,"column":17,"nodeType":"882","messageId":"883","endLine":38,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":39,"column":12,"nodeType":"882","messageId":"883","endLine":39,"endColumn":16},{"ruleId":"880","severity":1,"message":"950","line":62,"column":13,"nodeType":"882","messageId":"883","endLine":62,"endColumn":25},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"949","line":38,"column":12,"nodeType":"882","messageId":"883","endLine":38,"endColumn":18},{"ruleId":"880","severity":1,"message":"921","line":39,"column":21,"nodeType":"882","messageId":"883","endLine":39,"endColumn":31},{"ruleId":"880","severity":1,"message":"904","line":40,"column":19,"nodeType":"882","messageId":"883","endLine":40,"endColumn":27},{"ruleId":"880","severity":1,"message":"952","line":42,"column":12,"nodeType":"882","messageId":"883","endLine":42,"endColumn":21},{"ruleId":"880","severity":1,"message":"953","line":43,"column":12,"nodeType":"882","messageId":"883","endLine":43,"endColumn":20},{"ruleId":"880","severity":1,"message":"954","line":45,"column":12,"nodeType":"882","messageId":"883","endLine":45,"endColumn":20},{"ruleId":"880","severity":1,"message":"924","line":112,"column":19,"nodeType":"882","messageId":"883","endLine":112,"endColumn":35},{"ruleId":"880","severity":1,"message":"925","line":125,"column":19,"nodeType":"882","messageId":"883","endLine":125,"endColumn":35},{"ruleId":"880","severity":1,"message":"955","line":147,"column":19,"nodeType":"882","messageId":"883","endLine":147,"endColumn":31},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"943","line":5,"column":19,"nodeType":"882","messageId":"883","endLine":5,"endColumn":28},{"ruleId":"880","severity":1,"message":"944","line":5,"column":39,"nodeType":"882","messageId":"883","endLine":5,"endColumn":48},{"ruleId":"880","severity":1,"message":"945","line":5,"column":59,"nodeType":"882","messageId":"883","endLine":5,"endColumn":68},{"ruleId":"880","severity":1,"message":"956","line":9,"column":9,"nodeType":"882","messageId":"883","endLine":9,"endColumn":22},{"ruleId":"880","severity":1,"message":"957","line":12,"column":8,"nodeType":"882","messageId":"883","endLine":12,"endColumn":14},{"ruleId":"880","severity":1,"message":"958","line":15,"column":3,"nodeType":"882","messageId":"883","endLine":15,"endColumn":8},{"ruleId":"880","severity":1,"message":"959","line":16,"column":3,"nodeType":"882","messageId":"883","endLine":16,"endColumn":11},{"ruleId":"880","severity":1,"message":"960","line":17,"column":3,"nodeType":"882","messageId":"883","endLine":17,"endColumn":12},{"ruleId":"880","severity":1,"message":"961","line":18,"column":3,"nodeType":"882","messageId":"883","endLine":18,"endColumn":12},{"ruleId":"880","severity":1,"message":"962","line":19,"column":3,"nodeType":"882","messageId":"883","endLine":19,"endColumn":12},{"ruleId":"880","severity":1,"message":"963","line":20,"column":3,"nodeType":"882","messageId":"883","endLine":20,"endColumn":7},{"ruleId":"880","severity":1,"message":"964","line":28,"column":8,"nodeType":"882","messageId":"883","endLine":28,"endColumn":20},{"ruleId":"880","severity":1,"message":"965","line":29,"column":9,"nodeType":"882","messageId":"883","endLine":29,"endColumn":23},{"ruleId":"880","severity":1,"message":"921","line":58,"column":18,"nodeType":"882","messageId":"883","endLine":58,"endColumn":28},{"ruleId":"880","severity":1,"message":"904","line":59,"column":16,"nodeType":"882","messageId":"883","endLine":59,"endColumn":24},{"ruleId":"880","severity":1,"message":"966","line":71,"column":10,"nodeType":"882","messageId":"883","endLine":71,"endColumn":13},{"ruleId":"880","severity":1,"message":"967","line":71,"column":15,"nodeType":"882","messageId":"883","endLine":71,"endColumn":21},{"ruleId":"880","severity":1,"message":"928","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"968","line":9,"column":22,"nodeType":"882","messageId":"883","endLine":9,"endColumn":31},{"ruleId":"880","severity":1,"message":"929","line":35,"column":12,"nodeType":"882","messageId":"883","endLine":35,"endColumn":19},{"ruleId":"880","severity":1,"message":"930","line":36,"column":19,"nodeType":"882","messageId":"883","endLine":36,"endColumn":29},{"ruleId":"880","severity":1,"message":"904","line":37,"column":17,"nodeType":"882","messageId":"883","endLine":37,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":38,"column":12,"nodeType":"882","messageId":"883","endLine":38,"endColumn":16},{"ruleId":"880","severity":1,"message":"952","line":40,"column":12,"nodeType":"882","messageId":"883","endLine":40,"endColumn":21},{"ruleId":"880","severity":1,"message":"931","line":58,"column":13,"nodeType":"882","messageId":"883","endLine":58,"endColumn":29},{"ruleId":"880","severity":1,"message":"932","line":68,"column":13,"nodeType":"882","messageId":"883","endLine":68,"endColumn":36},{"ruleId":"880","severity":1,"message":"933","line":84,"column":13,"nodeType":"882","messageId":"883","endLine":84,"endColumn":20},{"ruleId":"880","severity":1,"message":"925","line":131,"column":13,"nodeType":"882","messageId":"883","endLine":131,"endColumn":29},{"ruleId":"880","severity":1,"message":"969","line":152,"column":13,"nodeType":"882","messageId":"883","endLine":152,"endColumn":26},{"ruleId":"880","severity":1,"message":"936","line":169,"column":11,"nodeType":"882","messageId":"883","endLine":169,"endColumn":25},{"ruleId":"880","severity":1,"message":"970","line":180,"column":13,"nodeType":"882","messageId":"883","endLine":180,"endColumn":25},{"ruleId":"880","severity":1,"message":"971","line":1,"column":9,"nodeType":"882","messageId":"883","endLine":1,"endColumn":17},{"ruleId":"880","severity":1,"message":"928","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"943","line":5,"column":19,"nodeType":"882","messageId":"883","endLine":5,"endColumn":28},{"ruleId":"880","severity":1,"message":"944","line":5,"column":39,"nodeType":"882","messageId":"883","endLine":5,"endColumn":48},{"ruleId":"880","severity":1,"message":"945","line":5,"column":59,"nodeType":"882","messageId":"883","endLine":5,"endColumn":68},{"ruleId":"880","severity":1,"message":"896","line":9,"column":9,"nodeType":"882","messageId":"883","endLine":9,"endColumn":21},{"ruleId":"880","severity":1,"message":"972","line":11,"column":8,"nodeType":"882","messageId":"883","endLine":11,"endColumn":17},{"ruleId":"880","severity":1,"message":"957","line":12,"column":8,"nodeType":"882","messageId":"883","endLine":12,"endColumn":14},{"ruleId":"880","severity":1,"message":"958","line":15,"column":3,"nodeType":"882","messageId":"883","endLine":15,"endColumn":8},{"ruleId":"880","severity":1,"message":"959","line":16,"column":3,"nodeType":"882","messageId":"883","endLine":16,"endColumn":11},{"ruleId":"880","severity":1,"message":"960","line":17,"column":3,"nodeType":"882","messageId":"883","endLine":17,"endColumn":12},{"ruleId":"880","severity":1,"message":"961","line":18,"column":3,"nodeType":"882","messageId":"883","endLine":18,"endColumn":12},{"ruleId":"880","severity":1,"message":"962","line":19,"column":3,"nodeType":"882","messageId":"883","endLine":19,"endColumn":12},{"ruleId":"880","severity":1,"message":"963","line":20,"column":3,"nodeType":"882","messageId":"883","endLine":20,"endColumn":7},{"ruleId":"880","severity":1,"message":"964","line":22,"column":8,"nodeType":"882","messageId":"883","endLine":22,"endColumn":20},{"ruleId":"880","severity":1,"message":"900","line":26,"column":7,"nodeType":"882","messageId":"883","endLine":26,"endColumn":15},{"ruleId":"880","severity":1,"message":"973","line":34,"column":11,"nodeType":"882","messageId":"883","endLine":34,"endColumn":18},{"ruleId":"880","severity":1,"message":"974","line":35,"column":12,"nodeType":"882","messageId":"883","endLine":35,"endColumn":21},{"ruleId":"880","severity":1,"message":"975","line":36,"column":10,"nodeType":"882","messageId":"883","endLine":36,"endColumn":17},{"ruleId":"880","severity":1,"message":"921","line":36,"column":19,"nodeType":"882","messageId":"883","endLine":36,"endColumn":29},{"ruleId":"880","severity":1,"message":"949","line":37,"column":12,"nodeType":"882","messageId":"883","endLine":37,"endColumn":18},{"ruleId":"880","severity":1,"message":"903","line":38,"column":10,"nodeType":"882","messageId":"883","endLine":38,"endColumn":15},{"ruleId":"880","severity":1,"message":"904","line":38,"column":17,"nodeType":"882","messageId":"883","endLine":38,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":39,"column":12,"nodeType":"882","messageId":"883","endLine":39,"endColumn":16},{"ruleId":"880","severity":1,"message":"976","line":40,"column":12,"nodeType":"882","messageId":"883","endLine":40,"endColumn":16},{"ruleId":"880","severity":1,"message":"950","line":62,"column":13,"nodeType":"882","messageId":"883","endLine":62,"endColumn":25},{"ruleId":"880","severity":1,"message":"928","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"943","line":5,"column":19,"nodeType":"882","messageId":"883","endLine":5,"endColumn":28},{"ruleId":"880","severity":1,"message":"944","line":5,"column":39,"nodeType":"882","messageId":"883","endLine":5,"endColumn":48},{"ruleId":"880","severity":1,"message":"945","line":5,"column":59,"nodeType":"882","messageId":"883","endLine":5,"endColumn":68},{"ruleId":"880","severity":1,"message":"904","line":37,"column":17,"nodeType":"882","messageId":"883","endLine":37,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":38,"column":12,"nodeType":"882","messageId":"883","endLine":38,"endColumn":16},{"ruleId":"880","severity":1,"message":"977","line":59,"column":13,"nodeType":"882","messageId":"883","endLine":59,"endColumn":26},{"ruleId":"880","severity":1,"message":"978","line":75,"column":11,"nodeType":"882","messageId":"883","endLine":75,"endColumn":24},{"ruleId":"880","severity":1,"message":"979","line":94,"column":13,"nodeType":"882","messageId":"883","endLine":94,"endColumn":27},{"ruleId":"880","severity":1,"message":"920","line":1,"column":24,"nodeType":"882","messageId":"883","endLine":1,"endColumn":29},{"ruleId":"880","severity":1,"message":"928","line":5,"column":10,"nodeType":"882","messageId":"883","endLine":5,"endColumn":14},{"ruleId":"880","severity":1,"message":"980","line":10,"column":23,"nodeType":"882","messageId":"883","endLine":10,"endColumn":34},{"ruleId":"880","severity":1,"message":"939","line":10,"column":35,"nodeType":"882","messageId":"883","endLine":10,"endColumn":41},{"ruleId":"880","severity":1,"message":"921","line":63,"column":19,"nodeType":"882","messageId":"883","endLine":63,"endColumn":29},{"ruleId":"880","severity":1,"message":"904","line":64,"column":17,"nodeType":"882","messageId":"883","endLine":64,"endColumn":25},{"ruleId":"880","severity":1,"message":"981","line":10,"column":27,"nodeType":"882","messageId":"883","endLine":10,"endColumn":36},{"ruleId":"880","severity":1,"message":"968","line":33,"column":10,"nodeType":"882","messageId":"883","endLine":33,"endColumn":19},{"ruleId":"880","severity":1,"message":"900","line":40,"column":7,"nodeType":"882","messageId":"883","endLine":40,"endColumn":15},{"ruleId":"880","severity":1,"message":"982","line":97,"column":9,"nodeType":"882","messageId":"883","endLine":97,"endColumn":21},{"ruleId":"880","severity":1,"message":"975","line":98,"column":8,"nodeType":"882","messageId":"883","endLine":98,"endColumn":15},{"ruleId":"880","severity":1,"message":"921","line":98,"column":17,"nodeType":"882","messageId":"883","endLine":98,"endColumn":27},{"ruleId":"880","severity":1,"message":"903","line":99,"column":8,"nodeType":"882","messageId":"883","endLine":99,"endColumn":13},{"ruleId":"880","severity":1,"message":"904","line":99,"column":15,"nodeType":"882","messageId":"883","endLine":99,"endColumn":23},{"ruleId":"880","severity":1,"message":"983","line":107,"column":17,"nodeType":"882","messageId":"883","endLine":107,"endColumn":25},{"ruleId":"880","severity":1,"message":"928","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"943","line":5,"column":19,"nodeType":"882","messageId":"883","endLine":5,"endColumn":28},{"ruleId":"880","severity":1,"message":"944","line":5,"column":39,"nodeType":"882","messageId":"883","endLine":5,"endColumn":48},{"ruleId":"880","severity":1,"message":"945","line":5,"column":59,"nodeType":"882","messageId":"883","endLine":5,"endColumn":68},{"ruleId":"880","severity":1,"message":"904","line":37,"column":17,"nodeType":"882","messageId":"883","endLine":37,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":38,"column":12,"nodeType":"882","messageId":"883","endLine":38,"endColumn":16},{"ruleId":"880","severity":1,"message":"947","line":40,"column":12,"nodeType":"882","messageId":"883","endLine":40,"endColumn":21},{"ruleId":"880","severity":1,"message":"948","line":40,"column":22,"nodeType":"882","messageId":"883","endLine":40,"endColumn":34},{"ruleId":"880","severity":1,"message":"977","line":63,"column":13,"nodeType":"882","messageId":"883","endLine":63,"endColumn":26},{"ruleId":"880","severity":1,"message":"978","line":79,"column":11,"nodeType":"882","messageId":"883","endLine":79,"endColumn":24},{"ruleId":"880","severity":1,"message":"979","line":101,"column":13,"nodeType":"882","messageId":"883","endLine":101,"endColumn":27},{"ruleId":"880","severity":1,"message":"928","line":3,"column":10,"nodeType":"882","messageId":"883","endLine":3,"endColumn":14},{"ruleId":"880","severity":1,"message":"918","line":4,"column":10,"nodeType":"882","messageId":"883","endLine":4,"endColumn":16},{"ruleId":"880","severity":1,"message":"919","line":4,"column":18,"nodeType":"882","messageId":"883","endLine":4,"endColumn":22},{"ruleId":"880","severity":1,"message":"920","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":29},{"ruleId":"880","severity":1,"message":"984","line":10,"column":8,"nodeType":"882","messageId":"883","endLine":10,"endColumn":20},{"ruleId":"880","severity":1,"message":"985","line":34,"column":7,"nodeType":"882","messageId":"883","endLine":34,"endColumn":13},{"ruleId":"880","severity":1,"message":"904","line":49,"column":15,"nodeType":"882","messageId":"883","endLine":49,"endColumn":23},{"ruleId":"880","severity":1,"message":"922","line":51,"column":11,"nodeType":"882","messageId":"883","endLine":51,"endColumn":15},{"ruleId":"880","severity":1,"message":"952","line":52,"column":10,"nodeType":"882","messageId":"883","endLine":52,"endColumn":19},{"ruleId":"880","severity":1,"message":"923","line":53,"column":9,"nodeType":"882","messageId":"883","endLine":53,"endColumn":17},{"ruleId":"880","severity":1,"message":"947","line":54,"column":10,"nodeType":"882","messageId":"883","endLine":54,"endColumn":19},{"ruleId":"880","severity":1,"message":"948","line":54,"column":20,"nodeType":"882","messageId":"883","endLine":54,"endColumn":32},{"ruleId":"880","severity":1,"message":"986","line":92,"column":9,"nodeType":"882","messageId":"883","endLine":92,"endColumn":21},{"ruleId":"880","severity":1,"message":"987","line":120,"column":9,"nodeType":"882","messageId":"883","endLine":120,"endColumn":20},{"ruleId":"880","severity":1,"message":"928","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":14},{"ruleId":"880","severity":1,"message":"937","line":3,"column":24,"nodeType":"882","messageId":"883","endLine":3,"endColumn":32},{"ruleId":"880","severity":1,"message":"938","line":3,"column":33,"nodeType":"882","messageId":"883","endLine":3,"endColumn":49},{"ruleId":"880","severity":1,"message":"980","line":8,"column":23,"nodeType":"882","messageId":"883","endLine":8,"endColumn":34},{"ruleId":"880","severity":1,"message":"939","line":8,"column":35,"nodeType":"882","messageId":"883","endLine":8,"endColumn":41},{"ruleId":"880","severity":1,"message":"921","line":25,"column":19,"nodeType":"882","messageId":"883","endLine":25,"endColumn":29},{"ruleId":"880","severity":1,"message":"904","line":26,"column":17,"nodeType":"882","messageId":"883","endLine":26,"endColumn":25},{"ruleId":"880","severity":1,"message":"941","line":27,"column":12,"nodeType":"882","messageId":"883","endLine":27,"endColumn":17},{"ruleId":"880","severity":1,"message":"942","line":27,"column":19,"nodeType":"882","messageId":"883","endLine":27,"endColumn":27},{"ruleId":"880","severity":1,"message":"988","line":12,"column":15,"nodeType":"882","messageId":"883","endLine":12,"endColumn":26},{"ruleId":"880","severity":1,"message":"989","line":1,"column":10,"nodeType":"882","messageId":"883","endLine":1,"endColumn":19},{"ruleId":"880","severity":1,"message":"989","line":1,"column":10,"nodeType":"882","messageId":"883","endLine":1,"endColumn":19},{"ruleId":"880","severity":1,"message":"989","line":1,"column":10,"nodeType":"882","messageId":"883","endLine":1,"endColumn":19},{"ruleId":"880","severity":1,"message":"946","line":9,"column":9,"nodeType":"882","messageId":"883","endLine":9,"endColumn":14},{"ruleId":"880","severity":1,"message":"974","line":65,"column":10,"nodeType":"882","messageId":"883","endLine":65,"endColumn":19},{"ruleId":"880","severity":1,"message":"975","line":66,"column":8,"nodeType":"882","messageId":"883","endLine":66,"endColumn":15},{"ruleId":"880","severity":1,"message":"921","line":66,"column":17,"nodeType":"882","messageId":"883","endLine":66,"endColumn":27},{"ruleId":"880","severity":1,"message":"903","line":67,"column":8,"nodeType":"882","messageId":"883","endLine":67,"endColumn":13},{"ruleId":"880","severity":1,"message":"904","line":67,"column":15,"nodeType":"882","messageId":"883","endLine":67,"endColumn":23},{"ruleId":"880","severity":1,"message":"976","line":68,"column":10,"nodeType":"882","messageId":"883","endLine":68,"endColumn":14},{"ruleId":"880","severity":1,"message":"952","line":69,"column":10,"nodeType":"882","messageId":"883","endLine":69,"endColumn":19},{"ruleId":"880","severity":1,"message":"990","line":69,"column":21,"nodeType":"882","messageId":"883","endLine":69,"endColumn":33},{"ruleId":"880","severity":1,"message":"923","line":70,"column":9,"nodeType":"882","messageId":"883","endLine":70,"endColumn":17},{"ruleId":"880","severity":1,"message":"989","line":1,"column":10,"nodeType":"882","messageId":"883","endLine":1,"endColumn":19},{"ruleId":"991","severity":1,"message":"992","line":3,"column":1,"nodeType":"993","endLine":5,"endColumn":3},{"ruleId":"880","severity":1,"message":"946","line":9,"column":9,"nodeType":"882","messageId":"883","endLine":9,"endColumn":14},{"ruleId":"880","severity":1,"message":"974","line":65,"column":10,"nodeType":"882","messageId":"883","endLine":65,"endColumn":19},{"ruleId":"880","severity":1,"message":"975","line":66,"column":8,"nodeType":"882","messageId":"883","endLine":66,"endColumn":15},{"ruleId":"880","severity":1,"message":"921","line":66,"column":17,"nodeType":"882","messageId":"883","endLine":66,"endColumn":27},{"ruleId":"880","severity":1,"message":"903","line":67,"column":8,"nodeType":"882","messageId":"883","endLine":67,"endColumn":13},{"ruleId":"880","severity":1,"message":"904","line":67,"column":15,"nodeType":"882","messageId":"883","endLine":67,"endColumn":23},{"ruleId":"880","severity":1,"message":"976","line":68,"column":10,"nodeType":"882","messageId":"883","endLine":68,"endColumn":14},{"ruleId":"880","severity":1,"message":"952","line":69,"column":10,"nodeType":"882","messageId":"883","endLine":69,"endColumn":19},{"ruleId":"880","severity":1,"message":"990","line":69,"column":21,"nodeType":"882","messageId":"883","endLine":69,"endColumn":33},{"ruleId":"880","severity":1,"message":"923","line":70,"column":9,"nodeType":"882","messageId":"883","endLine":70,"endColumn":17},{"ruleId":"880","severity":1,"message":"994","line":2,"column":37,"nodeType":"882","messageId":"883","endLine":2,"endColumn":47},{"ruleId":"880","severity":1,"message":"937","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":32},{"ruleId":"880","severity":1,"message":"938","line":4,"column":33,"nodeType":"882","messageId":"883","endLine":4,"endColumn":49},{"ruleId":"880","severity":1,"message":"943","line":5,"column":19,"nodeType":"882","messageId":"883","endLine":5,"endColumn":28},{"ruleId":"880","severity":1,"message":"944","line":5,"column":39,"nodeType":"882","messageId":"883","endLine":5,"endColumn":48},{"ruleId":"880","severity":1,"message":"945","line":5,"column":59,"nodeType":"882","messageId":"883","endLine":5,"endColumn":68},{"ruleId":"880","severity":1,"message":"904","line":48,"column":15,"nodeType":"882","messageId":"883","endLine":48,"endColumn":23},{"ruleId":"880","severity":1,"message":"974","line":37,"column":12,"nodeType":"882","messageId":"883","endLine":37,"endColumn":21},{"ruleId":"880","severity":1,"message":"921","line":39,"column":19,"nodeType":"882","messageId":"883","endLine":39,"endColumn":29},{"ruleId":"880","severity":1,"message":"904","line":40,"column":17,"nodeType":"882","messageId":"883","endLine":40,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":41,"column":12,"nodeType":"882","messageId":"883","endLine":41,"endColumn":16},{"ruleId":"880","severity":1,"message":"979","line":124,"column":15,"nodeType":"882","messageId":"883","endLine":124,"endColumn":29},{"ruleId":"880","severity":1,"message":"994","line":2,"column":37,"nodeType":"882","messageId":"883","endLine":2,"endColumn":47},{"ruleId":"880","severity":1,"message":"937","line":4,"column":24,"nodeType":"882","messageId":"883","endLine":4,"endColumn":32},{"ruleId":"880","severity":1,"message":"938","line":4,"column":33,"nodeType":"882","messageId":"883","endLine":4,"endColumn":49},{"ruleId":"880","severity":1,"message":"943","line":5,"column":19,"nodeType":"882","messageId":"883","endLine":5,"endColumn":28},{"ruleId":"880","severity":1,"message":"944","line":5,"column":39,"nodeType":"882","messageId":"883","endLine":5,"endColumn":48},{"ruleId":"880","severity":1,"message":"945","line":5,"column":59,"nodeType":"882","messageId":"883","endLine":5,"endColumn":68},{"ruleId":"880","severity":1,"message":"904","line":48,"column":15,"nodeType":"882","messageId":"883","endLine":48,"endColumn":23},{"ruleId":"880","severity":1,"message":"995","line":1,"column":10,"nodeType":"882","messageId":"883","endLine":1,"endColumn":17},{"ruleId":"880","severity":1,"message":"890","line":1,"column":25,"nodeType":"882","messageId":"883","endLine":1,"endColumn":39},{"ruleId":"880","severity":1,"message":"891","line":2,"column":10,"nodeType":"882","messageId":"883","endLine":2,"endColumn":20},{"ruleId":"880","severity":1,"message":"996","line":2,"column":22,"nodeType":"882","messageId":"883","endLine":2,"endColumn":30},{"ruleId":"880","severity":1,"message":"910","line":3,"column":10,"nodeType":"882","messageId":"883","endLine":3,"endColumn":13},{"ruleId":"880","severity":1,"message":"913","line":6,"column":8,"nodeType":"882","messageId":"883","endLine":6,"endColumn":12},{"ruleId":"880","severity":1,"message":"892","line":7,"column":8,"nodeType":"882","messageId":"883","endLine":7,"endColumn":16},{"ruleId":"880","severity":1,"message":"893","line":8,"column":8,"nodeType":"882","messageId":"883","endLine":8,"endColumn":16},{"ruleId":"880","severity":1,"message":"894","line":9,"column":8,"nodeType":"882","messageId":"883","endLine":9,"endColumn":20},{"ruleId":"880","severity":1,"message":"895","line":10,"column":8,"nodeType":"882","messageId":"883","endLine":10,"endColumn":29},{"ruleId":"880","severity":1,"message":"896","line":11,"column":10,"nodeType":"882","messageId":"883","endLine":11,"endColumn":22},{"ruleId":"880","severity":1,"message":"897","line":18,"column":5,"nodeType":"882","messageId":"883","endLine":18,"endColumn":9},{"ruleId":"880","severity":1,"message":"902","line":44,"column":7,"nodeType":"882","messageId":"883","endLine":44,"endColumn":11},"no-native-reassign",["997"],"no-negated-in-lhs",["998"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Notifications' is defined but never used.","'Maps' is defined but never used.","'Tables' is defined but never used.","'Icons' is defined but never used.","'Charts' is defined but never used.","'TableContainer' is defined but never used.","'makeStyles' is defined but never used.","'MenuItem' is defined but never used.","'EditIcon' is defined but never used.","'FileCopyIcon' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'BounceLoader' is defined but never used.","'Chip' is defined but never used.","'Paper' is defined but never used.","'textTransform' is defined but never used.","'override' is assigned a value but never used.","'StyledMenu' is assigned a value but never used.","'rows' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'openn' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'css' is defined but never used.","'styled' is defined but never used.","'alpha' is defined but never used.","'Menu' is defined but never used.","'style' is assigned a value but never used.","'useState' is defined but never used.","'theme' is assigned a value but never used.","'getMainChartData' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'setLoading' is assigned a value but never used.","'user' is assigned a value but never used.","'navigate' is assigned a value but never used.","'initialFormState' is assigned a value but never used.","'validationSchema' is assigned a value but never used.","'add_interest' is assigned a value but never used.","'add_fee' is assigned a value but never used.","'Link' is defined but never used.","'Loading' is assigned a value but never used.","'setloading' is assigned a value but never used.","'savingsFormState' is assigned a value but never used.","'savingsValidationSchema' is assigned a value but never used.","'savings' is assigned a value but never used.","'activateCustomer' is assigned a value but never used.","'deactivateCustomer' is assigned a value but never used.","'deleteCustomer' is assigned a value but never used.","'useField' is defined but never used.","'useFormikContext' is defined but never used.","'Select' is defined but never used.","'TextareaAutosize' is defined but never used.","'bhead' is assigned a value but never used.","'setBHead' is assigned a value but never used.","'yupObject' is defined but never used.","'yupString' is defined but never used.","'yupNumber' is defined but never used.","'toast' is defined but never used.","'currentId' is assigned a value but never used.","'setCurrentId' is assigned a value but never used.","'loader' is assigned a value but never used.","'approve_loan' is assigned a value but never used.","'add_product' is assigned a value but never used.","'marketers' is assigned a value but never used.","'branches' is assigned a value but never used.","'products' is assigned a value but never used.","'add_borrower' is assigned a value but never used.","'BounceLoaderk' is defined but never used.","'Widget' is defined but never used.","'Table' is defined but never used.","'TableRow' is defined but never used.","'TableHead' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'Grid' is defined but never used.","'ActionButton' is defined but never used.","'DateTimePicker' is defined but never used.","'bvn' is assigned a value but never used.","'setBvn' is assigned a value but never used.","'DotLoader' is defined but never used.","'edit_customer' is assigned a value but never used.","'fundCustomer' is assigned a value but never used.","'Fragment' is defined but never used.","'PageTitle' is defined but never used.","'classes' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'edit_marketer' is assigned a value but never used.","'fund_marketer' is assigned a value but never used.","'deleteMarketer' is assigned a value but never used.","'FormControl' is defined but never used.","'loginUser' is defined but never used.","'userDispatch' is assigned a value but never used.","'setError' is assigned a value but never used.","'MUIDataTable' is defined but never used.","'states' is assigned a value but never used.","'deleteBranch' is assigned a value but never used.","'edit_branch' is assigned a value but never used.","'useLocation' is defined but never used.","'lightBlue' is defined but never used.","'setMarketers' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useContext' is defined but never used.","'Divider' is defined but never used.","'useTheme' is defined but never used.","no-global-assign","no-unsafe-negation"]