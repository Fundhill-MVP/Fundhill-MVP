[{"/home/smartdev/Desktop/Fundhill/src/index.js":"1","/home/smartdev/Desktop/Fundhill/src/serviceWorker.js":"2","/home/smartdev/Desktop/Fundhill/src/context/UserContext.js":"3","/home/smartdev/Desktop/Fundhill/src/context/LayoutContext.js":"4","/home/smartdev/Desktop/Fundhill/src/themes/index.js":"5","/home/smartdev/Desktop/Fundhill/src/app/index.js":"6","/home/smartdev/Desktop/Fundhill/src/themes/default.js":"7","/home/smartdev/Desktop/Fundhill/src/app/App.jsx":"8","/home/smartdev/Desktop/Fundhill/src/router/index.js":"9","/home/smartdev/Desktop/Fundhill/src/router/Router.jsx":"10","/home/smartdev/Desktop/Fundhill/src/context/Context.js":"11","/home/smartdev/Desktop/Fundhill/src/router/adminRoute/AdminRoute.jsx":"12","/home/smartdev/Desktop/Fundhill/src/router/adminRoute/AuthRoute.jsx":"13","/home/smartdev/Desktop/Fundhill/src/router/adminRoute/HomeRoute.jsx":"14","/home/smartdev/Desktop/Fundhill/src/context/Reducer.js":"15","/home/smartdev/Desktop/Fundhill/src/components/Layout/Layout.js":"16","/home/smartdev/Desktop/Fundhill/src/pages/admin/branch/NewBranch.jsx":"17","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/Dashboard.js":"18","/home/smartdev/Desktop/Fundhill/src/pages/admin/index.js":"19","/home/smartdev/Desktop/Fundhill/src/components/Layout/styles.js":"20","/home/smartdev/Desktop/Fundhill/src/pages/admin/branch/styles.js":"21","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/styles.js":"22","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/mock.js":"23","/home/smartdev/Desktop/Fundhill/src/components/PageTitle/PageTitle.js":"24","/home/smartdev/Desktop/Fundhill/src/components/Sidebar/components/Dot.js":"25","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/components/Table/Table.js":"26","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/components/BigStat/BigStat.js":"27","/home/smartdev/Desktop/Fundhill/src/components/Sidebar/Sidebar.js":"28","/home/smartdev/Desktop/Fundhill/src/components/Header/Header.js":"29","/home/smartdev/Desktop/Fundhill/src/pages/maps/Maps.js":"30","/home/smartdev/Desktop/Fundhill/src/pages/tables/Tables.js":"31","/home/smartdev/Desktop/Fundhill/src/pages/typography/Typography.js":"32","/home/smartdev/Desktop/Fundhill/src/pages/notifications/Notifications.js":"33","/home/smartdev/Desktop/Fundhill/src/pages/charts/Charts.js":"34","/home/smartdev/Desktop/Fundhill/src/pages/icons/Icons.js":"35","/home/smartdev/Desktop/Fundhill/src/pages/admin/auth/login/Login.js":"36","/home/smartdev/Desktop/Fundhill/src/pages/admin/branch/AllBranches.jsx":"37","/home/smartdev/Desktop/Fundhill/src/pages/admin/auth/login/ConfirmEmail.js":"38","/home/smartdev/Desktop/Fundhill/src/components/Wrappers/Wrappers.js":"39","/home/smartdev/Desktop/Fundhill/src/components/Widget/Widget.js":"40","/home/smartdev/Desktop/Fundhill/src/components/PageTitle/styles.js":"41","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/components/BigStat/styles.js":"42","/home/smartdev/Desktop/Fundhill/src/components/Sidebar/styles.js":"43","/home/smartdev/Desktop/Fundhill/src/components/Header/styles.js":"44","/home/smartdev/Desktop/Fundhill/src/pages/maps/styles.js":"45","/home/smartdev/Desktop/Fundhill/src/pages/typography/styles.js":"46","/home/smartdev/Desktop/Fundhill/src/pages/notifications/styles.js":"47","/home/smartdev/Desktop/Fundhill/src/pages/icons/styles.js":"48","/home/smartdev/Desktop/Fundhill/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"49","/home/smartdev/Desktop/Fundhill/src/pages/charts/components/ApexHeatmap.js":"50","/home/smartdev/Desktop/Fundhill/src/pages/charts/components/ApexLineChart.js":"51","/home/smartdev/Desktop/Fundhill/src/components/Notification/Notification.js":"52","/home/smartdev/Desktop/Fundhill/src/components/UserAvatar/UserAvatar.js":"53","/home/smartdev/Desktop/Fundhill/src/pages/admin/auth/login/styles.js":"54","/home/smartdev/Desktop/Fundhill/src/components/Widget/styles.js":"55","/home/smartdev/Desktop/Fundhill/src/components/assets/index.js":"56","/home/smartdev/Desktop/Fundhill/src/pages/admin/branch/ActionButton.jsx":"57","/home/smartdev/Desktop/Fundhill/src/services/index.js":"58","/home/smartdev/Desktop/Fundhill/src/components/UserAvatar/styles.js":"59","/home/smartdev/Desktop/Fundhill/src/components/Notification/styles.js":"60","/home/smartdev/Desktop/Fundhill/src/pages/admin/branch/Modal.jsx":"61","/home/smartdev/Desktop/Fundhill/src/services/serviceApi.js":"62","/home/smartdev/Desktop/Fundhill/src/services/localForage.js":"63","/home/smartdev/Desktop/Fundhill/src/components/Sidebar/components/SidebarLink/styles.js":"64","/home/smartdev/Desktop/Fundhill/src/components/FormsUI/index.js":"65","/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Button/Button.jsx":"66","/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Select/Select.jsx":"67","/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Checkbox/Checkbox.jsx":"68","/home/smartdev/Desktop/Fundhill/src/components/FormsUI/DataTimePicker/DataTimePicker.jsx":"69","/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Textfield/TextField.jsx":"70","/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Table/Table.jsx":"71","/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Table/styles.js":"72","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/AllCustomer.jsx":"73","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/NewCustomer.jsx":"74","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/NewProduct.jsx":"75","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/AddBorrower.jsx":"76","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/DisbursedLoan.jsx":"77","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/PendingLoan.jsx":"78","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/PendingCustomer.jsx":"79","/home/smartdev/Desktop/Fundhill/src/pages/admin/expenses/AllExpenses.jsx":"80","/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/AllMarketer.jsx":"81","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/DeletedCustomer.jsx":"82","/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/MarketerAccount.jsx":"83","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/OngoingLoan.jsx":"84","/home/smartdev/Desktop/Fundhill/src/pages/admin/interest/Fees.jsx":"85","/home/smartdev/Desktop/Fundhill/src/pages/admin/interest/InterestRate.jsx":"86","/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/NewMarketer.jsx":"87","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/styles.js":"88","/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/styles.js":"89","/home/smartdev/Desktop/Fundhill/src/pages/admin/interest/styles.js":"90","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/styles.js":"91","/home/smartdev/Desktop/Fundhill/src/pages/admin/expenses/styles.js":"92","/home/smartdev/Desktop/Fundhill/src/pages/admin/expenses/NewExpense.jsx":"93","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/ActionButton.jsx":"94","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/ActionButton.jsx":"95","/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/ActionButton.jsx":"96","/home/smartdev/Desktop/Fundhill/src/pages/admin/interest/ActionButton.jsx":"97","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/Modal.jsx":"98","/home/smartdev/Desktop/Fundhill/src/pages/admin/interest/Modal.jsx":"99","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/Modal.jsx":"100","/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/Modal.jsx":"101","/home/smartdev/Desktop/Fundhill/src/pages/admin/expenses/ActionButton.jsx":"102","/home/smartdev/Desktop/Fundhill/src/pages/admin/expenses/Modal.jsx":"103","/home/smartdev/Desktop/Fundhill/src/router/adminRoute/DashboardRoute.jsx":"104","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/TotalWithdrawal.jsx":"105","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/TotalDeposite.jsx":"106","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/NewProduct.jsx":"107","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/FixedSavingsRep.jsx":"108","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/Allcustomers.jsx":"109","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/AllBranch/AllBranch.jsx":"110","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/AllBranch/BtnAction.jsx":"111","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/AllBranch/Modal.jsx":"112","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/OngoingLoans/OngoingLoans.jsx":"113","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/Allmarketers/Allmarketers.jsx":"114","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/Allmarketers/ActionButton.jsx":"115","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/OngoingLoans/ActionButton.jsx":"116","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/Allmarketers/Modal.jsx":"117","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/OngoingLoans/Modal.jsx":"118"},{"size":1097,"mtime":1658281162427,"results":"119","hashOfConfig":"120"},{"size":4948,"mtime":1618306617000,"results":"121","hashOfConfig":"120"},{"size":1977,"mtime":1618306617000,"results":"122","hashOfConfig":"120"},{"size":1392,"mtime":1618306617000,"results":"123","hashOfConfig":"120"},{"size":502,"mtime":1618306617000,"results":"124","hashOfConfig":"120"},{"size":44,"mtime":1658281132306,"results":"125","hashOfConfig":"120"},{"size":2987,"mtime":1618306617000,"results":"126","hashOfConfig":"120"},{"size":183,"mtime":1658281132098,"results":"127","hashOfConfig":"120"},{"size":54,"mtime":1658281132098,"results":"128","hashOfConfig":"120"},{"size":617,"mtime":1659042483975,"results":"129","hashOfConfig":"120"},{"size":714,"mtime":1650928944642,"results":"130","hashOfConfig":"120"},{"size":5832,"mtime":1659402853292,"results":"131","hashOfConfig":"120"},{"size":355,"mtime":1658547916030,"results":"132","hashOfConfig":"120"},{"size":192,"mtime":1658758908646,"results":"133","hashOfConfig":"120"},{"size":982,"mtime":1641693546000,"results":"134","hashOfConfig":"120"},{"size":3460,"mtime":1659216773352,"results":"135","hashOfConfig":"120"},{"size":5931,"mtime":1658945682064,"results":"136","hashOfConfig":"120"},{"size":25218,"mtime":1659473579997,"results":"137","hashOfConfig":"120"},{"size":3601,"mtime":1658935043933,"results":"138","hashOfConfig":"120"},{"size":680,"mtime":1618306617000,"results":"139","hashOfConfig":"120"},{"size":3958,"mtime":1658882849110,"results":"140","hashOfConfig":"120"},{"size":4312,"mtime":1659042483855,"results":"141","hashOfConfig":"120"},{"size":4105,"mtime":1618306617000,"results":"142","hashOfConfig":"120"},{"size":427,"mtime":1618306617000,"results":"143","hashOfConfig":"120"},{"size":862,"mtime":1618306617000,"results":"144","hashOfConfig":"120"},{"size":1274,"mtime":1658538131874,"results":"145","hashOfConfig":"120"},{"size":4039,"mtime":1618306617000,"results":"146","hashOfConfig":"120"},{"size":8017,"mtime":1659216773352,"results":"147","hashOfConfig":"120"},{"size":8952,"mtime":1658547915942,"results":"148","hashOfConfig":"120"},{"size":971,"mtime":1618306617000,"results":"149","hashOfConfig":"120"},{"size":2082,"mtime":1618306617000,"results":"150","hashOfConfig":"120"},{"size":4506,"mtime":1618306617000,"results":"151","hashOfConfig":"120"},{"size":13470,"mtime":1618306617000,"results":"152","hashOfConfig":"120"},{"size":5556,"mtime":1618306617000,"results":"153","hashOfConfig":"120"},{"size":377833,"mtime":1618306617000,"results":"154","hashOfConfig":"120"},{"size":12536,"mtime":1659471924333,"results":"155","hashOfConfig":"120"},{"size":5534,"mtime":1659390915745,"results":"156","hashOfConfig":"120"},{"size":1307,"mtime":1659472187347,"results":"157","hashOfConfig":"120"},{"size":3790,"mtime":1618306617000,"results":"158","hashOfConfig":"120"},{"size":2485,"mtime":1618306617000,"results":"159","hashOfConfig":"120"},{"size":462,"mtime":1618306617000,"results":"160","hashOfConfig":"120"},{"size":1027,"mtime":1618306617000,"results":"161","hashOfConfig":"120"},{"size":1304,"mtime":1658547916002,"results":"162","hashOfConfig":"120"},{"size":3868,"mtime":1618306617000,"results":"163","hashOfConfig":"120"},{"size":171,"mtime":1618306617000,"results":"164","hashOfConfig":"120"},{"size":374,"mtime":1618306617000,"results":"165","hashOfConfig":"120"},{"size":1858,"mtime":1618306617000,"results":"166","hashOfConfig":"120"},{"size":780,"mtime":1618306617000,"results":"167","hashOfConfig":"120"},{"size":4472,"mtime":1658889768848,"results":"168","hashOfConfig":"120"},{"size":1794,"mtime":1618306617000,"results":"169","hashOfConfig":"120"},{"size":1328,"mtime":1618306617000,"results":"170","hashOfConfig":"120"},{"size":3296,"mtime":1618306617000,"results":"171","hashOfConfig":"120"},{"size":593,"mtime":1618306617000,"results":"172","hashOfConfig":"120"},{"size":3669,"mtime":1659216773352,"results":"173","hashOfConfig":"120"},{"size":969,"mtime":1618306617000,"results":"174","hashOfConfig":"120"},{"size":61,"mtime":1658445859417,"results":"175","hashOfConfig":"120"},{"size":4101,"mtime":1659393376909,"results":"176","hashOfConfig":"120"},{"size":95,"mtime":1650929978925,"results":"177","hashOfConfig":"120"},{"size":276,"mtime":1618306617000,"results":"178","hashOfConfig":"120"},{"size":993,"mtime":1618306617000,"results":"179","hashOfConfig":"120"},{"size":13413,"mtime":1659390915745,"results":"180","hashOfConfig":"120"},{"size":3319,"mtime":1658547916034,"results":"181","hashOfConfig":"120"},{"size":1275,"mtime":1645405946395,"results":"182","hashOfConfig":"120"},{"size":1411,"mtime":1658547915990,"results":"183","hashOfConfig":"120"},{"size":360,"mtime":1659216773352,"results":"184","hashOfConfig":"120"},{"size":527,"mtime":1659216773352,"results":"185","hashOfConfig":"120"},{"size":957,"mtime":1658888260443,"results":"186","hashOfConfig":"120"},{"size":976,"mtime":1658888535467,"results":"187","hashOfConfig":"120"},{"size":635,"mtime":1658888534739,"results":"188","hashOfConfig":"120"},{"size":549,"mtime":1658888260431,"results":"189","hashOfConfig":"120"},{"size":1270,"mtime":1658888260431,"results":"190","hashOfConfig":"120"},{"size":2870,"mtime":1658547915926,"results":"191","hashOfConfig":"120"},{"size":23261,"mtime":1659516066350,"results":"192","hashOfConfig":"120"},{"size":13575,"mtime":1658946669337,"results":"193","hashOfConfig":"120"},{"size":5050,"mtime":1658937158567,"results":"194","hashOfConfig":"120"},{"size":6709,"mtime":1658937158479,"results":"195","hashOfConfig":"120"},{"size":2468,"mtime":1658936356421,"results":"196","hashOfConfig":"120"},{"size":4647,"mtime":1658936356465,"results":"197","hashOfConfig":"120"},{"size":5804,"mtime":1658937158483,"results":"198","hashOfConfig":"120"},{"size":3654,"mtime":1659390915749,"results":"199","hashOfConfig":"120"},{"size":5066,"mtime":1659393164189,"results":"200","hashOfConfig":"120"},{"size":5548,"mtime":1658937158483,"results":"201","hashOfConfig":"120"},{"size":4899,"mtime":1659393164189,"results":"202","hashOfConfig":"120"},{"size":4648,"mtime":1658936356465,"results":"203","hashOfConfig":"120"},{"size":4410,"mtime":1658936948154,"results":"204","hashOfConfig":"120"},{"size":5064,"mtime":1658937158475,"results":"205","hashOfConfig":"120"},{"size":6128,"mtime":1659393164193,"results":"206","hashOfConfig":"120"},{"size":3958,"mtime":1658917439302,"results":"207","hashOfConfig":"120"},{"size":4312,"mtime":1659402853292,"results":"208","hashOfConfig":"120"},{"size":3958,"mtime":1658917457206,"results":"209","hashOfConfig":"120"},{"size":3958,"mtime":1658917464090,"results":"210","hashOfConfig":"120"},{"size":3958,"mtime":1658917453234,"results":"211","hashOfConfig":"120"},{"size":5849,"mtime":1659019484652,"results":"212","hashOfConfig":"120"},{"size":3115,"mtime":1658935538386,"results":"213","hashOfConfig":"120"},{"size":3115,"mtime":1658935562147,"results":"214","hashOfConfig":"120"},{"size":3064,"mtime":1659402853280,"results":"215","hashOfConfig":"120"},{"size":3115,"mtime":1658935556147,"results":"216","hashOfConfig":"120"},{"size":4817,"mtime":1658936475038,"results":"217","hashOfConfig":"120"},{"size":4817,"mtime":1658936499159,"results":"218","hashOfConfig":"120"},{"size":4817,"mtime":1658936506079,"results":"219","hashOfConfig":"120"},{"size":13118,"mtime":1659402853280,"results":"220","hashOfConfig":"120"},{"size":4101,"mtime":1659390915745,"results":"221","hashOfConfig":"120"},{"size":13413,"mtime":1659390915749,"results":"222","hashOfConfig":"120"},{"size":1537,"mtime":1659391172192,"results":"223","hashOfConfig":"120"},{"size":2780,"mtime":1659042483851,"results":"224","hashOfConfig":"120"},{"size":2909,"mtime":1659042483851,"results":"225","hashOfConfig":"120"},{"size":9704,"mtime":1659042483791,"results":"226","hashOfConfig":"120"},{"size":3089,"mtime":1659042483791,"results":"227","hashOfConfig":"120"},{"size":24704,"mtime":1659042483771,"results":"228","hashOfConfig":"120"},{"size":2927,"mtime":1659216773352,"results":"229","hashOfConfig":"120"},{"size":3090,"mtime":1659216773352,"results":"230","hashOfConfig":"120"},{"size":6775,"mtime":1659216773352,"results":"231","hashOfConfig":"120"},{"size":3493,"mtime":1659391172192,"results":"232","hashOfConfig":"120"},{"size":3028,"mtime":1659391172192,"results":"233","hashOfConfig":"120"},{"size":2994,"mtime":1659392674624,"results":"234","hashOfConfig":"120"},{"size":2958,"mtime":1659391172192,"results":"235","hashOfConfig":"120"},{"size":7652,"mtime":1659391172192,"results":"236","hashOfConfig":"120"},{"size":7856,"mtime":1659391172192,"results":"237","hashOfConfig":"120"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},"1xc6nde",{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"240"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"240"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"240"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"240"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"240"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"240"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"240"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"240"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"240"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"240"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"240"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"240"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"240"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"240"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"240"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"240"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"240"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"240"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"240"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"240"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"240"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"240"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"240"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"240"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"240"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"240"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"240"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"240"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"240"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"240"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"240"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"240"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"240"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"240"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"240"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"240"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"240"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"240"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"240"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},"/home/smartdev/Desktop/Fundhill/src/index.js",[],["509","510"],"/home/smartdev/Desktop/Fundhill/src/serviceWorker.js",[],"/home/smartdev/Desktop/Fundhill/src/context/UserContext.js",[],"/home/smartdev/Desktop/Fundhill/src/context/LayoutContext.js",[],"/home/smartdev/Desktop/Fundhill/src/themes/index.js",[],"/home/smartdev/Desktop/Fundhill/src/app/index.js",[],"/home/smartdev/Desktop/Fundhill/src/themes/default.js",[],"/home/smartdev/Desktop/Fundhill/src/app/App.jsx",[],"/home/smartdev/Desktop/Fundhill/src/router/index.js",[],"/home/smartdev/Desktop/Fundhill/src/router/Router.jsx",[],"/home/smartdev/Desktop/Fundhill/src/context/Context.js",[],"/home/smartdev/Desktop/Fundhill/src/router/adminRoute/AdminRoute.jsx",[],"/home/smartdev/Desktop/Fundhill/src/router/adminRoute/AuthRoute.jsx",[],"/home/smartdev/Desktop/Fundhill/src/router/adminRoute/HomeRoute.jsx",[],"/home/smartdev/Desktop/Fundhill/src/context/Reducer.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Layout/Layout.js",["511","512","513","514","515","516","517"],"import React from \"react\";\nimport {\n  useLocation,\n  Outlet,\n  Link\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Box, IconButton } from '@material-ui/core'\nimport Icon from '@mdi/react'\n\n//icons\nimport {\n  mdiFacebook as FacebookIcon,\n  mdiTwitter as TwitterIcon,\n  mdiGithub as GithubIcon,\n} from '@mdi/js'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Typography from \"../../pages/typography\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Tables from \"../../pages/tables\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\n\nfunction Layout(props) {\n  const classes = useStyles();\n  // global\n  const layoutState = useLayoutState();\n  let location = useLocation();\n\n  return (\n    <div className={classes.root}>\n      <>\n        <Header history={props.history} />\n        <Sidebar location={location} />\n\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n          })}\n        >\n          <Outlet />\n\n          <div className={classes.fakeToolbar} />\n\n          <Box\n            mt={5}\n            width={\"100%\"}\n            display={\"flex\"}\n            alignItems={\"center\"}\n            justifyContent=\"space-between\"\n          >\n            <div>\n              <Link\n                color={'primary'}\n                to=\"#\"\n                target={'_blank'}\n                className={classes.link}\n              >\n                Fundhill\n              </Link>\n              <Link\n                color={'primary'}\n                to=\"#\"\n                target={'_blank'}\n                className={classes.link}\n              >\n                About Us\n              </Link>\n              <Link\n                color={'primary'}\n                to=\"#\"\n                target={'_blank'}\n                className={classes.link}\n              >\n                Blog\n              </Link>\n            </div>\n            <div>\n              <Link\n                to=\"#\"\n                target={'_blank'}\n              >\n                <IconButton aria-label=\"facebook\">\n                  <Icon\n                    path={FacebookIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n              <Link\n                to=\"#\"\n                target={'_blank'}\n              >\n                <IconButton aria-label=\"twitter\">\n                  <Icon\n                    path={TwitterIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n              <Link\n                to=\"#\"\n                target={'_blank'}\n              >\n                <IconButton\n                  aria-label=\"github\"\n                  style={{ marginRight: -12 }}\n                >\n                  <Icon\n                    path={GithubIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n            </div>\n          </Box>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default Layout;\n","/home/smartdev/Desktop/Fundhill/src/pages/admin/branch/NewBranch.jsx",["518","519","520","521","522","523","524","525","526"],"import { Fragment, useState,useEffect } from \"react\";\nimport { Link,useNavigate } from \"react-router-dom\";\nimport { Formik, Form, useField,useFormikContext } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { css } from \"@emotion/react\";\nimport {DotLoader} from \"react-spinners\";\nimport { Box, Button, FormControl,Select, Typography,MenuItem } from '@material-ui/core'\nimport PageTitle from '../../../components/PageTitle/PageTitle'\nimport useStyles from './styles';\nimport {api} from \"../../../services\"\nimport {TextField} from \"../../../components/FormsUI\"\n\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nconst NewBranch = () => {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const [bhead, setBHead] = useState(\"\");\n    const navigate = useNavigate();\n    const [marketers,setMarketers] = useState([]);\n  \n\n  \n  \n    const initialFormState = () => ({\n      name: \"\",\n      branch_head_id: \"\",\n      branch_address: \"\",\n    });\n  \n    const validationSchema = yupObject().shape({\n      name: yupString()\n      .required(\"Branch name is required\"),\n      branch_address: yupString()\n      .required(\"Branch Address is required\"),\n      branch_head_id: yupNumber()\n    //   .required(\"This field is required\")\n    })\n  \n    useEffect(() => {\n        try {\n   \n            const allMarketer = async() => {\n                const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\",true);\n                console.log(res.data.results)\n                console.log(\"what is this runinnng\")\n                console.log(res.data)\n                if(api.isSuccessful(res)){\n                  setMarketers(res.data.results)\n                }\n          \n                setIsLoading(false);\n              }\n              allMarketer();\n        } catch (error) {\n            console.log(error);\n        }\n\n                         setIsLoading(true)\n\n\n    },[])\n\n\n  \n      const create_branch = async(values) => {\n        try {\n            setIsLoading(true);\n            console.log(values)\n  \n            const response = await api\n                  .service()\n                  .push(\"dashboard/branches/create-branch/\",values,true)\n  \n            if(api.isSuccessful(response)){\n              setTimeout( () => {\n                toast.success(\"Branch successfully created!\");\n                navigate(\"/admin/dashboard/branch/newbranch\",{replace: true})\n              },0);\n            }\n            setIsLoading(false);\n        } catch (error) {\n            console.log(error.message)\n        }\n      }\n\n      \n    return (\n        <Fragment>\n            <PageTitle title=\"FundHill\" />\n            <Box className={classes.formBox}>\n                <Typography variant='h5'>Add New Branch</Typography>\n                <Formik\n                    initialValues={initialFormState()}\n                    validationSchema={validationSchema}\n                    onSubmit={ async(values) => {\n                        await create_branch(values)\n                    }}\n                >\n                    <Form style={{ marginBottom: 30 }} >\n                    <div className={classes.inputDiv}>\n                        <div className={classes.label}>\n                            <Typography >Branch Name</Typography>\n                        </div>\n                        <TextField\n                            name=\"name\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            size='small'\n                            type='text'\n                            required\n                        />\n                    </div>\n                    <div className={classes.inputDiv}>\n                        <div className={classes.label}>\n                            <Typography >Branch Head</Typography>\n                        </div>\n                    <TextField\n                        select={true} \n                        className={classes.input}\n                        name=\"branch_head_id\"  \n                        variant='outlined'\n                        fullWidth={true}\n                    >\n                        {marketers.map((marketer) => {\n                            return (\n                            <MenuItem key={marketer.id} value={marketer.id}>\n                                {marketer.first_name}\n                            </MenuItem>\n                            )\n                        })}\n                        </TextField>\n                    </div>\n                    <div className={classes.inputDiv}>\n                        <div className={classes.label}>\n                            <Typography >Branch Address</Typography>\n                        </div>\n                        <TextField\n                            className={classes.input}\n                            variant=\"outlined\"\n                            size='small'\n                            name='branch_address'\n                            type='text'\n                            required\n                        />\n                    </div>\n                    {\n                            isLoading ? \n                              ( <div className=\"sweet-loading\">\n                                  <DotLoader color={color} loading={loading} css={override}  size={80} />\n                                </div>)\n                              : (\n                                <Button type=\"submit\" className={classes.btnSubmit}>Submit</Button>\n                              )\n                          }\n                    </Form>\n                </Formik>\n                \n            </Box>\n        </Fragment>\n    )\n}\n\nexport default NewBranch","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/Dashboard.js",["527","528","529"],"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Grid,\n  Button\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\n\n\nexport default function Dashboard(props) {\n  const navigate = useNavigate();\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Total Deposite\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography className={classes.amount} size=\"xl\" weight=\"bold\" >\n                    <span>&#8358;</span>0\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  +11%\n                </Typography>\n                <Button className={classes.btnSeeMore} onClick={() => {\n                  navigate('total_deposite')\n                }}>See more</Button>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Total Withdrawals\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"bold\" >\n                    <span>&#8358;</span>0\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  +11%\n                </Typography>\n                <Button className={classes.btnSeeMore} onClick={\n                  () => navigate('total_withdrawals')\n                }>See more</Button>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Total Loans\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"bold\" noWrap>\n                    <span>&#8358;</span>0\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  0%\n                </Typography>\n                <Button className={classes.btnSeeMore} onClick={() => {\n                  navigate('ongoin_loan')\n                }}>See more</Button>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"All Marketers\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"bold\" noWrap>\n                    7\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  +89%\n                </Typography>\n                <Button className={classes.btnSeeMore} onClick={() => { navigate('all_marketers') }}>See more</Button>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"ALL CUSTOMER\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"bold\" >\n                    5\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  +11%\n                </Typography>\n                <Button onClick={() => navigate(\"all_customers\")} className={classes.btnSeeMore}>See more</Button>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"TOTAL EXPENDITURE\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"bold\" >\n                    1001001000\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  +89%\n                </Typography>\n                {/* <Button className={classes.btnSeeMore}>See more</Button> */}\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"UNPAID LOAN\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"bold\" noWrap>\n                    0\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  +89%\n                </Typography>\n                <Button className={classes.btnSeeMore} disabled>Last year</Button>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"LOAN PRODUCT\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"bold\" noWrap>\n                    0\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  +89%\n                </Typography>\n                <Button className={classes.btnSeeMore} onClick={() => { navigate('new_product') }}>See more</Button>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"TOTAL FIXED SAVINGS\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"bold\" noWrap>\n                    3577\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  +89%\n                </Typography>\n                <Button className={classes.btnSeeMore} onClick={() => { navigate('fixed_savings_rep') }}>See more</Button>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"ALL BRANCHES\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"bold\" >\n                    2\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  +89%\n                </Typography>\n                <Button className={classes.btnSeeMore} onClick={() => { navigate('allbranchs') }}>See more</Button>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"LOAN INTEREST\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n                  <Typography size=\"xl\" weight=\"bold\" >\n                    0\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n\n              <Grid item xs={12} className={classes.rateGrid}>\n                <Typography className={classes.percent} color=\"text\" colorBrightness=\"secondary\">\n                  +89%\n                </Typography>\n                <Button className={classes.btnSeeMore} disabled>Last year</Button>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n\n        {/* <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={77}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={73}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Server Overview\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                60% / 37°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                54% / 31°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                57% / 21°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={30}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid> */}\n        {/* <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"secondary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid> */}\n        {/* {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))} */}\n        {/* <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid> */}\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/home/smartdev/Desktop/Fundhill/src/pages/admin/index.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Layout/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/branch/styles.js",["530"],"import { lightBlue } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  card: {\n    minHeight: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  visitsNumberContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexGrow: 1,\n    paddingBottom: theme.spacing(1),\n  },\n  progressSection: {\n    marginBottom: theme.spacing(1),\n  },\n  progressTitle: {\n    marginBottom: theme.spacing(2),\n  },\n  progress: {\n    marginBottom: theme.spacing(1),\n    backgroundColor: 'rgb(236, 236, 236)',\n  },\n  pieChartLegendWrapper: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"flex-end\",\n    marginRight: theme.spacing(1),\n  },\n  legendItemContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(1),\n  },\n  fullHeightBody: {\n    display: \"flex\",\n    flexGrow: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  tableWidget: {\n    overflowX: \"auto\",\n  },\n  progressBarPrimary: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  progressBarWarning: {\n    backgroundColor: theme.palette.warning.main,\n  },\n  performanceLegendWrapper: {\n    display: \"flex\",\n    flexGrow: 1,\n    alignItems: \"center\",\n    marginBottom: theme.spacing(1),\n  },\n  legendElement: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  legendElementText: {\n    marginLeft: theme.spacing(1),\n  },\n  serverOverviewElement: {\n    display: \"flex\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n  },\n  serverOverviewElementText: {\n    minWidth: 145,\n    paddingRight: theme.spacing(2),\n  },\n  serverOverviewElementChartWrapper: {\n    width: \"100%\",\n  },\n  mainChartBody: {\n    overflowX: \"auto\",\n  },\n  mainChartHeader: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.only(\"xs\")]: {\n      flexWrap: \"wrap\",\n    },\n  },\n  mainChartHeaderLabels: {\n    display: \"flex\",\n    alignItems: \"center\",\n    [theme.breakpoints.only(\"xs\")]: {\n      order: 3,\n      width: \"100%\",\n      justifyContent: \"center\",\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(2),\n    },\n  },\n  mainChartHeaderLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(3),\n  },\n  mainChartSelectRoot: {\n    borderColor: theme.palette.text.hint + \"80 !important\",\n  },\n  mainChartSelect: {\n    padding: 10,\n    paddingRight: 25,\n  },\n  mainChartLegentElement: {\n    fontSize: \"18px !important\",\n    marginLeft: theme.spacing(1),\n  },\n\n  // for addNewbranch\n  formBox: {\n    width: '100%',\n    background: 'white',\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px',\n    padding: 10,\n    borderRadius: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  inputDiv: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    marginTop: 20,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: 'column',\n      alignItems: 'start',\n      width: '90%',\n\n    }\n  },\n  input: {\n    flex: 1,\n    marginLeft: 10,\n    marginRight: 10,\n    width: '100%',\n  },\n  label: {\n    width: '15%',\n    [theme.breakpoints.down(\"sm\")]: {\n      width: '50%'\n    }\n  },\n  btnSubmit: {\n    width: '100%',\n    backgroundColor: 'blue',\n    color: '#fff',\n    marginTop: 10,\n    fontWeight: 600,\n\n    '&:hover': {\n      backgroundColor: 'lightBlue',\n      color: 'black'\n    }\n  },\n\n  // modal styles\n  formDiv: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 10\n  },\n\n  divTypo: {\n    width: '20%',\n    marginRight: 5\n  },\n\n  success: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n  },\n  warning: {\n    backgroundColor: theme.palette.warning.main,\n    color: '#fff',\n  },\n  secondary: {\n    backgroundColor: theme.palette.secondary.main,\n    color: '#fff',\n  }\n}));\n","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/mock.js",[],"/home/smartdev/Desktop/Fundhill/src/components/PageTitle/PageTitle.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Sidebar/components/Dot.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/components/Table/Table.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/components/BigStat/BigStat.js",[],["531","532"],"/home/smartdev/Desktop/Fundhill/src/components/Sidebar/Sidebar.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Header/Header.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/maps/Maps.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/tables/Tables.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/typography/Typography.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/notifications/Notifications.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/charts/Charts.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/icons/Icons.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/auth/login/Login.js",["533","534","535","536","537","538","539","540","541"],"// CONTEXT\nimport { Context } from \"../../../../context/Context\";\n\n\n// import classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n// context\nimport { useUserDispatch, loginUser } from \"../../../../context/UserContext\"\n\n\nimport assets from \"../../../../components/assets/\";\n\nimport { TextField, Button,Select } from \"../../../../components/FormsUI\"\n\nimport React, { useState, useContext } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Tabs,\n  Tab,\n  Fade,\n  FormControl,\n} from \"@material-ui/core\";\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { css } from \"@emotion/react\";\nimport { DotLoader } from \"react-spinners\"\nimport { api } from \"../../../../services\";\n;\n\n\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nconst registerInitialFormState = () => ({\n  first_name: \"\",\n  last_name: \"\",\n  \"org_name\": \"\",\n  \"org_type\": \"\",\n  email: \"\",\n  phone: \"\",\n  password: \"\",\n  user_role: \"ADMIN\"\n});\n\nconst registerFormValidation = Yup.object().shape({\n  first_name: Yup.string()\n    .required('Required'),\n  last_name: Yup.string()\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid email.')\n    .required('Required'),\n  phone: Yup.number()\n    .integer()\n    .typeError('Please enter a valid phone number')\n    .required('Required'),\n  org_name: Yup.string()\n    .required('Required'),\n  org_type: Yup.string()\n    .required('Required'),\n  password: Yup.string()\n    .required('Required'),\n});\n\nconst loginInitialFormState = () => ({\n  email: \"\",\n  password: \"\",\n});\n\n\n\nconst loginFormValidation = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email.')\n    .required('Required'),\n  password: Yup.string()\n    .required('Required'),\n});\n\n\nfunction Login(props) {\n  const classes = useStyles();\n  // global\n  const userDispatch = useUserDispatch();\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ADD8E6\");\n\n  const navigate = useNavigate();\n  // const history = useHistory();\n  const { dispatch, } = useContext(Context)\n\n  // local\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTabId, setActiveTabId] = useState(0);\n\n\n  const orgs = {\n    \"B\": \"MFB\",\n    \"I\": \"MFI\",\n    \"E\": \"ESUSU\",\n    \"C\": \"COOPERATIVE\"\n  }\n\n  const login = async (values) => {\n    setIsLoading(true);\n    console.log(values);\n    const response = await api\n      .service()\n      .push('/accounts/auth/signin/', values, true);\n\n    if (api.isSuccessful(response)) {\n      localStorage.setItem(\"token\", response?.data?.data?.token)\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: response?.data });\n      setTimeout(() => {\n        toast.success('Logged in successfully!');\n        // navigate(\"/admin/dashboard\",{replace: true})\n        navigate(\"/admin/dashboard/branch/allbranch\", { replace: true });\n      }, 0);\n    }\n\n    setIsLoading(false);\n  }\n\n  const register = async (values) => {\n    try {\n      setIsLoading(true);\n      console.log(values)\n      localStorage.setItem(\"email\", values.email);\n\n      const response = await api\n        .service()\n        .push(\"/accounts/manage/signup/\", values, true)\n\n      if (api.isSuccessful(response)) {\n        setTimeout(() => {\n          toast.success('Registration successfully!');\n          navigate(\"/auth/confirm_email\", { replace: true })\n        }, 0);\n      }\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n      setIsLoading(true);\n    }\n  }\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={assets.logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>FundHill</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n\n\n              <Formik\n                initialValues={loginInitialFormState()}\n                validationSchema={loginFormValidation}\n                onSubmit={async (values) => {\n                  await login(values)\n                }}\n              >\n                <Form>\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"email\"\n                    id=\"email\"\n                    InputProps={{\n                      classes: {\n                        // underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    margin=\"normal\"\n                    placeholder=\"Email Adress\"\n                    type=\"email\"\n                    fullWidth\n                  />\n\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"password\"\n                    id=\"password\"\n                    InputProps={{\n                      classes: {\n                        // underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    margin=\"normal\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    fullWidth\n                    autocomplete=\"off\"\n                  />\n                  <div className={classes.formButtons}>\n                    {isLoading ? (\n                      <CircularProgress size={26} className={classes.loginLoader} />\n                    ) : (\n                      <Button\n                        constiant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                      >\n                        Login\n                      </Button>\n                    )}\n                    <button\n                      className={classes.forgetButton}\n                    >\n                      Forget Password\n                    </button>\n                  </div>\n                </Form>\n              </Formik>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography constiant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <Formik\n                initialValues={registerInitialFormState()}\n                validationSchema={registerFormValidation}\n                onSubmit={async (values) => {\n                  await register(values)\n                }}\n              >\n                <Form>\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"first_name\"\n                    id=\"first_name\"\n                    InputProps={{\n                      classes: {\n                        // underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    margin=\"normal\"\n                    placeholder=\"First Name\"\n                    type=\"text\"\n                    fullWidth\n                  />\n\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"last_name\"\n                    id=\"last_name\"\n                    InputProps={{\n                      classes: {\n                        // underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    margin=\"normal\"\n                    placeholder=\"Last Name\"\n                    type=\"text\"\n                    fullWidth\n                  />\n\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"org_name\"\n                    id=\"org_name\"\n                    InputProps={{\n                      classes: {\n                        // underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    margin=\"normal\"\n                    placeholder=\"Full Co-operation/Organization Name\"\n                    type=\"text\"\n                    fullWidth\n                  />\n\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"email\"\n                    id=\"email\"\n                    InputProps={{\n                      classes: {\n                        // underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    margin=\"normal\"\n                    placeholder=\"Email Adress\"\n                    type=\"email\"\n                    fullWidth\n                  />\n\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"phone\"\n                    id=\"number\"\n                    InputProps={{\n                      classes: {\n                        // underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    margin=\"normal\"\n                    placeholder=\"Enter your phone number\"\n                    type=\"number\"\n                    fullWidth\n                  />\n\n                  <FormControl style={{ marginTop: 2, width: '100%' }} >\n                    {/* <InputLabel id=\"demo-select-small\">Company Type</InputLabel> */}\n                    <Select\n                      labelid=\"demo-select-small\"\n                      id=\"demo-select-small\"\n                      name=\"org_type\"\n                      label=\"Company Type\"\n                      options={orgs}\n                    />\n                  </FormControl>\n\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"address\"\n                    id=\"address\"\n                    InputProps={{\n                      classes: {\n                        // underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    margin=\"normal\"\n                    placeholder=\"Address location of company\"\n                    type=\"text\"\n                    fullWidth\n                  />\n\n                  <TextField\n                    variant=\"outlined\"\n                    name=\"password\"\n                    id=\"password\"\n                    InputProps={{\n                      classes: {\n                        // underline: classes.textFieldUnderline,\n                        input: classes.textField,\n                      },\n                    }}\n                    margin=\"normal\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    fullWidth\n                    autocomplete=\"off\"\n                  />\n\n                  <div className={classes.creatingButtonContainer}>\n                    {isLoading ? (\n                      <CircularProgress size={26} />\n                    ) : (\n                      <Button\n                        size=\"large\"\n                        constiant=\"contained\"\n                        color=\"primary\"\n                        fullWidth\n                        className={classes.createAccountButton}\n                      >\n                        Create your account\n                      </Button>\n                    )}\n                  </div>\n                </Form>\n              </Formik>\n\n            </React.Fragment>\n          )}\n        </div>\n\n      </div>\n    </Grid>\n  );\n}\n\nexport default Login;\n","/home/smartdev/Desktop/Fundhill/src/pages/admin/branch/AllBranches.jsx",["542","543","544","545","546","547","548","549","550","551","552","553","554","555"],"import { Fragment, useState, useEffect, useContext } from 'react'\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport { BounceLoader } from \"react-spinners\";\nimport MUIDataTable from \"mui-datatables\";\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\n//   import useStyles from \"./styles\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Context } from \"../../../context/Context\"\nimport ActionButton from './ActionButton';\n\n\n\nconst override = css`\ndisplay: block;\nmargin: 0 auto;\nborder-color: green;\nalign-items: center;\n`;\n\nconst states = {\n  sent: \"success\",\n  pending: \"warning\",\n  declined: \"secondary\",\n};\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  }\n}))\nfunction AllBranches() {\n  const classes = useStyles();\n\n  const [isLoading, setIsLoading] = useState(false);\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ADD8E6\");\n  const [data, setData] = useState([]);\n  const { user } = useContext(Context);\n  const [marketers, setMarketers] = useState([]);\n  const navigate = useNavigate();\n  const [currentId,setCurrentId] = useState(\"\");\n\n  //  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\n  //  keys.shift(); // delete \"id\" key\n\n\n  useEffect(() => {\n    setIsLoading(true)\n\n    const allBranch = async () => {\n      const res = await api.service().fetch(\"/dashboard/branches/\", true);\n      console.log(res.data)\n      if (api.isSuccessful(res)) {\n        setData(res.data.results)\n      }\n\n      setIsLoading(false);\n\n    }\n\n    allBranch();\n  }, [])\n\n\n\n  const allBranch = async () => {\n    setIsLoading(true)\n    const res = await api.service().fetch(\"/dashboard/branches/\", true);\n    console.log(res.data)\n    if (api.isSuccessful(res)) {\n      setData(res.data.results)\n    }\n\n    setIsLoading(false);\n\n  }\n\n\n  const deleteBranch = async (id) => {\n    const res = await api.service().remove(`/dashboard/branches/${id}/`, true);\n    console.log(res.data)\n    if (api.isSuccessful(res)) {\n      setTimeout(() => {\n        toast.success(\"Successfully deleted branch?!\");\n        allBranch();\n        // setIsLoading(true)\n\n        // const allBranches = async() => {\n        //   const res = await api.service().fetch(\"/dashboard/branches/\",true);\n        //   console.log(res.data)\n        //   if(api.isSuccessful(res)){\n        //     setData(res.data.results)\n        //   }\n\n        //   setIsLoading(false);\n\n        // }\n\n        // allBranches();\n\n\n      }, 0);\n    }\n\n  }\n\n  const edit_branch = async (values, id) => {\n    setLoading(true);\n    console.log(values)\n\n    const response = await api\n      .service()\n      .update(`/dashboard/branches/${id}/`, values, true)\n\n    if (api.isSuccessful(response)) {\n      setTimeout(() => {\n        toast.success(\"branch? successfully updated!!\");\n        // navigate(\"/admin/dashboard/branch/allbranch\",{replace: true})\n        allBranch();\n      }, 0);\n    }\n    setLoading(false);\n  }\n\n\n  useEffect(() => {\n    setIsLoading(true)\n\n    const allMarketer = async () => {\n      const res = await api.service().fetch(\"/accounts/manage/?is_staff=True&user_role=AGENT\", true);\n      // console.log(res.data)\n      if (api.isSuccessful(res)) {\n        //   console.log(res)\n        setMarketers(res.data.results)\n      }\n\n      setIsLoading(false);\n\n    }\n\n    allMarketer();\n  }, [])\n\n  return (\n    <Fragment>\n      <PageTitle title=\"Fundhill\" />\n      <Grid container spacing={4}>\n        {\n          isLoading ?\n            (\n\n\n              <div className=\"sweet-loading\">\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\n              </div>\n\n            )\n            :\n            (\n              <Grid item xs={12}>\n                <Widget title=\"All Branches\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                  <Table className=\"mb-0\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell >Branch ID </TableCell>\n                        <TableCell >Branch Name </TableCell>\n                        <TableCell >Branch Branch Location </TableCell>\n                        <TableCell>Head of Branch</TableCell>\n                        <TableCell>Action</TableCell>\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {data.map((branch) => (\n                        <TableRow key={branch?.id}>\n                          <TableCell className=\"pl-3 fw-normal\">{branch?.id}</TableCell>\n                          <TableCell>{branch?.name}</TableCell>\n                          <TableCell>{branch?.branch_address}</TableCell>\n                          <TableCell>{branch?.branch_head.first_name} {branch?.branch_head.last_name}</TableCell>\n                          <TableCell>\n                            <ActionButton setCurrentId={branch?.id}  />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Widget>\n              </Grid>\n            )\n        }\n\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default AllBranches\n\n","/home/smartdev/Desktop/Fundhill/src/pages/admin/auth/login/ConfirmEmail.js",["556"],"import { Button, Container, Typography } from '@material-ui/core';\nimport assets from '../../../../components/assets';\nimport React from 'react'\nimport useStyles from './styles';\nimport { Link } from 'react-router-dom';\n\nconst ConfirmEmail = () => {\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.containerr}>\n            <img alt='logo' src={assets.logo} width=\"130\" height=\"100\" />\n            <Typography className={classes.confirmEmail}>Confirm your Email</Typography>\n            <Typography variant='body2' gutterBottom className={classes.para}>Please check your inbox for a confirmation email. Click the link in the email to confirm your email address</Typography>\n            <Typography variant='body2' gutterBottom className={classes.para}>After you confirm click Continue</Typography>\n            <Button className={classes.reSend}>Re-send confirmation email</Button>\n\n            <div>\n\n                <Button variant='contained' style={{ background: '#198754', borderColor: '#198754', color: '#fff' }} >Continue</Button>\n                <Button variant='contained' style={{ background: '#0d6efd', borderColor: '#0d6efd', color: '#fff', marginLeft: 5 }}>Back to Sign in</Button>\n\n            </div>\n        </Container>\n    )\n}\n\nexport default ConfirmEmail","/home/smartdev/Desktop/Fundhill/src/components/Wrappers/Wrappers.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Widget/Widget.js",[],"/home/smartdev/Desktop/Fundhill/src/components/PageTitle/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/components/BigStat/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Sidebar/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Header/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/maps/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/typography/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/notifications/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/icons/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Sidebar/components/SidebarLink/SidebarLink.js",["557"],"import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link,useLocation } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\n\nexport default function SidebarLink({\n  links,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  var classes = useStyles();\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    links &&\n    (location.pathname === links || location.pathname.indexOf(links) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n  if (links && links.includes('http')) {\n    return (\n      <ListItem\n        button\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <Link className={classes.externalLink} to={links}>\n          <ListItemIcon\n            className={classnames(classes.linkIcon, {\n              [classes.linkIconActive]: isLinkActive,\n            })}\n          >\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classnames(classes.linkText, {\n                [classes.linkTextActive]: isLinkActive,\n                [classes.linkTextHidden]: !isSidebarOpened,\n              }),\n            }}\n            primary={label}\n          />\n        </Link>\n      </ListItem>\n    )\n  }\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={links && Link}\n        to={links}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={links && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={links}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding >\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={childrenLink && childrenLink.links}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","/home/smartdev/Desktop/Fundhill/src/pages/charts/components/ApexHeatmap.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/charts/components/ApexLineChart.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Notification/Notification.js",[],"/home/smartdev/Desktop/Fundhill/src/components/UserAvatar/UserAvatar.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/auth/login/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Widget/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/components/assets/index.js",["558"],"import logo from './logo.png';\n\nexport default {\n    logo,\n};","/home/smartdev/Desktop/Fundhill/src/pages/admin/branch/ActionButton.jsx",["559","560","561","562","563","564","565","566","567","568"],"import { Button, MenuItem } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { styled, alpha } from '@mui/material/styles';\nimport Menu from '@mui/material/Menu';\nimport React, { useState,useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AllModal from './Modal';\nimport { api } from '../../../services';\nimport {toast} from \"react-toastify\"\nconst StyledMenu = styled((props) => (\n    <Menu\n        elevation={0}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        {...props}\n    />\n))(({ theme }) => ({\n    '& .MuiPaper-root': {\n        borderRadius: 6,\n        marginTop: theme.spacing(1),\n        minWidth: 180,\n        color:\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n        boxShadow:\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n        '& .MuiMenu-list': {\n            padding: '4px 0',\n        },\n        '& .MuiMenuItem-root': {\n            '& .MuiSvgIcon-root': {\n                fontSize: 18,\n                color: theme.palette.text.secondary,\n                marginRight: theme.spacing(1.5),\n            },\n            '&:active': {\n                backgroundColor: alpha(\n                    theme.palette.primary.main,\n                    theme.palette.action.selectedOpacity,\n                ),\n            },\n        },\n    },\n}));\n\n\nexport default function ActionButton({setCurrentId}) {\n    const [anchorEl, setAnchorEl] = useState(null);\n    // let [color, setColor] = useState(\"#ADD8E6\");\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n\n  const [isLoading, setIsLoading] = useState(false);\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ADD8E6\");\n  const [data, setData] = useState([]);\n  const [marketers, setMarketers] = useState([]);\n  const navigate = useNavigate();\n\n  \n    //  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\n    //  keys.shift(); // delete \"id\" key\n  \n  \n    useEffect(() => {\n      setIsLoading(true)\n  \n      const allBranch = async () => {\n        const res = await api.service().fetch(\"/dashboard/branches/\", true);\n        // console.log(res.data)\n        if (api.isSuccessful(res)) {\n          setData(res.data.results)\n        }\n  \n        setIsLoading(false);\n  \n      }\n  \n      allBranch();\n    }, []);\n\n    // const marketer = marketers.map((item) => {return item})\n\n\n    return (\n        <div>\n            <Button\n                id=\"demo-customized-button\"\n                aria-controls={open ? 'demo-customized-menu' : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? 'true' : undefined}\n                variant=\"contained\"\n                disableElevation\n                onClick={handleClick}\n                endIcon={<KeyboardArrowDownIcon />}\n                style={{ textTransform: 'none' }}\n            >\n                Action\n            </Button>\n            <StyledMenu\n                id=\"demo-customized-menu\"\n                MenuListProps={{\n                    'aria-labelledby': 'demo-customized-button',\n                }}\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n            >\n                {/* <MenuItem onClick={handleOpen} history disableRipple>\n                    Action\n                </MenuItem> */}\n                <MenuItem disableRipple>\n                    <AllModal setCurrentId={setCurrentId} />\n                </MenuItem>\n                <MenuItem disableRipple>\n                    <AllModal setCurrentId={setCurrentId} updates />\n                </MenuItem>\n            </StyledMenu>\n        </div>\n    )\n\n}\n","/home/smartdev/Desktop/Fundhill/src/services/index.js",[],"/home/smartdev/Desktop/Fundhill/src/components/UserAvatar/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Notification/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/branch/Modal.jsx",["569","570","571","572","573","574","575"],"import { Backdrop, Box, Button, Divider, Fade, IconButton, Modal,  Typography, MenuItem } from '@mui/material'\nimport React, { useState, useEffect,useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form, useField,useFormikContext } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { css } from \"@emotion/react\";\nimport {DotLoader} from \"react-spinners\";\nimport { api } from '../../../services';\nimport {toast} from \"react-toastify\"\nimport {TextField} from \"../../../components/FormsUI\"\nimport CloseIcon from '@mui/icons-material/Close';\n// import { makeStyles } from \"@material-ui/styles\";\nimport useStyles from './styles';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\n\nconst AllModal = ({ updates,setCurrentId }) => {\n\n    const [lock, setUnlock] = useState(false);\n    const handleUnlock = () => setUnlock(true);\n    const handleLock = () => setUnlock(false);\n    const classes = useStyles();\n\n \n\n\n  const [isLoading, setIsLoading] = useState(false);\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ADD8E6\");\n  const [data, setData] = useState([]);\n  const [marketers, setMarketers] = useState([]);\n  const navigate = useNavigate();\n  const [item, setItem] = useState(\"\");\n\n  //  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\n  //  keys.shift(); // delete \"id\" key\n\n \n\n  useEffect(() => {\n    setIsLoading(true)\n\n    const allBranch = async () => {\n      const res = await api.service().fetch(\"/dashboard/branches/\", true);\n      console.log(res.data)\n      if (api.isSuccessful(res)) {\n        setData(res.data.results)\n      }\n\n      setIsLoading(false);\n\n    }\n\n    allBranch();\n  }, [])\n\n\n  const branches = (id) => {\n    const branch = data.filter((item) => item.id === id);\n    // console.log(branch);\n    setItem(branch[0]);\n    console.log(item);\n    // return branch\n  }\n\n  const handleProps = () => {\n    // console.log(setCurrentId);\n    branches(setCurrentId);\n    // setItem(branches(setCurrentId));\n    return setUnlock(true);\n  }\n\n\n  const allBranch = async () => {\n    setIsLoading(true)\n    const res = await api.service().fetch(\"/dashboard/branches/\", true);\n    // console.log(res.data)\n    if (api.isSuccessful(res)) {\n      setData(res.data.results)\n    }\n\n    setIsLoading(false);\n\n  }\n  const initialFormState = () => ({\n    name: `${item.name}`,\n    branch_head_id: `${item.branch_head.id}`,\n    branch_address: `${item.branch_address}`,\n  });\n\n\n\n\n  const deleteBranch = async (id) => {\n    const res = await api.service().remove(`/dashboard/branches/${id}/`, true);\n    console.log(res.data)\n    if (api.isSuccessful(res)) {\n      setTimeout(() => {\n        toast.success(\"Successfully deleted branch!\");\n        allBranch();\n\n\n      }, 0);\n    }\n\n  }\n\n  const edit_branch = async (values, id) => {\n    setLoading(true);\n    console.log(values)\n\n    const response = await api\n      .service()\n      .update(`/dashboard/branches/${id}/`, values, true)\n\n    if (api.isSuccessful(response)) {\n      setTimeout(() => {\n        toast.success(\"branch successfully updated!!\");\n        navigate(\"/admin/dashboard/branch/allbranch\",{replace: true})\n        // allBranch();\n      }, 0);\n    }\n    setLoading(false);\n  }\n\n\n  useEffect(() => {\n    setIsLoading(true)\n\n    const allMarketer = async () => {\n      const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\", true);\n      // console.log(res.data)\n      if (api.isSuccessful(res)) {\n        //   console.log(res)\n        setMarketers(res.data.results)\n      }\n\n      setIsLoading(false);\n\n    }\n\n    allMarketer();\n  }, []);\n\n    return (\n        <div>\n            <Button onClick={handleUnlock  && handleProps}>{updates ? 'Delete' : 'Update'}</Button>\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={lock}\n                onClose={handleLock}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={lock}>\n                    <Box sx={style}>\n                        <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n                            {updates ? 'Confirm Delete of Leasson Teacher' : 'branch ID'}\n                        </Typography>\n\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\n                            <IconButton onClick={handleLock}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </Box>\n                        <Divider style={{ marginTop: 40 }} />\n                        {updates ? (\n                            <>\n                                <Typography style={{ fontWeight: 500, marginTop: 10, marginBottom: 10, marginLeft: 10, textAlign: 'center' }}>Are you sure you want to delete this branch?</Typography>\n\n                                <Divider style={{ marginTop: 40 }} />\n                                <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\n                                    <Button onClick={handleLock} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\n                                    <Button onClick={() => deleteBranch(item.id)} variant=\"contained\" style={{ textTransform: 'none', background: 'red', marginLeft: 5 }}>Delete</Button>\n                                </Box>\n                            </>\n                        ) : (\n                            item && (\n                                \n                                <>\n                                <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Edit branch Profile</Typography>\n                                <Formik \n                                    initialValues={initialFormState()}\n                                    onSubmit={async(values) => {\n                                        await edit_branch(values,item.id)\n                                    }}\n                                >\n                                    <Form>\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Branch Name </Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"text\"  name=\"name\" size='small'  required />\n\n                                    </div>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Branch Address</Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"branch_address\"  size='small'  required />\n\n                                    </div>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Marketer</Typography></div>\n                                        <TextField\n                                        select={true} \n                                        className={classes.input}\n                                        name=\"branch_head_id\"  \n                                        variant='outlined'\n                                        fullWidth={true}\n                                        // type=\"number\"\n                                    >\n                                        {marketers.map((marketer) => {\n                                            return (\n                                                <MenuItem key={marketer.id} value={marketer.id}>\n                                                    {marketer.first_name}\n                                                </MenuItem>      \n   \n                                            )\n                                        })}\n                                        </TextField>\n                                    </div>                                                    {\n                                            isLoading ? \n                                            ( <div className=\"sweet-loading\">\n                                                <DotLoader color={color} loading={loading} css={override}  size={80} />\n                                                </div>)\n                                            : (\n                                                <Button type='submit' variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\n                                                        Update\n                                                    </Button>\n                                             )\n                                        }\n                                            \n                                    </Form>\n                                </Formik>\n                                {/* <form style={{ display: 'flex', flexDirection: 'column' }}>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Branch Address </Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"\" value={item.name} size='small'  required />\n\n                                    </div>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Branch Address</Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Branch Address' required />\n\n                                    </div>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Marketer</Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Marketer' required />\n\n                                    </div>\n\n\n                                    <Button variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\n                                        Update\n                                    </Button>\n                                </form> */}\n                            \n                                </>\n                                \n                            )\n                        )}\n                        {!updates &&\n                            (\n                                <>\n                                    <Divider style={{ marginTop: 40 }} />\n                                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\n                                        <Button onClick={handleLock} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\n                                    </Box>\n                                </>\n                            )\n                        }\n\n                    </Box>\n                </Fade>\n            </Modal>\n\n            {/* <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={openn}\n        onClose={handleLock}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n            timeout: 500,\n        }}\n    >\n        <Fade in={openn}>\n            <Box sx={style}>\n                <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n                    Confirm Delete of Leasson Teacher\n                </Typography>\n\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\n                    <IconButton onClick={handleLock}>\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                </Box>\n                <Divider style={{ marginTop: 40 }} />\n\n                <Typography style={{ fontWeight: 500, marginTop: 10, marginBottom: 10, marginLeft: 10, textAlign: 'center' }}>Are you sure you want to delete this branch?</Typography>\n\n                <Divider style={{ marginTop: 40 }} />\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\n                    <Button onClick={handleClosee} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\n                    <Button onClick={handleClosee} variant=\"contained\" style={{ textTransform: 'none', background: 'red', marginLeft: 5 }}>Delete</Button>\n                </Box>\n            </Box>\n        </Fade>\n    </Modal> */}\n        </div>\n    )\n}\n\nexport default AllModal","/home/smartdev/Desktop/Fundhill/src/services/serviceApi.js",[],"/home/smartdev/Desktop/Fundhill/src/services/localForage.js",[],"/home/smartdev/Desktop/Fundhill/src/components/Sidebar/components/SidebarLink/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/components/FormsUI/index.js",[],"/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Button/Button.jsx",[],"/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Select/Select.jsx",[],"/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Checkbox/Checkbox.jsx",[],"/home/smartdev/Desktop/Fundhill/src/components/FormsUI/DataTimePicker/DataTimePicker.jsx",[],"/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Textfield/TextField.jsx",[],"/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Table/Table.jsx",[],"/home/smartdev/Desktop/Fundhill/src/components/FormsUI/Table/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/AllCustomer.jsx",["576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603"],"/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/NewCustomer.jsx",["604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoaderk,DotLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n  Typography,\n  TextField,\n  Box,\n  Select,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\nimport {DateTimePicker} from \"../../../components/FormsUI\"\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\n\n\n\nfunction genPassword() {\n  let chars = \"0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let passwordLength = 12;\n  let password = \"\";\nfor (let i = 0; i <= passwordLength; i++) {\n let randomNumber = Math.floor(Math.random() * chars.length);\n password += chars.substring(randomNumber, randomNumber +1);\n}\n      return password;\n}\n\nfunction NewCustomer() {\n  \n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const [loading,setLoading] = useState(true)\n  const [color,setColor] = useState(\"#ADD8E6\");\n  const navigate = useNavigate();\n  const {user} = useContext(Context);\n  const [marketers,setMarketers] = useState([]);\n\n\n\n\n  const [avatar, setAvatar] = useState(null);\n  const [id_document, setIdDocument] = useState(null);\n  const [utility_bill, setUtilityBill] = useState(null);\n \n  const [bvn, setBvn] = useState(\"\");\n\n\n  useEffect(() => {\n    setIsLoading(true)\n\n    const allMarketer = async() => {\n      const res = await api.service().fetch(\"/accounts/manage/?is_staff=True&user_role=AGENT\",true);\n      // console.log(res.data)\n      if(api.isSuccessful(res)){\n        //   console.log(res)\n        setMarketers(res.data.results)\n      }\n\n      setIsLoading(false);\n\n    }\n\n    allMarketer();\n  },[])\n  \n\n\n  const handleAvatarOnChange = (file) => {\n    setAvatar(file[0])\n  }\n\n\n  const handleUtilityOnChange = (file) => {\n    setUtilityBill(file[0])\n  }\n\n\n  const handleDocOnChange = (file) => {\n    setIdDocument(file[0])\n  }\n\n    const handleSubmit = async(e) => {\n        e.preventDefault()\n        setIsLoading(true)\n        // setLoading(false)\n        let data = new FormData(e.target);\n        data.append(\"user_role\",\"CUSTOMER\");\n        data.append(\"password\",genPassword());\n        data.append(\"avatar\",avatar);\n        data.append(\"id_document\",id_document);\n        data.append(\"utility_bill\",utility_bill);\n        data.append(\"country\",\"Nigeria\");\n        console.log(data)\n\n\n\n        let values = Object.fromEntries(data.entries())\n        // let remains = {\n        //   user_role: \"CUSTOMER\",\n        //   password: genPassword()\n        // }\n        // let values = Object.assign(data,remains)\n        // values.append(\"user_role\",\"CUSTOMER\");\n        // values.append(\"password\",genPassword());\n\n        console.log(values);\n\n    const response = await api.service().push(`/accounts/manage/signup/?org_id=${user.data.organisation}`,data,true,true);\n\n    if(api.isSuccessful(response)){\n      setTimeout(() => {\n        \n        toast.success(\"Customer registration was successfully\");\n        navigate(\"/admin/dashboard/newcustomer\",{replace: true})\n        setIsLoading(false)\n\n      },0);\n    }\n\n        setIsLoading(false)\n        // setLoading(false)\n\n    }\n  return (\n    <Fragment>\n    <PageTitle title=\"Add New Branch\" />\n    <Box className={classes.formBox}>\n        <Typography variant='h5'>New Customer</Typography>\n        <form style={{ marginBottom: 30 }} onSubmit={handleSubmit} >\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Title</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='title'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >First Name</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='first_name'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Middle Name</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='middle_name'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Last Name</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='last_name'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Gender</Typography>\n                </div>\n                <Select\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='gender'\n                    type='text'\n                    required\n                >   \n                    <MenuItem>Select One</MenuItem>\n                    <MenuItem value={\"M\"} >Male</MenuItem>\n                    <MenuItem value={\"F\"}>Female</MenuItem>\n                </Select>\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Date of Birth</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='dob'\n                    type=\"date\"\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Profile Photo</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    type='file'\n                    required\n                    onChange={(e)  => handleAvatarOnChange(e.target.files)}\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >ID</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    type='file'\n                    required\n                    onChange={(e)  => handleDocOnChange(e.target.files)}                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Utility Bill</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    type='file'\n                    required\n                    onChange={(e)  => handleUtilityOnChange(e.target.files)}\n                     />\n            </div> \n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >BVN</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='bvn'\n                    type='text'\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Currency</Typography>\n                </div>\n                <Select\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='currency'\n                    type='text'\n                    required\n                >   \n                    <MenuItem>Select One</MenuItem>\n                    <MenuItem value={\"NGN\"} >NGN</MenuItem>\n                    <MenuItem value={\"USD\"}>USD</MenuItem>\n                </Select>\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Email</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='email'\n                    type='email'\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Residential Address</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='residential_address'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Business Address</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='business_address'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Phone Number</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='phone'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >State</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='state'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >City</Typography>\n                </div>\n                <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='middle_name'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                        <div className={classes.label}>\n                            <Typography >Marketer</Typography>\n                        </div>\n                    <TextField\n                        select={true} \n                        className={classes.input}\n                        name=\"agent_id\"  \n                        variant='outlined'\n                        fullWidth={true}\n                    >\n                        {marketers.map((marketer) => {\n                            return (\n                            <MenuItem key={marketer.id} value={marketer.id}>\n                                {marketer.first_name}\n                            </MenuItem>\n                            )\n                        })}\n                        </TextField>\n                </div>\n                {\n                            isLoading ? \n                              ( <div className=\"sweet-loading\">\n                                  <DotLoader color={color} loading={loading} css={override}  size={80} />\n                                </div>)\n                              : (\n                                <Button type=\"submit\" className={classes.btnSubmit}>Create Account</Button>\n                              )\n                          }      \n              </form>\n    </Box>\n</Fragment>\n  )\n}\n\nexport default NewCustomer","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/NewProduct.jsx",["624","625","626","627","628","629","630","631","632","633"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { useNavigate} from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\n\nfunction NewProduct() {\n\n        const classes = useStyles();\n        const [isLoading, setIsLoading] = useState(false);\n        let [loading, setLoading] = useState(true);\n        let [color, setColor] = useState(\"#ADD8E6\");\n        const {user} = useContext(Context)\n        const [data, setData] = useState([]);\n        const  navigate = useNavigate();\n\n\n\n\n        useEffect(  () => {\n                try {\n                    setIsLoading(true)\n\n                    const newProduct = async() => {\n                        const products = await api\n                        .service()\n                        .fetch(\"/dashboard/loan-product\",true);\n                        console.log(products.data.results)\n                        \n                    if((api.isSuccessful(products))){\n                        setData(products.data.results);\n                        setIsLoading(false)\n                    }else{\n                        setIsLoading(true)\n                    }\n                            }\n                            newProduct();\n                        } catch (error) {\n                            console.log(error)\n                        }\n\n                }, [])\n\n        const initialFormState = () => ({\n            name: \"\",\n            mgt_charges: null,\n            interest: null,\n        });\n\n        const validationSchema = yupObject().shape({\n            name: yupString()\n            .required(\"Product name is required\"),\n            mgt_charges: yupNumber()\n            .required(\"Managment Charges is required\"),\n            interest: yupNumber()\n            .required(\"interest rate is required\"),\n        });\n\n        const add_product = async(values) => {\n                try {\n                    setIsLoading(true);\n                    console.log(values)\n        \n                    const response = await api\n                        .service()\n                        .push(\"dashboard/loan-product/add/\",values,true)\n        \n                    if(api.isSuccessful(response)){\n                    setTimeout( () => {\n                        toast.success(\"Loan Product successfully created!\");\n                        // navigate(\"/dashboard/loan-product\",{replace: true});\n                    },0);\n                    }\n                    setIsLoading(false);\n                } catch (error) {\n                    console.log(error)\n                }\n    }\n  return (\n<Fragment>\n      <PageTitle title=\"Fundhill\" />\n      <Grid container spacing={4}>\n        {\n          isLoading ?\n            (\n\n\n              <div className=\"sweet-loading\">\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\n              </div>\n\n            )\n            :\n            (\n              <Grid item xs={12}>\n                <Widget title=\"All Expenses\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                  <Table className=\"mb-0\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell >Product ID </TableCell>\n                        <TableCell > Product </TableCell>\n                        <TableCell > Interest (%) </TableCell>\n                        <TableCell> MGT Charges (%) </TableCell>\n                        <TableCell>Action</TableCell>\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {data.map((product) => (\n                        <TableRow key={product?.id}>\n                          <TableCell className=\"pl-3 fw-normal\">{product?.id}</TableCell>\n                          <TableCell >{product?.name}</TableCell>\n                          <TableCell>{product?.interest}</TableCell>\n                          <TableCell>{product?.mgt_charges}</TableCell>\n                          <TableCell>\n                            <ActionButton />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Widget>\n              </Grid>\n            )\n        }\n\n      </Grid>\n    </Fragment>\n      )\n}\n\nexport default NewProduct","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/AddBorrower.jsx",["634","635","636","637","638","639","640","641","642","643","644","645"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { useNavigate} from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\n\nfunction AddBorrower() {\n    const classes = useStyles();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [loader, setLoader] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context)\n    const [marketers,setMarketers] = useState([]);\n    const [branches,setBranches] = useState([]);\n    const [customers,setCustomers] = useState([]);\n    const [products,setProducts] = useState([]);\n    const navigate = useNavigate();\n\n\nuseEffect(() => {\n    setIsLoading(true)\n\n    const allCustomer = async() => {\n        const res = await api.service().fetch(\"/accounts/manage/?user_role=CUSTOMER\",true);\n        console.log(res.data)\n        if(api.isSuccessful(res)){\n          setCustomers(res.data.results)\n        }\n  \n      // setIsLoading(false);\n  \n      }\n  \n      allCustomer();\n\n    const allMarketer = async() => {\n        const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\",true);\n        console.log(res.data)\n        if(api.isSuccessful(res)){\n          //   console.log(res)\n          setMarketers(res.data.results)\n        }\n  \n        // setIsLoading(false);\n  \n      }\n\n      allMarketer();\n\n    const allBranches = async() => {\n        const res = await api.service().fetch(\"/dashboard/branches/\",true);\n        console.log(res.data)\n        if(api.isSuccessful(res)){\n          setBranches(res.data.results)\n        }\n  \n        setIsLoading(false);\n  \n      }\n\n      allBranches();\n\n\n      const newProduct = async() => {\n            const res = await api\n            .service()\n            .fetch(\"/dashboard/loan-product\",true);\n            console.log(res.data.results)\n\n            if((api.isSuccessful(res))){\n            setProducts(res.data.results);\n            setIsLoading(false)\n            }\n                }\n\n        newProduct();\n\n      setIsLoading(false);\n\n  },[]);\n\n\n            const initialFormState = (id) => ({\n                borrower: id,\n                loan_product: null,\n                amount: null,\n                branch: null,\n                category: \"\",\n                payment_frequency: \"\",\n                loan_period_in_months: null,\n                payment_schedule: \"\",\n                loan_officer: null,\n                organisation: user.data.organisation\n            });\n\n            const validationSchema = yupObject().shape({\n                borrower: yupNumber()\n                .required(\"Please select a valid customer\"),\n                loan_product: yupNumber()\n                .required(\"Select a loan product\"),\n                amount: yupNumber()\n                .required(\"Enter an amount to be disburse\"),\n                category: yupString()\n                .required(\"Please select a category.\"),\n                payment_frequency: yupString()\n                .required(\"Select a payment frequency\"),\n                payment_schedule: yupString()\n                .required(\"Select a payment schedule\"),\n                // branch: yupNumber()\n                // .required(\"Select a branch name\"),\n                loan_period_in_months: yupNumber()\n                .required(\"Enter loan period\"),\n                loan_officer: yupNumber()\n                .required(\"Select a loan officer\"),\n\n            });\n\n            const add_borrower = async(values) => {\n                setLoader(true);\n                console.log(values)\n\n                const response = await api\n                    .service()\n                    .push(\"/dashboard/loan/add/\",values,true)\n\n                if(api.isSuccessful(response)){\n                setTimeout( () => {\n                    toast.success(\"Successfully assign loan!\");\n                    navigate(\"/admin/dashboard/add_borrower\",{replace: true});\n                },0);\n                }\n                setLoader(false);\n            }\n\n  return (\n<Fragment>\n      <PageTitle title=\"Fundhill\" />\n      <Grid container spacing={4}>\n        {\n          isLoading ?\n            (\n\n\n              <div className=\"sweet-loading\">\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\n              </div>\n\n            )\n            :\n            (\n              <Grid item xs={12}>\n                <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                  <Table className=\"mb-0\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell >Full Name </TableCell>\n                        <TableCell >Account Number </TableCell>\n                        <TableCell >Telephone </TableCell>\n                        <TableCell>Email</TableCell>\n                        <TableCell>Action</TableCell>\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {customers.map((customer) => (\n                        <TableRow key={customer?.id}>\n                          <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\n                          <TableCell>{customer?.first_name} {customer?.last_name} </TableCell>\n                          <TableCell>{customer?.account_number}</TableCell>\n                          <TableCell>{customer?.phone}</TableCell>\n                          <TableCell>{customer?.email}</TableCell>\n                          <TableCell>{customer?.agent.first_name} </TableCell>\n                          <TableCell>\n                            <ActionButton />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Widget>\n              </Grid>\n            )\n        }\n\n      </Grid>\n    </Fragment>\n          )\n}\n\nexport default AddBorrower","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/DisbursedLoan.jsx",["646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { Link } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nfunction DisbursedLoan() {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    const [loader, setLoader] = useState(false);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context)\n    const [data,setData] = useState([]);\n\n    useEffect(() => {\n        try {\n            setIsLoading(true)\n\n            const allCustomer = async() => {\n              const res = await api.service().fetch(\"/dashboard/loan/?status=PENDING\",true);\n              console.log(res.data)\n              if(api.isSuccessful(res)){\n                setData(res.data.results)\n              }\n            setIsLoading(false);\n        \n            }\n    \n            allCustomer();\n        } catch (error) {\n            console.log(error)\n        }\n      },[])\n\n      const approve_loan = async(values) => {\n            try {\n                setLoader(true);\n                console.log(values)\n        \n                const response = await api\n                    .service()\n                    .push(\"/dashboard/loan/action/\",values,true)\n        \n                if(api.isSuccessful(response)){\n                setTimeout( () => {\n                    toast.success(\"Successfully approved loan!\");\n                    // navigate(\"/admin/dashboard/add_borrower\",{replace: true});\n                },0);\n                }\n                setLoader(false);\n            } catch (error) {\n                console.log(error)\n            }\n    }\n\n  return (\n    <div>DisbursedLoan</div>\n  )\n}\n\nexport default DisbursedLoan","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/PendingLoan.jsx",["675","676","677","678","679","680","681","682","683","684","685","686"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { Link } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction PendingLoan() {\n\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    const [loader, setLoader] = useState(false);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context)\n    const [data,setData] = useState([]);\n\n    useEffect(() => {\n        try {\n            setIsLoading(true)\n\n            const allCustomer = async() => {\n              const res = await api.service().fetch(\"/dashboard/loan/?status=PENDING\",true);\n              console.log(res.data)\n              if(api.isSuccessful(res)){\n                setData(res.data.results)\n              }\n            setIsLoading(false);\n        \n            }\n    \n            allCustomer();\n        } catch (error) {\n            console.log(error)\n        }\n      },[])\n\n      const approve_loan = async(values) => {\n            try {\n                setLoader(true);\n                console.log(values)\n        \n                const response = await api\n                    .service()\n                    .push(\"/dashboard/loan/action/\",values,true)\n        \n                if(api.isSuccessful(response)){\n                setTimeout( () => {\n                    toast.success(\"Successfully approved loan!\");\n                    // navigate(\"/admin/dashboard/add_borrower\",{replace: true});\n                },0);\n                }\n                setLoader(false);\n            } catch (error) {\n                console.log(error)\n            }\n    }\n\n\n  return (\n    <Fragment>\n      <PageTitle title=\"Fundhill\" />\n      <Grid container spacing={4}>\n        {\n          isLoading ?\n            (\n\n\n              <div className=\"sweet-loading\">\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\n              </div>\n\n            )\n            :\n            (\n              <Grid item xs={12}>\n                <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                  <Table className=\"mb-0\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell > Names </TableCell>\n                        <TableCell > Amount + Interest </TableCell>\n                        <TableCell > Account Number </TableCell>\n                        <TableCell> Loan Product </TableCell>\n                        <TableCell> Payback Date </TableCell>\n                        <TableCell>Status</TableCell>\n                        <TableCell>Action</TableCell>\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {data.map((customer) => (\n                        <TableRow key={customer?.id}>\n                          <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\n                          <TableCell>{customer?.borrower?.first_name} {customer?.borrower?.last_name} </TableCell>\n                          <TableCell>{customer?.amount_to_repay}</TableCell>\n                          <TableCell>{customer?.account_number}</TableCell>\n                          <TableCell>{customer?.loan_product.name}</TableCell>\n                          <TableCell>{customer?.final_due_date}</TableCell>\n                          <TableCell>{customer?.date_created} </TableCell>\n                          <TableCell>{customer?.status}</TableCell>\n                          <TableCell>\n                            <ActionButton />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Widget>\n              </Grid>\n            )\n        }\n\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default PendingLoan","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/PendingCustomer.jsx",["687","688","689","690","691","692","693","694","695","696","697","698","699","700"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { Link } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction PendingCustomer() {\n  const classes = useStyles();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [Loading, setLoading] = useState(false)\n    let [loading, setloading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context)\n    const [data,setData] = useState([]);\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        const allCustomer = async() => {\n          const res = await api.service().fetch(\"/accounts/manage/?user_role=CUSTOMER&status=PENDING\",true);\n          console.log(res.data)\n          if(api.isSuccessful(res)){\n            setData(res.data.results)\n          }\n        setIsLoading(false);\n    \n        }\n\n        allCustomer();\n      },[])\n\n      const savingsFormState = (id) => ({\n        user: id,\n        frequency: null,\n        amount_per_cycle: null,\n        duration_in_months: null,\n        amount: null,\n        plan_type: null\n      });\n    \n    \n      const savingsValidationSchema = yupObject().shape({\n        user: yupNumber()\n        .required(\"User is required\"),\n        frequency: yupString()\n        .required(\"frequency is required\"),\n        amount_per_cycle: yupNumber()\n        .required(\"Amount cycle is required\"),\n        duration_in_months: yupNumber()\n        .required(\"Duration is required\"),\n        amount: yupNumber()\n        .required(\"Amount is required\"),\n        plan_type: yupString()\n        .required(\"Select a savings plan.\"),\n      });\n\n\n      const savings = async(values) => {\n        setLoading(true);\n        console.log(values)\n\n        const response = await api\n            .service()\n            .push(\"/dashboard/savings-plan/add/\",values,true)\n\n        if(api.isSuccessful(response)){\n        setTimeout( () => {\n            toast.success(\"Savings Plan successfully added!\");\n            // navigate(\"/admin/allbranch\",{replace: true})\n        },0);\n        }\n        setLoading(false);\n    }\n\n    \n    const activateCustomer = async(id) => {\n        const res = await api.service().fetch(`/accounts/auth/${id}/activate/`,true);\n        console.log(res.data)\n        if(api.isSuccessful(res)){\n            setTimeout( () => {\n                toast.success(\"Successfully activated customer!\");\n            },0);\n            }\n  \n      }\n    const deactivateCustomer = async(id) => {\n        const res = await api.service().fetch(`/accounts/auth/${id}/deactivate/`,true);\n        console.log(res.data)\n        if(api.isSuccessful(res)){\n            setTimeout( () => {\n                toast.success(\"Successfully deactivated customer!\");\n            },0);\n            }\n  \n      }\n\n      const deleteCustomer = async(id) => {\n        const res = await api.service().remove(`/accounts/auth/${id}/`,true);\n        console.log(res.data)\n        if(api.isSuccessful(res)){\n            setTimeout( () => {\n                toast.success(\"Successfully deleted customer!\");\n            },0);\n            }\n  \n      }\n  return (\n    <Fragment>\n    <PageTitle title=\"Fundhill\" />\n    <Grid container spacing={4}>\n      {\n        isLoading ?\n          (\n\n\n            <div className=\"sweet-loading\">\n              <BounceLoader color={color} loading={loading} css={override} size={150} />\n            </div>\n\n          )\n          :\n          (\n            <Grid item xs={12}>\n              <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                <Table className=\"mb-0\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell >Full Name </TableCell>\n                      <TableCell >Account Number </TableCell>\n                      <TableCell >Telephone </TableCell>\n                      <TableCell>Email</TableCell>\n                      <TableCell>Marketer</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Action</TableCell>\n\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {data.map((customer) => (\n                      <TableRow key={customer?.id}>\n                        <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\n                        <TableCell>{customer?.first_name} {customer?.last_name} </TableCell>\n                        <TableCell>{customer?.account_number}</TableCell>\n                        <TableCell>{customer?.phone}</TableCell>\n                        <TableCell>{customer?.email}</TableCell>\n                        <TableCell>{customer?.agent.first_name} </TableCell>\n                        <TableCell>\n                          <ActionButton />\n                        </TableCell>\n                      </TableRow>\n                    ))\n                    }\n                  </TableBody>\n                </Table>\n              </Widget>\n            </Grid>\n          )\n      }\n\n    </Grid>\n  </Fragment>\n  )\n}\n\nexport default PendingCustomer","/home/smartdev/Desktop/Fundhill/src/pages/admin/expenses/AllExpenses.jsx",["701","702","703","704","705","706","707","708","709","710","711","712","713"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { Link } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\n\n\nfunction AllExpenses() {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context);\n    const [expenses,setExpenses] = useState([]);\n    const [currentId,setCurrentId] = useState(\"\");\n\n\n\n    useEffect(() => {\n        try {\n            setIsLoading(true)\n\n            const allExpenses = async() => {\n              const res = await api.service().fetch(\"/dashboard/expense/\",true);\n              console.log(res.data)\n              if(api.isSuccessful(res)){\n                  console.log(res.data.results)\n                setExpenses(res.data.results)\n              }\n        \n              setIsLoading(false);\n        \n            }\n    \n            allExpenses();\n        } catch (error) {\n            console.log(error)\n            setIsLoading(false)\n        }\n      },[]);\n\n      \n  return (\n<Fragment>\n      <PageTitle title=\"Fundhill\" />\n      <Grid container spacing={4}>\n        {\n          isLoading ?\n            (\n\n\n              <div className=\"sweet-loading\">\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\n              </div>\n\n            )\n            :\n            (\n              <Grid item xs={12}>\n                <Widget title=\"All Expenses\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                  <Table className=\"mb-0\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell >Expense ID </TableCell>\n                        <TableCell >Marketer Expense </TableCell>\n                        <TableCell >Expense Amount </TableCell>\n                        <TableCell>Description</TableCell>\n                        <TableCell>Action</TableCell>\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {expenses.map((expense) => (\n                        <TableRow key={expense?.id}>\n                          <TableCell className=\"pl-3 fw-normal\">{expense?.id}</TableCell>\n                          <TableCell>{expense?.agent?.first_name} {expense?.agent?.last_name} </TableCell>\n                          <TableCell>{expense?.amount}</TableCell>\n                          <TableCell>{expense?.description}</TableCell>\n                          <TableCell>\n                          <ActionButton setCurrentId={expense?.id}  />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Widget>\n              </Grid>\n            )\n        }\n\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default AllExpenses","/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/AllMarketer.jsx",["714","715","716","717","718","719","720","721","722","723","724","725","726","727"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { Link } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nfunction AllMarketer() {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context);\n    const [marketers,setMarketers] = useState([]);\n    const [currentId,setCurrentId] = useState(\"\");\n\n\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        const allMarketer = async() => {\n          const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\",true);\n          console.log(res.data)\n          if(api.isSuccessful(res)){\n            //   console.log(res)\n            setMarketers(res.data.results)\n          }\n    \n          setIsLoading(false);\n    \n        }\n\n        allMarketer();\n      },[])\n\n\n      const edit_marketer = async(values,id) => {\n        setLoading(true);\n        console.log(values)\n\n        const response = await api\n            .service()\n            .update(`/accounts/auth/${id}/`,values,true)\n\n        if(api.isSuccessful(response)){\n        setTimeout( () => {\n            toast.success(\"Marketer profile successfully updated!!\");\n            // navigate(\"/admin/allbranch\",{replace: true})\n        },0);\n        }\n        setLoading(false);\n    }\n    const fund_marketer = async(values,id) => {\n            try {\n                setLoading(true);\n                console.log(values)\n\n                const response = await api\n                    .service()\n                    .push(`/wallets/marketers/${id}/fund-wallet/`,values,true)\n                if(api.isSuccessful(response)){\n                setTimeout( () => {\n                    toast.success(\"Transaction successful\");\n                    // navigate(\"/admin/allbranch\",{replace: true})\n                },0);\n                }\n                setLoading(false);\n            } catch (error) {\n                console.log(error)\n            }\n                }\n\n\n\n      const deleteMarketer = async(id) => {\n        const res = await api.service().remove(`/accounts/auth/${id}/`,true);\n        console.log(res.data)\n        if(api.isSuccessful(res)){\n            setTimeout( () => {\n                toast.success(\"Successfully deleted marketer!\");\n            },0);\n            }\n  \n      }\n  return (\n    <Fragment>\n      <PageTitle title=\"Fundhill\" />\n      <Grid container spacing={4}>\n        {\n          isLoading ?\n            (\n\n\n              <div className=\"sweet-loading\">\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\n              </div>\n\n            )\n            :\n            (\n              <Grid item xs={12}>\n                <Widget title=\"All Marketers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                  <Table className=\"mb-0\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell >Marketer ID </TableCell>\n                        <TableCell >Full Name </TableCell>\n                        <TableCell >Telephone </TableCell>\n                        <TableCell>Email</TableCell>\n                        <TableCell>Role</TableCell>\n                        <TableCell>Action</TableCell>\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {marketers.map((marketer) => (\n                        <TableRow key={marketer?.id}>\n                          <TableCell className=\"pl-3 fw-normal\">{marketer?.id}</TableCell>\n                          <TableCell>{marketer?.first_name} {marketer?.last_name} </TableCell>\n                          <TableCell>{marketer?.phone}</TableCell>\n                          <TableCell>{marketer?.email}</TableCell>\n                          <TableCell>{marketer?.user_role} </TableCell>\n                          <TableCell>\n                          <ActionButton setCurrentId={marketer?.id}  />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Widget>\n              </Grid>\n            )\n        }\n\n      </Grid>\n    </Fragment>\n      )\n}\n\nexport default AllMarketer","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/DeletedCustomer.jsx",["728","729","730","731","732","733","734","735","736","737","738","739","740"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { Link } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nfunction DeletedCustomer() {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    const [Loading, setLoading] = useState(false)\n    let [loading, setloading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context)\n    const [data,setData] = useState([]);\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        const allCustomer = async() => {\n          const res = await api.service().fetch(\"/accounts/manage/?user_role=CUSTOMER&status=PENDING\",true);\n          console.log(res.data)\n          if(api.isSuccessful(res)){\n            setData(res.data.results)\n          }\n        setIsLoading(false);\n    \n        }\n\n        allCustomer();\n      },[])\n\n      const savingsFormState = (id) => ({\n        user: id,\n        frequency: null,\n        amount_per_cycle: null,\n        duration_in_months: null,\n        amount: null,\n        plan_type: null\n      });\n    \n    \n      const savingsValidationSchema = yupObject().shape({\n        user: yupNumber()\n        .required(\"User is required\"),\n        frequency: yupString()\n        .required(\"frequency is required\"),\n        amount_per_cycle: yupNumber()\n        .required(\"Amount cycle is required\"),\n        duration_in_months: yupNumber()\n        .required(\"Duration is required\"),\n        amount: yupNumber()\n        .required(\"Amount is required\"),\n        plan_type: yupString()\n        .required(\"Select a savings plan.\"),\n      });\n\n\n      const savings = async(values) => {\n        setLoading(true);\n        console.log(values)\n\n        const response = await api\n            .service()\n            .push(\"/dashboard/savings-plan/add/\",values,true)\n\n        if(api.isSuccessful(response)){\n        setTimeout( () => {\n            toast.success(\"Savings Plan successfully added!\");\n            // navigate(\"/admin/allbranch\",{replace: true})\n        },0);\n        }\n        setLoading(false);\n    }\n\n    \n    const activateCustomer = async(id) => {\n        const res = await api.service().fetch(`https://fundhill-api.herokuapp.com/accounts/auth/${id}/activate/`,true);\n        console.log(res.data)\n        if(api.isSuccessful(res)){\n            setTimeout( () => {\n                toast.success(\"Successfully activated customer!\");\n            },0);\n            }\n  \n      }\n    const deactivateCustomer = async(id) => {\n        const res = await api.service().fetch(`https://fundhill-api.herokuapp.com/accounts/auth/${id}/deactivate/`,true);\n        console.log(res.data)\n        if(api.isSuccessful(res)){\n            setTimeout( () => {\n                toast.success(\"Successfully deactivated customer!\");\n            },0);\n            }\n  \n      }\n      \n  return (\n<Fragment>\n    <PageTitle title=\"Fundhill\" />\n    <Grid container spacing={4}>\n      {\n        isLoading ?\n          (\n\n\n            <div className=\"sweet-loading\">\n              <BounceLoader color={color} loading={loading} css={override} size={150} />\n            </div>\n\n          )\n          :\n          (\n            <Grid item xs={12}>\n              <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                <Table className=\"mb-0\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell >Full Name </TableCell>\n                      <TableCell >Account Number </TableCell>\n                      <TableCell >Telephone </TableCell>\n                      <TableCell>Email</TableCell>\n                      <TableCell>Marketer</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Action</TableCell>\n\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {data.map((customer) => (\n                      <TableRow key={customer?.id}>\n                        <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\n                        <TableCell>{customer?.first_name} {customer?.last_name} </TableCell>\n                        <TableCell>{customer?.account_number}</TableCell>\n                        <TableCell>{customer?.phone}</TableCell>\n                        <TableCell>{customer?.email}</TableCell>\n                        <TableCell>{customer?.agent.first_name} </TableCell>\n                        <TableCell>\n                          <ActionButton />\n                        </TableCell>\n                      </TableRow>\n                    ))\n                    }\n                  </TableBody>\n                </Table>\n              </Widget>\n            </Grid>\n          )\n      }\n\n    </Grid>\n  </Fragment>\n    )\n}\n\nexport default DeletedCustomer","/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/MarketerAccount.jsx",["741","742","743","744","745","746","747","748","749","750","751","752"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { Link } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nfunction MarketerAccount() {\n  const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context);\n    const [marketers,setMarketers] = useState([]);\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        const allMarketerWallet = async() => {\n          const res = await api.service().fetch(\"/wallet/marketer/\",true);\n          console.log(res.data)\n          if(api.isSuccessful(res)){\n              console.log(res)\n            setMarketers(res.data.results)\n          }\n    \n          setIsLoading(false);\n    \n        }\n\n        allMarketerWallet();\n      },[])\n\n      const edit_marketer = async(values,id) => {\n        setLoading(true);\n        console.log(values)\n\n        const response = await api\n            .service()\n            .update(`/accounts/auth/${id}/`,values,true)\n\n        if(api.isSuccessful(response)){\n        setTimeout( () => {\n            toast.success(\"Marketer profile successfully updated!!\");\n            // navigate(\"/admin/allbranch\",{replace: true})\n        },0);\n        }\n        setLoading(false);\n    }\n    const fund_marketer = async(values,id) => {\n        setLoading(true);\n        console.log(values)\n\n        const response = await api\n            .service()\n            .push(`/wallet/marketer/${id}/fund-wallet/`,values,true)\n\n        if(api.isSuccessful(response)){\n        setTimeout( () => {\n            toast.success(\"Transaction successful\");\n            // navigate(\"/admin/allbranch\",{replace: true})\n        },0);\n        }\n        setLoading(false);\n    }\n\n\n\n      const deleteMarketer = async(id) => {\n        const res = await api.service().remove(`/accounts/auth/${id}/`,true);\n        console.log(res.data)\n        if(api.isSuccessful(res)){\n            setTimeout( () => {\n                toast.success(\"Successfully deleted marketer!\");\n            },0);\n            }\n  \n      }\n\n  return (\n<Fragment>\n      <PageTitle title=\"Fundhill\" />\n      <Grid container spacing={4}>\n        {\n          isLoading ?\n            (\n\n\n              <div className=\"sweet-loading\">\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\n              </div>\n\n            )\n            :\n            (\n              <Grid item xs={12}>\n                <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                  <Table className=\"mb-0\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell >Marketer ID </TableCell>\n                        <TableCell >Full Name </TableCell>\n                        <TableCell >Telephone </TableCell>\n                        <TableCell>Email</TableCell>\n                        <TableCell>Balance</TableCell>\n                        <TableCell>Role</TableCell>\n                        <TableCell>Action</TableCell>\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {marketers.map((marketer) => (\n                        <TableRow key={marketer?.id}>\n                          <TableCell className=\"pl-3 fw-normal\">{marketer?.id}</TableCell>\n                          <TableCell>{marketer?.first_name} {marketer?.last_name} </TableCell>\n                          <TableCell>{marketer?.phone}</TableCell>\n                          <TableCell>{marketer?.email}</TableCell>\n                          <TableCell> {marketer?.balance} </TableCell>\n                          <TableCell>{marketer?.user_role} </TableCell>\n                          <TableCell>\n                            <ActionButton />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Widget>\n              </Grid>\n            )\n        }\n\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default MarketerAccount","/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/OngoingLoan.jsx",["753","754","755","756","757","758","759","760","761","762","763","764"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { Link } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\n\nfunction OngoingLoan() {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    const [loader, setLoader] = useState(false);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context)\n    const [data,setData] = useState([]);\n\n    useEffect(() => {\n        try {\n            setIsLoading(true)\n\n            const allCustomer = async() => {\n              const res = await api.service().fetch(\"/dashboard/loan/?status=PENDING\",true);\n              console.log(res.data)\n              if(api.isSuccessful(res)){\n                setData(res.data.results)\n              }\n            setIsLoading(false);\n        \n            }\n    \n            allCustomer();\n        } catch (error) {\n            console.log(error)\n        }\n      },[])\n\n      const approve_loan = async(values) => {\n            try {\n                setLoader(true);\n                console.log(values)\n        \n                const response = await api\n                    .service()\n                    .push(\"/dashboard/loan/action/\",values,true)\n        \n                if(api.isSuccessful(response)){\n                setTimeout( () => {\n                    toast.success(\"Successfully approved loan!\");\n                    // navigate(\"/admin/dashboard/add_borrower\",{replace: true});\n                },0);\n                }\n                setLoader(false);\n            } catch (error) {\n                console.log(error)\n            }\n    }\n\n\n  return (\n    <Fragment>\n      <PageTitle title=\"Fundhill\" />\n      <Grid container spacing={4}>\n        {\n          isLoading ?\n            (\n\n\n              <div className=\"sweet-loading\">\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\n              </div>\n\n            )\n            :\n            (\n              <Grid item xs={12}>\n                <Widget title=\"All Customers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                  <Table className=\"mb-0\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell > Names </TableCell>\n                        <TableCell > Amount + Interest </TableCell>\n                        <TableCell > Account Number </TableCell>\n                        <TableCell> Loan Product </TableCell>\n                        <TableCell> Payback Date </TableCell>\n                        <TableCell>Status</TableCell>\n                        <TableCell>Action</TableCell>\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {data.map((customer) => (\n                        <TableRow key={customer?.id}>\n                          <TableCell className=\"pl-3 fw-normal\">{customer?.id}</TableCell>\n                          <TableCell>{customer?.borrower?.first_name} {customer?.borrower?.last_name} </TableCell>\n                          <TableCell>{customer?.amount_to_repay}</TableCell>\n                          <TableCell>{customer?.account_number}</TableCell>\n                          <TableCell>{customer?.loan_product.name}</TableCell>\n                          <TableCell>{customer?.final_due_date}</TableCell>\n                          <TableCell>{customer?.date_created} </TableCell>\n                          <TableCell>{customer?.status}</TableCell>\n                          <TableCell>\n                            <ActionButton />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Widget>\n              </Grid>\n            )\n        }\n\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default OngoingLoan","/home/smartdev/Desktop/Fundhill/src/pages/admin/interest/Fees.jsx",["765","766","767","768","769","770","771","772","773","774"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nfunction Fees() {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context)\n    const [data, setData] = useState([]);\n    const  navigate = useNavigate();\n\n\n\n\n    useEffect(  () => {\n        setIsLoading(true)\n\n            const allFees = async() => {\n             try {\n                    const fees = await api\n                    .service()\n                    .fetch(\"/dashboard/fees/\",true);\n                    console.log(fees.data.results)\n                    \n                if((api.isSuccessful(fees))){\n                    setData(fees.data.results);\n                    setIsLoading(false)\n                }else{\n                    setIsLoading(true)\n                }\n             } catch (error) {\n                console.log(error.message)\n             }\n    \n            }\n\n            allFees();\n    }, [])\n\n    const initialFormState = () => ({\n        name: \"\",\n        percentage: 0,\n      });\n\n      const validationSchema = yupObject().shape({\n        name: yupString()\n        .required(\"What type of interest rate is this\"),\n        percentage: yupNumber()\n        .required(\"Enter a percentage\"),\n      });\n\n      const add_fee = async(values) => {\n        setIsLoading(true);\n\n        try {\n            console.log(values)\n\n            const response = await api\n                  .service()\n                  .push(\"/dashboard/fees/add/\",values,true)\n    \n            if(api.isSuccessful(response)){\n              setTimeout( () => {\n                toast.success(\"Fees created successfully!\");\n                // navigate(\"/dashboard/interest-rates/\",{replace: true});\n              },0);\n            }\n            setIsLoading(false);\n        } catch (error) {\n            console.log(error.message)\n        }\n   \n  }\n\n  return (\n<Fragment>\n      <PageTitle title=\"Fundhill\" />\n      <Grid container spacing={4}>\n        {\n          isLoading ?\n            (\n\n\n              <div className=\"sweet-loading\">\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\n              </div>\n\n            )\n            :\n            (\n              <Grid item xs={12}>\n                <Widget title=\"All Fees\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                  <Table className=\"mb-0\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell > Fee ID </TableCell>\n                        <TableCell > Name </TableCell>\n                        <TableCell > Percentage (%) </TableCell>\n                        <TableCell>Action</TableCell>\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {data.map((interest) => (\n                        <TableRow key={interest?.id}>\n                          <TableCell className=\"pl-3 fw-normal\">{interest?.id}</TableCell>\n                          <TableCell>{interest?.name} </TableCell>\n                          <TableCell>{interest?.percentage}</TableCell>\n                          <TableCell>\n                            <ActionButton />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Widget>\n              </Grid>\n            )\n        }\n\n      </Grid>\n    </Fragment>\n      )\n}\n\nexport default Fees","/home/smartdev/Desktop/Fundhill/src/pages/admin/interest/InterestRate.jsx",["775","776","777","778","779","780","781","782","783","784"],"import {Fragment,useEffect,useContext,useState} from 'react'\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Dashboard.css\"\nimport { Formik, Form, Field } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {BounceLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport PageTitle from \"../../../components/PageTitle\"\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from './styles';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid,\n} from \"@material-ui/core\";\nimport ActionButton from './ActionButton';\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nfunction InterestRate() {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context)\n    const [data, setData] = useState([]);\n    const  navigate = useNavigate();\n\n\n\n    useEffect(  () => {\n        setIsLoading(true)\n\n            const interestRate = async() => {\n             try {\n                    const interests = await api\n                    .service()\n                    .fetch(\"/dashboard/interest-rates/\",true);\n                    console.log(interests.data.results)\n                    \n                if((api.isSuccessful(interests))){\n                    setData(interests.data.results);\n                    setIsLoading(false)\n                }else{\n                    setIsLoading(true)\n                }\n             } catch (error) {\n                console.log(error.message)\n             }\n    \n            }\n\n            interestRate();\n    }, [])\n\n    const initialFormState = () => ({\n        name: \"\",\n        percentage: 0,\n        minimum_time_in_months: 0,\n        maximum_time_in_months: 0\n      });\n\n      const validationSchema = yupObject().shape({\n        name: yupString()\n        .required(\"What type of interest rate is this\"),\n        percentage: yupNumber()\n        .required(\"Enter a percentage\"),\n        minimum_time_in_months: yupNumber()\n        .required(\"minimum time in months\"),\n        maximum_time_in_months: yupNumber()\n        .required(\"maximum time in months\"),\n      });\n\n      const add_interest = async(values) => {\n        setIsLoading(true);\n\n        try {\n            console.log(values)\n\n            const response = await api\n                  .service()\n                  .push(\"/dashboard/interest-rates/add/\",values,true)\n    \n            if(api.isSuccessful(response)){\n              setTimeout( () => {\n                toast.success(\"Interest rate successfully created!\");\n                // navigate(\"/dashboard/interest-rates/\",{replace: true});\n              },0);\n            }\n            setIsLoading(false);\n        } catch (error) {\n            console.log(error.message)\n        }\n   \n  }\n\n\n  return (\n<Fragment>\n      <PageTitle title=\"Fundhill\" />\n      <Grid container spacing={4}>\n        {\n          isLoading ?\n            (\n\n\n              <div className=\"sweet-loading\">\n                <BounceLoader color={color} loading={loading} css={override} size={150} />\n              </div>\n\n            )\n            :\n            (\n              <Grid item xs={12}>\n                <Widget title=\"All Interest Rates\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                  <Table className=\"mb-0\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell >Interest ID </TableCell>\n                        <TableCell > Interest </TableCell>\n                        <TableCell > Percentage (%) </TableCell>\n                        <TableCell> Minimum Time in Month </TableCell>\n                        <TableCell> Maximum Time in Month</TableCell>\n                        <TableCell>Action</TableCell>\n\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {data.map((interest) => (\n                        <TableRow key={interest?.id}>\n                          <TableCell className=\"pl-3 fw-normal\">{interest?.id}</TableCell>\n                          <TableCell>{interest?.name} </TableCell>\n                          <TableCell>{interest?.percentage}</TableCell>\n                          <TableCell>{interest?.minimum_time_in_months}</TableCell>\n                          <TableCell>{interest?.maximum_time_in_months}</TableCell>\n                          <TableCell>\n                            <ActionButton />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Widget>\n              </Grid>\n            )\n        }\n\n      </Grid>\n    </Fragment>\n      )\n}\n\nexport default InterestRate","/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/NewMarketer.jsx",["785","786","787","788","789","790"],"import { Formik, Form, Field } from \"formik\";\nimport { object as yupObject, string as yupString } from 'yup';\nimport { Fragment, useState,useContext } from \"react\";\nimport { api } from \"../../../services\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { css } from \"@emotion/react\";\nimport {DotLoader} from \"react-spinners\";\nimport {Context} from \"../../../context/Context\";\nimport { Box, Button, FormControl,Select, Typography,MenuItem } from '@material-ui/core'\nimport PageTitle from '../../../components/PageTitle/PageTitle'\nimport useStyles from './styles';\nimport {TextField} from \"../../../components/FormsUI\"\n\n\n\nfunction genPassword() {\n    let chars = \"0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let passwordLength = 12;\n    let password = \"\";\n for (let i = 0; i <= passwordLength; i++) {\n   let randomNumber = Math.floor(Math.random() * chars.length);\n   password += chars.substring(randomNumber, randomNumber +1);\n  }\n        return password;\n }\n\n// console.log(genPassword())\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst initialFormState = () => (\n    {\n  first_name: \"\",\n  last_name: \"\",\n  phone: \"\",\n  email: \"\",\n  user_role: \"\",\n  password: genPassword(),\n\n});\n\nconst validationSchema = yupObject().shape({\n  first_name: yupString()\n  .required(\"first name is required\"),\n  last_name: yupString()\n  .required(\"last name is require\"),\n  email: yupString()\n  .required(\"email is required\"),\n  phone: yupString()\n  .required(\"phone is required\"),\n  user_role: yupString()\n  .required(\"Marketer role is required\")\n})\n\nfunction NewMarketer() {\n    const classes = useStyles();\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    let {user} = useContext(Context);\n    // #90EE90\n    const navigate = useNavigate();\n  \n  \n    const marketer = async(values) => {\n       try {\n        setIsLoading(true);\n        console.log(values)\n        const response = await api\n              .service()\n              .push(`/accounts/manage/signup/?org_id=${user.data.organisation}`,values,true)\n\n        if(api.isSuccessful(response)){\n          setTimeout(() => {\n            toast.success('New marketer added successfully!');\n            navigate(\"/admin/dashboard/marketer/new_marketer\",{replace: true})\n          }, 0);\n        }\n        setIsLoading(false);\n       } catch (error) {\n            console.log(error)\n            setIsLoading(false);\n       }\n    }\n\n  return (\n    <Fragment>\n    <PageTitle title=\"Marketer\" />\n    <Box className={classes.formBox}>\n        <Typography variant='h5'>Add New Marketer</Typography>\n        <Formik\n            initialValues={initialFormState()}\n            validationSchema={validationSchema}\n            onSubmit={ async(values) => {\n                await marketer(values)\n            }}\n        >\n            <Form style={{ marginBottom: 30 }} >\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >First Name</Typography>\n                </div>\n                <TextField\n                    name=\"first_name\"\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Last Name</Typography>\n                </div>\n                <TextField\n                    name=\"last_name\"\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Email</Typography>\n                </div>\n                <TextField\n                    name=\"email\"\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    type='text'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Phone Number</Typography>\n                </div>\n                <TextField\n                    name=\"phone\"\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    type='number'\n                    required\n                />\n            </div>\n            <div className={classes.inputDiv}>\n                <div className={classes.label}>\n                    <Typography >Marketer Role</Typography>\n                </div>\n                <TextField\n                    select={true}\n                    className={classes.input}\n                    variant=\"outlined\"\n                    size='small'\n                    name='user_role'\n                    type='text'\n                    required\n                >   \n                    <MenuItem>Select One</MenuItem>\n                    <MenuItem value={\"MANAGER\"} >Manager</MenuItem>\n                    <MenuItem value={\"TELLER\"}>Teller</MenuItem>\n                    <MenuItem value={\"AGENT\"}>Agent</MenuItem>\n\n                </TextField>\n            </div>\n            {\n                    isLoading ? \n                      ( <div className=\"sweet-loading\">\n                          <DotLoader color={color} loading={loading} css={override}  size={80} />\n                        </div>)\n                      : (\n                        <Button type=\"submit\" className={classes.btnSubmit}>Submit</Button>\n                      )\n                  }\n            </Form>\n        </Formik>\n        \n    </Box>\n</Fragment>\n  )\n}\n\nexport default NewMarketer","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/styles.js",["791"],"/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/styles.js",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/interest/styles.js",["792"],"/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/styles.js",["793"],"/home/smartdev/Desktop/Fundhill/src/pages/admin/expenses/styles.js",["794"],"/home/smartdev/Desktop/Fundhill/src/pages/admin/expenses/NewExpense.jsx",["795","796","797","798","799","800","801","802","803"],"import { Fragment,useContext, useState,useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Form, useField,useFormikContext } from \"formik\";\nimport {object as yupObject,string as yupString,number as yupNumber} from \"yup\";\nimport { toast } from \"react-toastify\";\nimport { css } from \"@emotion/react\";\nimport {DotLoader} from \"react-spinners\";\nimport { Box, Button,Select, Typography,MenuItem, TextareaAutosize } from '@material-ui/core'\nimport PageTitle from '../../../components/PageTitle/PageTitle'\nimport useStyles from './styles';\nimport {api} from \"../../../services\"\nimport {Context} from \"../../../context/Context\";\nimport {TextField} from \"../../../components/FormsUI\";\n\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nfunction NewExpense() {\n    const classes = useStyles();\n\n    const {user} = useContext(Context)\n    const [isLoading, setIsLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const [bhead, setBHead] = useState(\"\");\n    const navigate = useNavigate();\n    const [marketers,setMarketers] = useState([]);\n  \n  \n  \n  \n    const initialFormState = () => ({\n      agent: \"\",\n      amount: \"\",\n      desc: \"\",\n      // org_id: `${user.data.organisation}`,\n    });\n  \n    const validationSchema = yupObject().shape({\n      // agent: yupNumber()\n      // .required(\"Select agent \"),\n      amount: yupNumber()\n      .required(\"Branch Address is required\"),\n      desc: yupString()\n      .required(\"Enter a description\")\n    })\n  \n    useEffect(() => {\n        try {\n                  // setIsLoading(true)\n  \n      const allMarketer = async() => {\n        const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\",true);\n        // console.log(res.data)\n        if(api.isSuccessful(res)){\n            console.log(res.data)\n          setMarketers(res.data.results)\n        }\n  \n        // setIsLoading(false);\n  \n      }\n  \n      allMarketer();\n        } catch (error) {\n            console.log(error)\n        }\n    },[])\n  \n      const add_expenses = async(values) => {\n            try {\n                setIsLoading(true);\n                console.log(values)\n      \n                const response = await api\n                      .service()\n                      .push(\"dashboard/expense/add/\",values,true)\n      \n                if(api.isSuccessful(response)){\n                  setTimeout( () => {\n                    toast.success(\"Expenses successfully saved!\");\n                    navigate(\"/admin/dashboard/expense/new_expenses\",{replace: true})\n                  },0);\n                }\n                setIsLoading(false);\n            } catch (error) {\n                console.log(error)\n            }\n      }\n  \n  \n  return (\n<Fragment>\n            <PageTitle title=\"FUNDHILL\" />\n            <Box className={classes.formBox}>\n                <Typography variant='h5'>Add New Expense</Typography>\n                <Formik\n                    initialValues={initialFormState()}\n                    validationSchema={validationSchema}\n                    onSubmit={ async(values) => {\n                        await add_expenses(values)\n                    }}\n                >\n                    <Form style={{ marginBottom: 30 }} >\n                    <div className={classes.inputDiv}>\n                        <div className={classes.label}>\n                            <Typography >Marketer</Typography>\n                        </div>\n                    <TextField\n                        select={true} \n                        className={classes.input}\n                        name=\"agent\"  \n                        variant='outlined'\n                        fullWidth={true}\n                    >\n                        {marketers.map((marketer) => {\n                            return (\n                            <MenuItem key={marketer.id} value={marketer.id}>\n                                {marketer.first_name}\n                            </MenuItem>\n                            )\n                        })}\n                        </TextField>\n                    </div>\n                    <div className={classes.inputDiv}>\n                        <div className={classes.label}>\n                            <Typography >Amount</Typography>\n                        </div>\n                        <TextField\n                            className={classes.input}\n                            variant=\"outlined\"\n                            size='small'\n                            name='amount'\n                            type='number'\n                        />\n                    </div>\n\n                    <div className={classes.inputDiv}>\n                        <div className={classes.label}>\n                            <Typography >Description</Typography>\n                        </div>\n                        <TextField\n                            name=\"desc\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            type='text'\n                            fullWidth={true}\n                        />\n                    </div>\n\n                    {\n                            isLoading ? \n                              ( <div className=\"sweet-loading\">\n                                  <DotLoader color={color} loading={loading} css={override}  size={80} />\n                                </div>)\n                              : (\n                                <Button type=\"submit\" className={classes.btnSubmit}>Submit</Button>\n                              )\n                          }\n                    </Form>\n                </Formik>\n                \n            </Box>\n        </Fragment>\n          )\n}\n\nexport default NewExpense","/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/ActionButton.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/ActionButton.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/ActionButton.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/interest/ActionButton.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/customer/Modal.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/interest/Modal.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/loan/Modal.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/admin/marketer/Modal.jsx",["804","805","806","807","808"],"import { Box, Button, Divider, Fade, IconButton, Modal,MenuItem,Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Backdrop from '@mui/material/Backdrop';\nimport {  useState,useEffect,useContext } from \"react\";\nimport {DotLoader} from \"react-spinners\";\nimport { Formik, Form} from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { api } from '../../../services';\nimport { css } from \"@emotion/react\";\nimport {Context} from \"../../../context/Context\";\nimport useStyles from './styles';\nimport {TextField} from \"../../../components/FormsUI\"\n\n// CONTEXT\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst AllmarketerModal = ({ fund,setCurrentId }) => {\n    const classes = useStyles();\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [btnLoading, setBtnLoading] = useState(false);\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const {user} = useContext(Context);\n    const [marketers,setMarketers] = useState([]);\n    const [data,setData] = useState(\"\");\n    const [lock, setUnlock] = useState(false);\n    const handleUnlock = () => setUnlock(true);\n    const handleLock = () => setUnlock(false);\n\n\n\n\n\n      useEffect(() => {\n          setIsLoading(true)\n  \n          const allMarketer = async() => {\n            const res = await api.service().fetch(\"/accounts/manage/?is_staff=True\",true);\n            console.log(res.data)\n            if(api.isSuccessful(res)){\n              //   console.log(res)\n              setMarketers(res.data.results)\n            }\n      \n            setIsLoading(false);\n      \n          }\n  \n          allMarketer();\n        },[]);\n\n        const getMarketer = (id) => {\n            const marketer = marketers.filter((item) => item.id === id);\n            // console.log(branch);\n            setData(marketer[0]);\n            console.log(data);\n            // return branch\n          }\n        \n          const handleProps = () => {\n            // console.log(setCurrentId);\n            getMarketer(setCurrentId);\n            // setItem(branches(setCurrentId));\n            return setUnlock(true);\n          }\n  \n  \n        const edit_marketer = async(values,id) => {\n            setBtnLoading(true);\n            console.log(values)\n  \n          const response = await api\n              .service()\n              .update(`/accounts/auth/${id}/`,values,true)\n  \n          if(api.isSuccessful(response)){\n          setTimeout( () => {\n              toast.success(\"Marketer profile successfully updated!!\");\n              // navigate(\"/admin/allbranch\",{replace: true})\n          },0);\n          }\n          setBtnLoading(false);\n        }\n      const fund_marketer = async(values,id) => {\n              try {\n                  setBtnLoading(true);\n                  console.log(values)\n  \n                  const response = await api\n                      .service()\n                      .push(`/wallets/marketers/${id}/fund-wallet/`,values,true)\n                  if(api.isSuccessful(response)){\n                  setTimeout( () => {\n                      toast.success(\"Transaction successful\");\n                      // navigate(\"/admin/allbranch\",{replace: true})\n                  },0);\n                  }\n                  setBtnLoading(false);\n              } catch (error) {\n                  console.log(error)\n              }\n                  }\n  \n  \n  \n        const deleteMarketer = async(id) => {\n          const res = await api.service().remove(`/accounts/auth/${id}/`,true);\n          console.log(res.data)\n          if(api.isSuccessful(res)){\n              setTimeout( () => {\n                  toast.success(\"Successfully deleted marketer!\");\n              },0);\n              }\n    \n        }\n    return (\n        <div>\n            <Button onClick={handleUnlock && handleProps }>{fund ? 'Fund Wallet' : 'Edit Profile'}</Button>\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={lock}\n                onClose={handleLock}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={lock}>\n                    <Box sx={style}>\n\n                        {fund ? (\n                        <>\n\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\n                            <IconButton onClick={handleLock}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </Box>\n\n                        <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n                           Fund Marketer\n                        </Typography>\n\n                        <Divider style={{ marginTop: 40 }} />\n                         <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Fund Marketer Wallet </Typography> \n\n                         <Formik\n                                    initialValues={{\n                                         amount: 0,\n                                        }}\n                                 // validationSchema= {validationSchema}\n                                 onSubmit = { async (values) => {\n                                    await fund_marketer(values,data.wallet.id)\n                                }}\n                                >\n                                    <Form style={{ display: 'flex', flexDirection: 'column' }} >\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Amount</Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"number\" name=\"amount\" size='small' />\n\n                                    </div>\n\n\n                                    {\n                                            btnLoading ? \n                                            ( <div className=\"sweet-loading\">\n                                                <DotLoader color={color} loading={loading} css={override}  size={80} />\n                                                </div>)\n                                            : (\n                                                <Button type=\"submit\" variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\n                                                    Fund\n                                                </Button>\n                                              )\n                                        }\n                                    </Form>\n                                </Formik>\n                        </>      \n                        ) : (\n                            <>\n\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\n                            <IconButton onClick={handleLock}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </Box>\n                             <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n                            Marketer Id\n                            </Typography> \n                        <Divider style={{ marginTop: 40 }} />\n                         <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Edit Marketer Profile</Typography>\n                         <Formik\n                                        initialValues={{\n                                        first_name: `${data?.first_name}`,\n                                        middle_name: `${data?.middle_name}`,\n                                        last_name: `${data?.last_name}`,\n                                        email: `${data?.email}`,\n                                        phone: `${data?.phone}`,   \n                                        user_role: `${data?.user_role}`,\n                                     }}\n                            // validationSchema= {validationSchema}\n                            onSubmit = { async (values) => {\n                                await edit_marketer(values,data.id)\n                            }}\n                        >         \n                                    <Form style={{ display: 'flex', flexDirection: 'column' }}>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>First Name</Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"first_name\" size='small' />\n\n                                    </div>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Middle Name</Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"middle_name\" size='small' />\n\n                                    </div>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Last Name</Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"last_name\" size='small' />\n\n                                    </div>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Email</Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"email\" name=\"email\" size='small' />\n\n                                    </div>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Phone</Typography></div>\n                                        <TextField fullWidth variant='outlined' type=\"text\" name=\"phone\" size='small' />\n\n                                    </div>\n\n                                    <div className={classes.formDiv}>\n                                        <div className={classes.divTypo}><Typography>Marketer</Typography></div>\n                                        <TextField\n                                            select={true}\n                                            className={classes.input}\n                                            variant=\"outlined\"\n                                            size='small'\n                                            name='user_role'\n                                            type='text'\n                                            required\n                                        >   \n                                            <MenuItem value={\"MANAGER\"} >Manager</MenuItem>\n                                            <MenuItem value={\"TELLER\"}>Teller</MenuItem>\n                                            <MenuItem value={\"AGENT\"}>Agent</MenuItem>\n\n                                        </TextField>\n                                    </div>\n\n                                        {\n                                            btnLoading ? \n                                            ( <div className=\"sweet-loading\">\n                                                <DotLoader color={color} loading={loading} css={override}  size={80} />\n                                                </div>)\n                                            : (\n                                                <Button type=\"submit\" variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\n                                                    Update\n                                                </Button>\n                                              )\n                                        }\n\n                                    </Form>\n                                </Formik>\n                        </>  \n                        )   \n                        }\n\n                    \n                        <Divider style={{ marginTop: 40 }} />\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\n                            <Button onClick={handleLock} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\n                        </Box>\n                    </Box>\n                </Fade>\n            </Modal>\n\n          \n        </div>\n    )\n}\n\nexport default AllmarketerModal","/home/smartdev/Desktop/Fundhill/src/pages/admin/expenses/ActionButton.jsx",["809","810","811","812","813","814","815","816","817","818"],"/home/smartdev/Desktop/Fundhill/src/pages/admin/expenses/Modal.jsx",["819","820","821","822","823","824","825"],"/home/smartdev/Desktop/Fundhill/src/router/adminRoute/DashboardRoute.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/TotalWithdrawal.jsx",["826","827","828","829","830"],"import { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport { css } from \"@emotion/react\";\nimport { BounceLoader } from \"react-spinners\";\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n    Chip\n} from \"@material-ui/core\";\n//   import useStyles from \"./styles\";\nimport { Fragment, useState } from \"react\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\n\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    }\n}))\nconst override = css`\ndisplay: block;\nmargin: 0 auto;\nborder-color: green;\nalign-items: center;\n`;\n\nconst TotalWithdrawal = () => {\n    const classes = useStyles();\n    let [color, setColor] = useState(\"#ADD8E6\");\n\n\n    return (\n        <Fragment>\n            <PageTitle title=\"All Withdrawals Made Today\" />\n            <Grid container spacing={4}>\n\n                {/* <div className=\"sweet-loading\">\n                    <BounceLoader color={color} l css={override} size={150} />\n                </div> */}\n                <Grid item xs={12}>\n                    <Widget title=\"Withdrawals\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                        <Table className=\"mb-0\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell >Transaction ID </TableCell>\n                                    <TableCell >Date</TableCell>\n                                    <TableCell >Amount</TableCell>\n                                    <TableCell>Customer</TableCell>\n                                    <TableCell>Marketer</TableCell>\n                                    <TableCell>Account Number</TableCell>\n                                    <TableCell>Description</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell className=\"pl-3 fw-normal\">1</TableCell>\n                                    <TableCell>1-2-2022</TableCell>\n                                    <TableCell>200000</TableCell>\n                                    <TableCell>Smart Dev</TableCell>\n                                    <TableCell>Tobi</TableCell>\n                                    <TableCell>0000000443</TableCell>\n                                    <TableCell>meaningfull</TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Widget>\n                </Grid>\n\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default TotalWithdrawal","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/TotalDeposite.jsx",["831","832","833","834","835"],"import { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport { css } from \"@emotion/react\";\nimport { BounceLoader } from \"react-spinners\";\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n    Chip\n} from \"@material-ui/core\";\n//   import useStyles from \"./styles\";\nimport { Fragment, useState } from \"react\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\n\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    }\n}))\nconst override = css`\ndisplay: block;\nmargin: 0 auto;\nborder-color: green;\nalign-items: center;\n`;\n\nconst TotalDeposite = () => {\n    const classes = useStyles();\n    let [color, setColor] = useState(\"#ADD8E6\");\n\n\n    return (\n        <Fragment>\n            <PageTitle title=\"all deposite made today\" />\n            <Grid container spacing={4}>\n\n                {/* <div className=\"sweet-loading\">\n                    <BounceLoader color={color} l css={override} size={150} />\n                </div> */}\n                <Grid item xs={12}>\n                    <Widget title=\"Deposit\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                        <Table className=\"mb-0\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell >Transaction ID </TableCell>\n                                    <TableCell >Date</TableCell>\n                                    <TableCell >Amount</TableCell>\n                                    <TableCell>Depositors Name</TableCell>\n                                    <TableCell>Customer</TableCell>\n                                    <TableCell>Marketer</TableCell>\n                                    <TableCell>Account Number</TableCell>\n                                    <TableCell>Description</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell className=\"pl-3 fw-normal\">1</TableCell>\n                                    <TableCell>1-2-2022</TableCell>\n                                    <TableCell>200000</TableCell>\n                                    <TableCell>Smart Dev</TableCell>\n                                    <TableCell>Sayae</TableCell>\n                                    <TableCell>Tobi</TableCell>\n                                    <TableCell>0000000443</TableCell>\n                                    <TableCell>meaningfull</TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Widget>\n                </Grid>\n\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default TotalDeposite","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/NewProduct.jsx",["836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855"],"import { Divider, Grid, TableContainer } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { css } from \"@emotion/react\";\nimport useStyles from './styles'\nimport { styled, alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { BounceLoader } from \"react-spinners\";\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n    Chip\n} from \"@material-ui/core\";\n//   import useStyles from \"./styles\";\nimport { Fragment, useState } from \"react\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\n\n// Modal\nimport * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Typography from '@mui/material/Typography';\nimport { IconButton, Paper, TextField } from \"@mui/material\";\nimport { textTransform } from \"@mui/system\";\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\n\n// const useStyles = makeStyles(theme => ({\n//     tableOverflow: {\n//         overflow: 'auto'\n//     }\n// }))\nconst override = css`\ndisplay: block;\nmargin: 0 auto;\nborder-color: green;\nalign-items: center;\n`;\n\nconst StyledMenu = styled((props) => (\n    <Menu\n        elevation={0}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        {...props}\n    />\n))(({ theme }) => ({\n    '& .MuiPaper-root': {\n        borderRadius: 6,\n        marginTop: theme.spacing(1),\n        minWidth: 180,\n        color:\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n        boxShadow:\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n        '& .MuiMenu-list': {\n            padding: '4px 0',\n        },\n        '& .MuiMenuItem-root': {\n            '& .MuiSvgIcon-root': {\n                fontSize: 18,\n                color: theme.palette.text.secondary,\n                marginRight: theme.spacing(1.5),\n            },\n            '&:active': {\n                backgroundColor: alpha(\n                    theme.palette.primary.main,\n                    theme.palette.action.selectedOpacity,\n                ),\n            },\n        },\n    },\n}));\n\n\n// table\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData(1, '2022-05-2', 15000, 'Cash', 'For Loan'),\n    // createData('Ice cream sandwich', 237, 9.0, 37,),\n\n];\n\n\nconst NewProduct = () => {\n\n    const classes = useStyles();\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    // modal\n    const [openn, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClosee = () => setOpen(false);\n    // second modal\n    const [lock, setUnlock] = useState(false);\n    const handleUnlock = () => setUnlock(true);\n    const handleLock = () => setUnlock(false);\n\n    return (\n        <Fragment>\n            <PageTitle title=\"Disbursed Loan\" />\n            <Grid container spacing={4}>\n\n                {/* <div className=\"sweet-loading\">\n                    <BounceLoader color={color} l css={override} size={150} />\n                </div> */}\n                <Grid item xs={12}>\n                    <Widget title=\"Disburse Loan Details\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                        <div style={{ marginTop: 10, marginBottom: 10, marginLeft: 20 }}>\n                            <Button\n                                variant=\"contained\"\n                                disableElevation\n                                onClick={handleUnlock}\n                                style={{ textTransform: 'none' }}\n                            >\n                                Add Product\n                            </Button>\n                        </div>\n                        <Table className=\"mb-0\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell >ID </TableCell>\n                                    <TableCell >Product</TableCell>\n                                    <TableCell >Interest (%)</TableCell>\n                                    <TableCell>MGT Charges (%)</TableCell>\n                                    <TableCell>Action</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    {/* <TableCell className=\"pl-3 fw-normal\">23</TableCell>\n                                    <TableCell>\tDaniel Yusuf</TableCell>\n                                    <TableCell>Yakuku John</TableCell>\n                                    <TableCell>Account Number</TableCell>\n                                    <TableCell>08080080808</TableCell>\n                                    <TableCell>123456</TableCell>\n                                    <TableCell>5000000</TableCell>\n                                    <TableCell>\t5400000</TableCell>\n                                    <TableCell>Approved</TableCell>\n                                    <TableCell>On-going loan</TableCell> */}\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Widget>\n                </Grid>\n            </Grid>\n\n            <div>\n                {/* <Button >Open modal</Button> */}\n\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={lock}\n                    onClose={handleLock}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n                    <Fade in={lock}>\n                        <Box sx={style}>\n                            <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n                                Add New Product\n                            </Typography>\n\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\n                                <IconButton onClick={handleLock}>\n                                    <CloseIcon fontSize=\"small\" />\n                                </IconButton>\n                            </Box>\n                            <Divider style={{ marginTop: 40 }} />\n\n                            <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Product</Typography>\n\n                            <form style={{ display: 'flex', flexDirection: 'column' }}>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Product Name</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Product Name' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Product Interest (%)</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Product Interest (%)' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Mgt Charges (%)</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Mgt Charges (%)' required />\n\n                                </div>\n\n                                <Button variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\n                                    Add\n                                </Button>\n                            </form>\n\n                            <Divider style={{ marginTop: 40 }} />\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\n                                <Button onClick={handleClosee} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\n                            </Box>\n                        </Box>\n                    </Fade>\n                </Modal>\n            </div>\n        </Fragment>\n\n    )\n}\n\nexport default NewProduct","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/FixedSavingsRep.jsx",["856","857","858","859","860","861","862"],"import { Grid } from \"@material-ui/core\";\nimport { css } from \"@emotion/react\";\nimport useStyles from './styles'\nimport { styled, alpha } from '@mui/material/styles';\nimport Menu from '@mui/material/Menu';\n\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n    Chip\n} from \"@material-ui/core\";\n//   import useStyles from \"./styles\";\nimport { Fragment, } from \"react\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\n\n// Modal\nimport * as React from 'react';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\n\n// table\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData(1, '2022-05-2', 15000, 'Cash', 'For Loan'),\n    // createData('Ice cream sandwich', 237, 9.0, 37,),\n\n];\n\n\nconst FixedSavingsRep = () => {\n\n    const classes = useStyles();\n    return (\n        <Fragment>\n            <PageTitle title=\"All Savings Plan Report\" />\n            <Grid container spacing={4}>\n\n                {/* <div className=\"sweet-loading\">\n                    <BounceLoader color={color} l css={override} size={150} />\n                </div> */}\n                <Grid item xs={12}>\n                    <Widget title=\"Fixed Savings\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                        <Table className=\"mb-0\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell >Transaction ID </TableCell>\n                                    <TableCell >Date</TableCell>\n                                    <TableCell >Amount</TableCell>\n                                    <TableCell>Customer</TableCell>\n                                    <TableCell>Marketer</TableCell>\n                                    <TableCell>Account Number</TableCell>\n                                    <TableCell>Description</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell className=\"pl-3 fw-normal\">1</TableCell>\n                                    <TableCell>\tTiger Nixon</TableCell>\n                                    <TableCell>John Bull</TableCell>\n                                    <TableCell>1234567890</TableCell>\n                                    <TableCell>\tEsusu</TableCell>\n                                    <TableCell>08076895837</TableCell>\n                                    <TableCell>$320,800</TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </Fragment>\n\n    )\n}\n\nexport default FixedSavingsRep","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/Allcustomers.jsx",["863","864","865","866","867","868","869","870","871","872","873","874"],"import { Divider, Grid, TableContainer } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { css } from \"@emotion/react\";\nimport useStyles from './styles'\nimport { styled, alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { BounceLoader } from \"react-spinners\";\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n    Chip\n} from \"@material-ui/core\";\n//   import useStyles from \"./styles\";\nimport { Fragment, useState } from \"react\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\n\n// Modal\nimport * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Typography from '@mui/material/Typography';\nimport { IconButton, OutlinedInput, Paper, Select, TextField } from \"@mui/material\";\nimport { textTransform } from \"@mui/system\";\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 600,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\n\n// const useStyles = makeStyles(theme => ({\n//     tableOverflow: {\n//         overflow: 'auto'\n//     }\n// }))\nconst override = css`\ndisplay: block;\nmargin: 0 auto;\nborder-color: green;\nalign-items: center;\n`;\n\nconst StyledMenu = styled((props) => (\n    <Menu\n        elevation={0}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        {...props}\n    />\n))(({ theme }) => ({\n    '& .MuiPaper-root': {\n        borderRadius: 6,\n        marginTop: theme.spacing(1),\n        minWidth: 180,\n        color:\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n        boxShadow:\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n        '& .MuiMenu-list': {\n            padding: '4px 0',\n        },\n        '& .MuiMenuItem-root': {\n            '& .MuiSvgIcon-root': {\n                fontSize: 18,\n                color: theme.palette.text.secondary,\n                marginRight: theme.spacing(1.5),\n            },\n            '&:active': {\n                backgroundColor: alpha(\n                    theme.palette.primary.main,\n                    theme.palette.action.selectedOpacity,\n                ),\n            },\n        },\n    },\n}));\n\n\n// table\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData(1, '2022-05-2', 15000, 'Cash', 'For Loan'),\n    // createData('Ice cream sandwich', 237, 9.0, 37,),\n\n];\n\n// select input\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst names = [\n    'Oliver Hansen',\n    'Van Henry',\n    'April Tucker',\n    'Ralph Hubbard',\n    'Omar Alexander',\n    'Carlos Abbott',\n    'Miriam Wagner',\n    'Bradley Wilkerson',\n    'Virginia Andrews',\n    'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n    return {\n        fontWeight:\n            personName.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n}\nconst Allcustomers = () => {\n\n    const classes = useStyles();\n    let [color, setColor] = useState(\"#ADD8E6\");\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    // modal\n    const [openn, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClosee = () => setOpen(false);\n    // second modal\n    const [lock, setUnlock] = useState(false);\n    const handleUnlock = () => setUnlock(true);\n    const handleLock = () => setUnlock(false);\n    // third modal\n    const [locks, setUnlocks] = useState(false);\n    const handleUnlocks = () => setUnlocks(true);\n    const handleLocks = () => setUnlocks(false);\n\n    // select input\n\n    const theme = useTheme();\n    const [personName, setPersonName] = React.useState([]);\n\n    const handleChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setPersonName(\n            // On autofill we get a stringified value.\n            typeof value === 'string' ? value.split(',') : value,\n        );\n    };\n\n    return (\n        <Fragment>\n            <PageTitle title=\"All Customers\" />\n            <Grid container spacing={4}>\n\n                {/* <div className=\"sweet-loading\">\n                    <BounceLoader color={color} l css={override} size={150} />\n                </div> */}\n                <Grid item xs={12}>\n                    <Widget title=\"Maketers\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                        <Table className=\"mb-0\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell >ID</TableCell>\n                                    <TableCell >Full Name</TableCell>\n                                    <TableCell >Account Number</TableCell>\n                                    <TableCell>Telephone</TableCell>\n                                    <TableCell>Email</TableCell>\n                                    <TableCell>Marketer</TableCell>\n                                    <TableCell>Status</TableCell>\n                                    <TableCell>Action</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell className=\"pl-3 fw-normal\">5</TableCell>\n                                    <TableCell>\tSteven Umar</TableCell>\n                                    <TableCell>8061516479</TableCell>\n                                    <TableCell>2348084395900</TableCell>\n                                    <TableCell>\ttestcustomer@gmail.com</TableCell>\n                                    <TableCell>\tjohn</TableCell>\n                                    <TableCell>\t<Button style={{ textTransform: 'none' }} variant=\"contained\" disableElevation>Approved</Button></TableCell>\n                                    <TableCell>\n                                        <div>\n                                            <Button\n                                                id=\"demo-customized-button\"\n                                                aria-controls={open ? 'demo-customized-menu' : undefined}\n                                                aria-haspopup=\"true\"\n                                                aria-expanded={open ? 'true' : undefined}\n                                                variant=\"contained\"\n                                                disableElevation\n                                                onClick={handleClick}\n                                                endIcon={<KeyboardArrowDownIcon />}\n                                                style={{ textTransform: 'none' }}\n                                            >\n                                                Action\n                                            </Button>\n                                            <StyledMenu\n                                                id=\"demo-customized-menu\"\n                                                MenuListProps={{\n                                                    'aria-labelledby': 'demo-customized-button',\n                                                }}\n                                                anchorEl={anchorEl}\n                                                open={open}\n                                                onClose={handleClose}\n                                            >\n                                                {/* <MenuItem onClick={handleOpen} history disableRipple>\n                                                    Action\n                                                </MenuItem> */}\n                                                <MenuItem onClick={handleUnlock} disableRipple>\n                                                    Edit Profile\n                                                </MenuItem>\n                                                <MenuItem onClick={handleUnlocks} disableRipple>\n                                                    Add Plan\n                                                </MenuItem>\n                                                <MenuItem onClick={handleOpen} history disableRipple>\n                                                    Fund Wallet\n                                                </MenuItem>\n                                            </StyledMenu>\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Widget>\n                </Grid>\n            </Grid>\n\n            <div>\n                {/* <Button >Open modal</Button> */}\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={openn}\n                    onClose={handleClosee}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n                    <Fade in={openn}>\n                        <Box sx={style}>\n                            <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n                                Fund Vic Gyang Wallet\n                            </Typography>\n\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\n                                <IconButton onClick={handleClosee}>\n                                    <CloseIcon fontSize=\"small\" />\n                                </IconButton>\n                            </Box>\n                            <Divider style={{ marginTop: 40 }} />\n                            <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Are you sure you want to fund this account</Typography>\n\n                            <form style={{ display: 'flex', flexDirection: 'column' }}>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Savings Plan</Typography></div>\n                                    <Select\n                                        size=\"small\"\n                                        fullWidth\n                                        value={personName}\n                                        onChange={handleChange}\n                                        // input={<OutlinedInput label=\"Name\" />}\n                                        MenuProps={MenuProps}\n                                    >\n                                        {names.map((name) => (\n                                            <MenuItem\n                                                key={name}\n                                                value={name}\n                                                style={getStyles(name, personName, theme)}\n                                            >\n                                                {name}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n\n                                </div>\n                                <Button variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\n                                    Fund\n                                </Button>\n                            </form>\n                            <Divider style={{ marginTop: 40 }} />\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\n                                <Button onClick={handleClosee} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\n                            </Box>\n                        </Box>\n                    </Fade>\n                </Modal>\n\n\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={lock}\n                    onClose={handleLock}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n                    <Fade in={lock}>\n                        <Box sx={style}>\n                            <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n                                Customer ID\n                            </Typography>\n\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\n                                <IconButton onClick={handleLock}>\n                                    <CloseIcon fontSize=\"small\" />\n                                </IconButton>\n                            </Box>\n                            <Divider style={{ marginTop: 40 }} />\n\n                            <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Edit Customer Profile</Typography>\n\n                            <form style={{ display: 'flex', flexDirection: 'column' }}>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>First Name</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='First Name' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Middle Name</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Middle Name' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Last Name</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Last Name' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Email</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"email\" name=\"\" size='small' placeholder='Email' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Phone</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"number\" name=\"\" size='small' placeholder='Phone Number' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Business Address</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Business Address' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Residential Address</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"text\" name=\"\" size='small' placeholder='Residential Address' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Marketer</Typography></div>\n                                    <Select\n                                        fullWidth\n                                        value={personName}\n                                        onChange={handleChange}\n                                        // input={<OutlinedInput label=\"Name\" />}\n                                        MenuProps={MenuProps}\n                                    >\n                                        {names.map((name) => (\n                                            <MenuItem\n                                                key={name}\n                                                value={name}\n                                                style={getStyles(name, personName, theme)}\n                                            >\n                                                {name}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n\n                                </div>\n\n                                <Button variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\n                                    Update\n                                </Button>\n                            </form>\n\n                            <Divider style={{ marginTop: 40 }} />\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\n                                <Button onClick={handleClosee} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\n                            </Box>\n                        </Box>\n                    </Fade>\n                </Modal>\n\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={locks}\n                    onClose={handleLocks}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n                    <Fade in={locks}>\n                        <Box sx={style}>\n                            <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n                                Customer ID\n                            </Typography>\n\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', }}>\n                                <IconButton onClick={handleLocks}>\n                                    <CloseIcon fontSize=\"small\" />\n                                </IconButton>\n                            </Box>\n                            <Divider style={{ marginTop: 40 }} />\n\n                            <Typography style={{ fontWeight: 600, marginTop: 10, marginBottom: 10, marginLeft: 10 }}>Deposite</Typography>\n\n                            <form style={{ display: 'flex', flexDirection: 'column' }}>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Frequency</Typography></div>\n                                    <Select\n                                        size=\"small\"\n                                        fullWidth\n                                        value={personName}\n                                        onChange={handleChange}\n                                        // input={<OutlinedInput label=\"Name\" />}\n                                        MenuProps={MenuProps}\n                                    >\n                                        {names.map((name) => (\n                                            <MenuItem\n                                                key={name}\n                                                value={name}\n                                                style={getStyles(name, personName, theme)}\n                                            >\n                                                {name}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Amount</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"number\" name=\"\" size='small' placeholder='Amount' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Amount Cycle</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"number\" name=\"\" size='small' placeholder='Amount Cycle' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Duration</Typography></div>\n                                    <TextField fullWidth variant='outlined' type=\"number\" name=\"\" size='small' placeholder='1-12' required />\n\n                                </div>\n\n                                <div className={classes.formDiv}>\n                                    <div className={classes.divTypo}><Typography>Savings Plan</Typography></div>\n                                    <Select\n                                        fullWidth\n                                        value={personName}\n                                        onChange={handleChange}\n                                        input={<OutlinedInput label=\"Select saving type\" />}\n                                        MenuProps={MenuProps}\n                                    >\n                                        {names.map((name) => (\n                                            <MenuItem\n                                                key={name}\n                                                value={name}\n                                                style={getStyles(name, personName, theme)}\n                                            >\n                                                {name}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n\n                                </div>\n\n                                <Button variant='contained' style={{ marginTop: 10, alignSelf: 'center', textTransform: 'none', width: '100%' }}>\n                                    Submit\n                                </Button>\n                            </form>\n\n                            <Divider style={{ marginTop: 40 }} />\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', marginTop: 2, width: '100%' }}>\n                                <Button onClick={handleLocks} variant=\"contained\" style={{ textTransform: 'none', background: 'gray' }}>Close</Button>\n                            </Box>\n                        </Box>\n                    </Fade>\n                </Modal>\n            </div>\n        </Fragment>\n\n    )\n}\n\nexport default Allcustomers","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/AllBranch/AllBranch.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/AllBranch/BtnAction.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/AllBranch/Modal.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/OngoingLoans/OngoingLoans.jsx",["875","876"],"import { Grid } from \"@material-ui/core\";\nimport { css } from \"@emotion/react\";\nimport useStyles from '../styles'\n// import { BounceLoader } from \"react-spinners\";\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n    // Chip\n} from \"@material-ui/core\";\n//   import useStyles from \"./styles\";\nimport { Fragment, useState } from \"react\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport Widget from \"../../../components/Widget/Widget\";\nimport ActionButton from \"./ActionButton\";\n\n// const useStyles = makeStyles(theme => ({\n//     tableOverflow: {\n//         overflow: 'auto'\n//     }\n// }))\nconst override = css`\ndisplay: block;\nmargin: 0 auto;\nborder-color: green;\nalign-items: center;\n`;\n\n\nconst OngoingLoans = () => {\n\n    const classes = useStyles();\n    // let [color, setColor] = useState(\"#ADD8E6\");\n\n    return (\n        <Fragment>\n            <PageTitle title=\"Disbursed Loan\" />\n            <Grid container spacing={4}>\n\n                {/* <div className=\"sweet-loading\">\n                    <BounceLoader color={color} l css={override} size={150} />\n                </div> */}\n                <Grid item xs={12}>\n                    <Widget title=\"Disburse Loan Details\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\n                        <Table className=\"mb-0\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell >ID </TableCell>\n                                    <TableCell >Loan Officer</TableCell>\n                                    <TableCell >Client Names</TableCell>\n                                    <TableCell>Account Number</TableCell>\n                                    <TableCell>Client Contact</TableCell>\n                                    <TableCell>Loan ID</TableCell>\n                                    <TableCell>Principal</TableCell>\n                                    <TableCell>Loan + Interest</TableCell>\n                                    <TableCell>Status</TableCell>\n                                    <TableCell>Payment Status</TableCell>\n                                    <TableCell>Action</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell className=\"pl-3 fw-normal\">23</TableCell>\n                                    <TableCell>\tDaniel Yusuf</TableCell>\n                                    <TableCell>Yakuku John</TableCell>\n                                    <TableCell>Account Number</TableCell>\n                                    <TableCell>08080080808</TableCell>\n                                    <TableCell>123456</TableCell>\n                                    <TableCell>5000000</TableCell>\n                                    <TableCell>\t5400000</TableCell>\n                                    <TableCell>Approved</TableCell>\n                                    <TableCell>On-going loan</TableCell>\n                                    <TableCell>\n                                        <ActionButton />\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </Fragment>\n\n    )\n}\n\nexport default OngoingLoans","/home/smartdev/Desktop/Fundhill/src/pages/dashboard/Allmarketers/Allmarketers.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/Allmarketers/ActionButton.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/OngoingLoans/ActionButton.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/Allmarketers/Modal.jsx",[],"/home/smartdev/Desktop/Fundhill/src/pages/dashboard/OngoingLoans/Modal.jsx",[],{"ruleId":"877","replacedBy":"878"},{"ruleId":"879","replacedBy":"880"},{"ruleId":"881","severity":1,"message":"882","line":26,"column":8,"nodeType":"883","messageId":"884","endLine":26,"endColumn":17},{"ruleId":"881","severity":1,"message":"885","line":27,"column":8,"nodeType":"883","messageId":"884","endLine":27,"endColumn":18},{"ruleId":"881","severity":1,"message":"886","line":28,"column":8,"nodeType":"883","messageId":"884","endLine":28,"endColumn":21},{"ruleId":"881","severity":1,"message":"887","line":29,"column":8,"nodeType":"883","messageId":"884","endLine":29,"endColumn":12},{"ruleId":"881","severity":1,"message":"888","line":30,"column":8,"nodeType":"883","messageId":"884","endLine":30,"endColumn":14},{"ruleId":"881","severity":1,"message":"889","line":31,"column":8,"nodeType":"883","messageId":"884","endLine":31,"endColumn":13},{"ruleId":"881","severity":1,"message":"890","line":32,"column":8,"nodeType":"883","messageId":"884","endLine":32,"endColumn":14},{"ruleId":"881","severity":1,"message":"891","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":14},{"ruleId":"881","severity":1,"message":"892","line":3,"column":24,"nodeType":"883","messageId":"884","endLine":3,"endColumn":32},{"ruleId":"881","severity":1,"message":"893","line":3,"column":33,"nodeType":"883","messageId":"884","endLine":3,"endColumn":49},{"ruleId":"881","severity":1,"message":"894","line":8,"column":23,"nodeType":"883","messageId":"884","endLine":8,"endColumn":34},{"ruleId":"881","severity":1,"message":"895","line":8,"column":35,"nodeType":"883","messageId":"884","endLine":8,"endColumn":41},{"ruleId":"881","severity":1,"message":"896","line":25,"column":19,"nodeType":"883","messageId":"884","endLine":25,"endColumn":29},{"ruleId":"881","severity":1,"message":"897","line":26,"column":17,"nodeType":"883","messageId":"884","endLine":26,"endColumn":25},{"ruleId":"881","severity":1,"message":"898","line":27,"column":12,"nodeType":"883","messageId":"884","endLine":27,"endColumn":17},{"ruleId":"881","severity":1,"message":"899","line":27,"column":19,"nodeType":"883","messageId":"884","endLine":27,"endColumn":27},{"ruleId":"881","severity":1,"message":"900","line":1,"column":17,"nodeType":"883","messageId":"884","endLine":1,"endColumn":25},{"ruleId":"881","severity":1,"message":"901","line":21,"column":7,"nodeType":"883","messageId":"884","endLine":21,"endColumn":12},{"ruleId":"881","severity":1,"message":"902","line":724,"column":10,"nodeType":"883","messageId":"884","endLine":724,"endColumn":26},{"ruleId":"881","severity":1,"message":"903","line":1,"column":10,"nodeType":"883","messageId":"884","endLine":1,"endColumn":19},{"ruleId":"877","replacedBy":"904"},{"ruleId":"879","replacedBy":"905"},{"ruleId":"881","severity":1,"message":"906","line":10,"column":27,"nodeType":"883","messageId":"884","endLine":10,"endColumn":36},{"ruleId":"881","severity":1,"message":"907","line":32,"column":10,"nodeType":"883","messageId":"884","endLine":32,"endColumn":19},{"ruleId":"881","severity":1,"message":"908","line":39,"column":7,"nodeType":"883","messageId":"884","endLine":39,"endColumn":15},{"ruleId":"881","severity":1,"message":"909","line":96,"column":9,"nodeType":"883","messageId":"884","endLine":96,"endColumn":21},{"ruleId":"881","severity":1,"message":"910","line":97,"column":8,"nodeType":"883","messageId":"884","endLine":97,"endColumn":15},{"ruleId":"881","severity":1,"message":"896","line":97,"column":17,"nodeType":"883","messageId":"884","endLine":97,"endColumn":27},{"ruleId":"881","severity":1,"message":"911","line":98,"column":8,"nodeType":"883","messageId":"884","endLine":98,"endColumn":13},{"ruleId":"881","severity":1,"message":"897","line":98,"column":15,"nodeType":"883","messageId":"884","endLine":98,"endColumn":23},{"ruleId":"881","severity":1,"message":"912","line":106,"column":17,"nodeType":"883","messageId":"884","endLine":106,"endColumn":25},{"ruleId":"881","severity":1,"message":"891","line":3,"column":10,"nodeType":"883","messageId":"884","endLine":3,"endColumn":14},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"916","line":10,"column":8,"nodeType":"883","messageId":"884","endLine":10,"endColumn":20},{"ruleId":"881","severity":1,"message":"917","line":34,"column":7,"nodeType":"883","messageId":"884","endLine":34,"endColumn":13},{"ruleId":"881","severity":1,"message":"897","line":49,"column":15,"nodeType":"883","messageId":"884","endLine":49,"endColumn":23},{"ruleId":"881","severity":1,"message":"918","line":51,"column":11,"nodeType":"883","messageId":"884","endLine":51,"endColumn":15},{"ruleId":"881","severity":1,"message":"919","line":52,"column":10,"nodeType":"883","messageId":"884","endLine":52,"endColumn":19},{"ruleId":"881","severity":1,"message":"920","line":53,"column":9,"nodeType":"883","messageId":"884","endLine":53,"endColumn":17},{"ruleId":"881","severity":1,"message":"921","line":54,"column":10,"nodeType":"883","messageId":"884","endLine":54,"endColumn":19},{"ruleId":"881","severity":1,"message":"922","line":54,"column":20,"nodeType":"883","messageId":"884","endLine":54,"endColumn":32},{"ruleId":"881","severity":1,"message":"923","line":92,"column":9,"nodeType":"883","messageId":"884","endLine":92,"endColumn":21},{"ruleId":"881","severity":1,"message":"924","line":120,"column":9,"nodeType":"883","messageId":"884","endLine":120,"endColumn":20},{"ruleId":"881","severity":1,"message":"891","line":5,"column":10,"nodeType":"883","messageId":"884","endLine":5,"endColumn":14},{"ruleId":"881","severity":1,"message":"925","line":12,"column":15,"nodeType":"883","messageId":"884","endLine":12,"endColumn":26},{"ruleId":"926","severity":1,"message":"927","line":3,"column":1,"nodeType":"928","endLine":5,"endColumn":3},{"ruleId":"881","severity":1,"message":"929","line":9,"column":9,"nodeType":"883","messageId":"884","endLine":9,"endColumn":14},{"ruleId":"881","severity":1,"message":"930","line":65,"column":10,"nodeType":"883","messageId":"884","endLine":65,"endColumn":19},{"ruleId":"881","severity":1,"message":"910","line":66,"column":8,"nodeType":"883","messageId":"884","endLine":66,"endColumn":15},{"ruleId":"881","severity":1,"message":"896","line":66,"column":17,"nodeType":"883","messageId":"884","endLine":66,"endColumn":27},{"ruleId":"881","severity":1,"message":"911","line":67,"column":8,"nodeType":"883","messageId":"884","endLine":67,"endColumn":13},{"ruleId":"881","severity":1,"message":"897","line":67,"column":15,"nodeType":"883","messageId":"884","endLine":67,"endColumn":23},{"ruleId":"881","severity":1,"message":"931","line":68,"column":10,"nodeType":"883","messageId":"884","endLine":68,"endColumn":14},{"ruleId":"881","severity":1,"message":"919","line":69,"column":10,"nodeType":"883","messageId":"884","endLine":69,"endColumn":19},{"ruleId":"881","severity":1,"message":"932","line":69,"column":21,"nodeType":"883","messageId":"884","endLine":69,"endColumn":33},{"ruleId":"881","severity":1,"message":"920","line":70,"column":9,"nodeType":"883","messageId":"884","endLine":70,"endColumn":17},{"ruleId":"881","severity":1,"message":"933","line":2,"column":37,"nodeType":"883","messageId":"884","endLine":2,"endColumn":47},{"ruleId":"881","severity":1,"message":"892","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":32},{"ruleId":"881","severity":1,"message":"893","line":4,"column":33,"nodeType":"883","messageId":"884","endLine":4,"endColumn":49},{"ruleId":"881","severity":1,"message":"934","line":5,"column":19,"nodeType":"883","messageId":"884","endLine":5,"endColumn":28},{"ruleId":"881","severity":1,"message":"935","line":5,"column":39,"nodeType":"883","messageId":"884","endLine":5,"endColumn":48},{"ruleId":"881","severity":1,"message":"936","line":5,"column":59,"nodeType":"883","messageId":"884","endLine":5,"endColumn":68},{"ruleId":"881","severity":1,"message":"897","line":48,"column":15,"nodeType":"883","messageId":"884","endLine":48,"endColumn":23},{"ruleId":"881","severity":1,"message":"937","line":16,"column":5,"nodeType":"883","messageId":"884","endLine":16,"endColumn":9},{"ruleId":"881","severity":1,"message":"933","line":19,"column":35,"nodeType":"883","messageId":"884","endLine":19,"endColumn":45},{"ruleId":"881","severity":1,"message":"938","line":28,"column":22,"nodeType":"883","messageId":"884","endLine":28,"endColumn":35},{"ruleId":"881","severity":1,"message":"939","line":28,"column":37,"nodeType":"883","messageId":"884","endLine":28,"endColumn":42},{"ruleId":"881","severity":1,"message":"895","line":28,"column":44,"nodeType":"883","messageId":"884","endLine":28,"endColumn":50},{"ruleId":"881","severity":1,"message":"891","line":30,"column":10,"nodeType":"883","messageId":"884","endLine":30,"endColumn":14},{"ruleId":"881","severity":1,"message":"915","line":31,"column":24,"nodeType":"883","messageId":"884","endLine":31,"endColumn":29},{"ruleId":"881","severity":1,"message":"940","line":37,"column":9,"nodeType":"883","messageId":"884","endLine":37,"endColumn":16},{"ruleId":"881","severity":1,"message":"941","line":112,"column":7,"nodeType":"883","messageId":"884","endLine":112,"endColumn":11},{"ruleId":"881","severity":1,"message":"942","line":121,"column":7,"nodeType":"883","messageId":"884","endLine":121,"endColumn":16},{"ruleId":"881","severity":1,"message":"943","line":130,"column":7,"nodeType":"883","messageId":"884","endLine":130,"endColumn":12},{"ruleId":"881","severity":1,"message":"944","line":143,"column":10,"nodeType":"883","messageId":"884","endLine":143,"endColumn":19},{"ruleId":"881","severity":1,"message":"945","line":166,"column":12,"nodeType":"883","messageId":"884","endLine":166,"endColumn":17},{"ruleId":"881","severity":1,"message":"946","line":168,"column":11,"nodeType":"883","messageId":"884","endLine":168,"endColumn":23},{"ruleId":"881","severity":1,"message":"947","line":174,"column":12,"nodeType":"883","messageId":"884","endLine":174,"endColumn":17},{"ruleId":"881","severity":1,"message":"948","line":176,"column":11,"nodeType":"883","messageId":"884","endLine":176,"endColumn":22},{"ruleId":"881","severity":1,"message":"901","line":179,"column":11,"nodeType":"883","messageId":"884","endLine":179,"endColumn":16},{"ruleId":"881","severity":1,"message":"949","line":180,"column":12,"nodeType":"883","messageId":"884","endLine":180,"endColumn":22},{"ruleId":"881","severity":1,"message":"950","line":182,"column":11,"nodeType":"883","messageId":"884","endLine":182,"endColumn":23},{"ruleId":"881","severity":1,"message":"951","line":194,"column":12,"nodeType":"883","messageId":"884","endLine":194,"endColumn":19},{"ruleId":"881","severity":1,"message":"952","line":195,"column":19,"nodeType":"883","messageId":"884","endLine":195,"endColumn":29},{"ruleId":"881","severity":1,"message":"897","line":196,"column":17,"nodeType":"883","messageId":"884","endLine":196,"endColumn":25},{"ruleId":"881","severity":1,"message":"953","line":216,"column":13,"nodeType":"883","messageId":"884","endLine":216,"endColumn":29},{"ruleId":"881","severity":1,"message":"954","line":226,"column":13,"nodeType":"883","messageId":"884","endLine":226,"endColumn":36},{"ruleId":"881","severity":1,"message":"955","line":242,"column":13,"nodeType":"883","messageId":"884","endLine":242,"endColumn":20},{"ruleId":"881","severity":1,"message":"956","line":289,"column":13,"nodeType":"883","messageId":"884","endLine":289,"endColumn":29},{"ruleId":"881","severity":1,"message":"957","line":331,"column":11,"nodeType":"883","messageId":"884","endLine":331,"endColumn":25},{"ruleId":"881","severity":1,"message":"958","line":358,"column":13,"nodeType":"883","messageId":"884","endLine":358,"endColumn":24},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"934","line":5,"column":19,"nodeType":"883","messageId":"884","endLine":5,"endColumn":28},{"ruleId":"881","severity":1,"message":"935","line":5,"column":39,"nodeType":"883","messageId":"884","endLine":5,"endColumn":48},{"ruleId":"881","severity":1,"message":"936","line":5,"column":59,"nodeType":"883","messageId":"884","endLine":5,"endColumn":68},{"ruleId":"881","severity":1,"message":"959","line":9,"column":9,"nodeType":"883","messageId":"884","endLine":9,"endColumn":22},{"ruleId":"881","severity":1,"message":"960","line":12,"column":8,"nodeType":"883","messageId":"884","endLine":12,"endColumn":14},{"ruleId":"881","severity":1,"message":"961","line":15,"column":3,"nodeType":"883","messageId":"884","endLine":15,"endColumn":8},{"ruleId":"881","severity":1,"message":"962","line":16,"column":3,"nodeType":"883","messageId":"884","endLine":16,"endColumn":11},{"ruleId":"881","severity":1,"message":"963","line":17,"column":3,"nodeType":"883","messageId":"884","endLine":17,"endColumn":12},{"ruleId":"881","severity":1,"message":"964","line":18,"column":3,"nodeType":"883","messageId":"884","endLine":18,"endColumn":12},{"ruleId":"881","severity":1,"message":"965","line":19,"column":3,"nodeType":"883","messageId":"884","endLine":19,"endColumn":12},{"ruleId":"881","severity":1,"message":"966","line":20,"column":3,"nodeType":"883","messageId":"884","endLine":20,"endColumn":7},{"ruleId":"881","severity":1,"message":"967","line":28,"column":8,"nodeType":"883","messageId":"884","endLine":28,"endColumn":20},{"ruleId":"881","severity":1,"message":"968","line":29,"column":9,"nodeType":"883","messageId":"884","endLine":29,"endColumn":23},{"ruleId":"881","severity":1,"message":"896","line":58,"column":18,"nodeType":"883","messageId":"884","endLine":58,"endColumn":28},{"ruleId":"881","severity":1,"message":"897","line":59,"column":16,"nodeType":"883","messageId":"884","endLine":59,"endColumn":24},{"ruleId":"881","severity":1,"message":"969","line":71,"column":10,"nodeType":"883","messageId":"884","endLine":71,"endColumn":13},{"ruleId":"881","severity":1,"message":"970","line":71,"column":15,"nodeType":"883","messageId":"884","endLine":71,"endColumn":21},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"896","line":38,"column":23,"nodeType":"883","messageId":"884","endLine":38,"endColumn":33},{"ruleId":"881","severity":1,"message":"897","line":39,"column":21,"nodeType":"883","messageId":"884","endLine":39,"endColumn":29},{"ruleId":"881","severity":1,"message":"918","line":40,"column":16,"nodeType":"883","messageId":"884","endLine":40,"endColumn":20},{"ruleId":"881","severity":1,"message":"920","line":42,"column":16,"nodeType":"883","messageId":"884","endLine":42,"endColumn":24},{"ruleId":"881","severity":1,"message":"971","line":71,"column":15,"nodeType":"883","messageId":"884","endLine":71,"endColumn":31},{"ruleId":"881","severity":1,"message":"956","line":77,"column":15,"nodeType":"883","messageId":"884","endLine":77,"endColumn":31},{"ruleId":"881","severity":1,"message":"972","line":86,"column":15,"nodeType":"883","messageId":"884","endLine":86,"endColumn":26},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"973","line":38,"column":12,"nodeType":"883","messageId":"884","endLine":38,"endColumn":18},{"ruleId":"881","severity":1,"message":"896","line":39,"column":21,"nodeType":"883","messageId":"884","endLine":39,"endColumn":31},{"ruleId":"881","severity":1,"message":"897","line":40,"column":19,"nodeType":"883","messageId":"884","endLine":40,"endColumn":27},{"ruleId":"881","severity":1,"message":"919","line":42,"column":12,"nodeType":"883","messageId":"884","endLine":42,"endColumn":21},{"ruleId":"881","severity":1,"message":"974","line":43,"column":12,"nodeType":"883","messageId":"884","endLine":43,"endColumn":20},{"ruleId":"881","severity":1,"message":"975","line":45,"column":12,"nodeType":"883","messageId":"884","endLine":45,"endColumn":20},{"ruleId":"881","severity":1,"message":"971","line":112,"column":19,"nodeType":"883","messageId":"884","endLine":112,"endColumn":35},{"ruleId":"881","severity":1,"message":"956","line":125,"column":19,"nodeType":"883","messageId":"884","endLine":125,"endColumn":35},{"ruleId":"881","severity":1,"message":"976","line":147,"column":19,"nodeType":"883","messageId":"884","endLine":147,"endColumn":31},{"ruleId":"881","severity":1,"message":"977","line":1,"column":9,"nodeType":"883","messageId":"884","endLine":1,"endColumn":17},{"ruleId":"881","severity":1,"message":"891","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":14},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"934","line":5,"column":19,"nodeType":"883","messageId":"884","endLine":5,"endColumn":28},{"ruleId":"881","severity":1,"message":"935","line":5,"column":39,"nodeType":"883","messageId":"884","endLine":5,"endColumn":48},{"ruleId":"881","severity":1,"message":"936","line":5,"column":59,"nodeType":"883","messageId":"884","endLine":5,"endColumn":68},{"ruleId":"881","severity":1,"message":"978","line":9,"column":9,"nodeType":"883","messageId":"884","endLine":9,"endColumn":21},{"ruleId":"881","severity":1,"message":"979","line":11,"column":8,"nodeType":"883","messageId":"884","endLine":11,"endColumn":17},{"ruleId":"881","severity":1,"message":"960","line":12,"column":8,"nodeType":"883","messageId":"884","endLine":12,"endColumn":14},{"ruleId":"881","severity":1,"message":"961","line":15,"column":3,"nodeType":"883","messageId":"884","endLine":15,"endColumn":8},{"ruleId":"881","severity":1,"message":"962","line":16,"column":3,"nodeType":"883","messageId":"884","endLine":16,"endColumn":11},{"ruleId":"881","severity":1,"message":"963","line":17,"column":3,"nodeType":"883","messageId":"884","endLine":17,"endColumn":12},{"ruleId":"881","severity":1,"message":"964","line":18,"column":3,"nodeType":"883","messageId":"884","endLine":18,"endColumn":12},{"ruleId":"881","severity":1,"message":"965","line":19,"column":3,"nodeType":"883","messageId":"884","endLine":19,"endColumn":12},{"ruleId":"881","severity":1,"message":"966","line":20,"column":3,"nodeType":"883","messageId":"884","endLine":20,"endColumn":7},{"ruleId":"881","severity":1,"message":"967","line":22,"column":8,"nodeType":"883","messageId":"884","endLine":22,"endColumn":20},{"ruleId":"881","severity":1,"message":"908","line":26,"column":7,"nodeType":"883","messageId":"884","endLine":26,"endColumn":15},{"ruleId":"881","severity":1,"message":"980","line":34,"column":11,"nodeType":"883","messageId":"884","endLine":34,"endColumn":18},{"ruleId":"881","severity":1,"message":"930","line":35,"column":12,"nodeType":"883","messageId":"884","endLine":35,"endColumn":21},{"ruleId":"881","severity":1,"message":"910","line":36,"column":10,"nodeType":"883","messageId":"884","endLine":36,"endColumn":17},{"ruleId":"881","severity":1,"message":"896","line":36,"column":19,"nodeType":"883","messageId":"884","endLine":36,"endColumn":29},{"ruleId":"881","severity":1,"message":"973","line":37,"column":12,"nodeType":"883","messageId":"884","endLine":37,"endColumn":18},{"ruleId":"881","severity":1,"message":"911","line":38,"column":10,"nodeType":"883","messageId":"884","endLine":38,"endColumn":15},{"ruleId":"881","severity":1,"message":"897","line":38,"column":17,"nodeType":"883","messageId":"884","endLine":38,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":39,"column":12,"nodeType":"883","messageId":"884","endLine":39,"endColumn":16},{"ruleId":"881","severity":1,"message":"931","line":40,"column":12,"nodeType":"883","messageId":"884","endLine":40,"endColumn":16},{"ruleId":"881","severity":1,"message":"981","line":62,"column":13,"nodeType":"883","messageId":"884","endLine":62,"endColumn":25},{"ruleId":"881","severity":1,"message":"891","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":14},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"934","line":5,"column":19,"nodeType":"883","messageId":"884","endLine":5,"endColumn":28},{"ruleId":"881","severity":1,"message":"935","line":5,"column":39,"nodeType":"883","messageId":"884","endLine":5,"endColumn":48},{"ruleId":"881","severity":1,"message":"936","line":5,"column":59,"nodeType":"883","messageId":"884","endLine":5,"endColumn":68},{"ruleId":"881","severity":1,"message":"896","line":36,"column":19,"nodeType":"883","messageId":"884","endLine":36,"endColumn":29},{"ruleId":"881","severity":1,"message":"973","line":37,"column":12,"nodeType":"883","messageId":"884","endLine":37,"endColumn":18},{"ruleId":"881","severity":1,"message":"897","line":38,"column":17,"nodeType":"883","messageId":"884","endLine":38,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":39,"column":12,"nodeType":"883","messageId":"884","endLine":39,"endColumn":16},{"ruleId":"881","severity":1,"message":"981","line":62,"column":13,"nodeType":"883","messageId":"884","endLine":62,"endColumn":25},{"ruleId":"881","severity":1,"message":"891","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":14},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"951","line":36,"column":12,"nodeType":"883","messageId":"884","endLine":36,"endColumn":19},{"ruleId":"881","severity":1,"message":"952","line":37,"column":19,"nodeType":"883","messageId":"884","endLine":37,"endColumn":29},{"ruleId":"881","severity":1,"message":"897","line":38,"column":17,"nodeType":"883","messageId":"884","endLine":38,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":39,"column":12,"nodeType":"883","messageId":"884","endLine":39,"endColumn":16},{"ruleId":"881","severity":1,"message":"953","line":58,"column":13,"nodeType":"883","messageId":"884","endLine":58,"endColumn":29},{"ruleId":"881","severity":1,"message":"954","line":68,"column":13,"nodeType":"883","messageId":"884","endLine":68,"endColumn":36},{"ruleId":"881","severity":1,"message":"955","line":84,"column":13,"nodeType":"883","messageId":"884","endLine":84,"endColumn":20},{"ruleId":"881","severity":1,"message":"982","line":102,"column":11,"nodeType":"883","messageId":"884","endLine":102,"endColumn":27},{"ruleId":"881","severity":1,"message":"983","line":112,"column":11,"nodeType":"883","messageId":"884","endLine":112,"endColumn":29},{"ruleId":"881","severity":1,"message":"957","line":123,"column":13,"nodeType":"883","messageId":"884","endLine":123,"endColumn":27},{"ruleId":"881","severity":1,"message":"891","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":14},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"934","line":5,"column":19,"nodeType":"883","messageId":"884","endLine":5,"endColumn":28},{"ruleId":"881","severity":1,"message":"935","line":5,"column":39,"nodeType":"883","messageId":"884","endLine":5,"endColumn":48},{"ruleId":"881","severity":1,"message":"936","line":5,"column":59,"nodeType":"883","messageId":"884","endLine":5,"endColumn":68},{"ruleId":"881","severity":1,"message":"929","line":6,"column":10,"nodeType":"883","messageId":"884","endLine":6,"endColumn":15},{"ruleId":"881","severity":1,"message":"896","line":38,"column":19,"nodeType":"883","messageId":"884","endLine":38,"endColumn":29},{"ruleId":"881","severity":1,"message":"897","line":39,"column":17,"nodeType":"883","messageId":"884","endLine":39,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":40,"column":12,"nodeType":"883","messageId":"884","endLine":40,"endColumn":16},{"ruleId":"881","severity":1,"message":"921","line":42,"column":12,"nodeType":"883","messageId":"884","endLine":42,"endColumn":21},{"ruleId":"881","severity":1,"message":"922","line":42,"column":22,"nodeType":"883","messageId":"884","endLine":42,"endColumn":34},{"ruleId":"881","severity":1,"message":"891","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":14},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"934","line":5,"column":19,"nodeType":"883","messageId":"884","endLine":5,"endColumn":28},{"ruleId":"881","severity":1,"message":"935","line":5,"column":39,"nodeType":"883","messageId":"884","endLine":5,"endColumn":48},{"ruleId":"881","severity":1,"message":"936","line":5,"column":59,"nodeType":"883","messageId":"884","endLine":5,"endColumn":68},{"ruleId":"881","severity":1,"message":"897","line":37,"column":17,"nodeType":"883","messageId":"884","endLine":37,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":38,"column":12,"nodeType":"883","messageId":"884","endLine":38,"endColumn":16},{"ruleId":"881","severity":1,"message":"921","line":40,"column":12,"nodeType":"883","messageId":"884","endLine":40,"endColumn":21},{"ruleId":"881","severity":1,"message":"922","line":40,"column":22,"nodeType":"883","messageId":"884","endLine":40,"endColumn":34},{"ruleId":"881","severity":1,"message":"984","line":63,"column":13,"nodeType":"883","messageId":"884","endLine":63,"endColumn":26},{"ruleId":"881","severity":1,"message":"985","line":79,"column":11,"nodeType":"883","messageId":"884","endLine":79,"endColumn":24},{"ruleId":"881","severity":1,"message":"986","line":101,"column":13,"nodeType":"883","messageId":"884","endLine":101,"endColumn":27},{"ruleId":"881","severity":1,"message":"891","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":14},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"951","line":33,"column":12,"nodeType":"883","messageId":"884","endLine":33,"endColumn":19},{"ruleId":"881","severity":1,"message":"952","line":34,"column":19,"nodeType":"883","messageId":"884","endLine":34,"endColumn":29},{"ruleId":"881","severity":1,"message":"897","line":35,"column":17,"nodeType":"883","messageId":"884","endLine":35,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":36,"column":12,"nodeType":"883","messageId":"884","endLine":36,"endColumn":16},{"ruleId":"881","severity":1,"message":"953","line":55,"column":13,"nodeType":"883","messageId":"884","endLine":55,"endColumn":29},{"ruleId":"881","severity":1,"message":"954","line":65,"column":13,"nodeType":"883","messageId":"884","endLine":65,"endColumn":36},{"ruleId":"881","severity":1,"message":"955","line":81,"column":13,"nodeType":"883","messageId":"884","endLine":81,"endColumn":20},{"ruleId":"881","severity":1,"message":"982","line":99,"column":11,"nodeType":"883","messageId":"884","endLine":99,"endColumn":27},{"ruleId":"881","severity":1,"message":"983","line":109,"column":11,"nodeType":"883","messageId":"884","endLine":109,"endColumn":29},{"ruleId":"881","severity":1,"message":"891","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":14},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"934","line":5,"column":19,"nodeType":"883","messageId":"884","endLine":5,"endColumn":28},{"ruleId":"881","severity":1,"message":"935","line":5,"column":39,"nodeType":"883","messageId":"884","endLine":5,"endColumn":48},{"ruleId":"881","severity":1,"message":"936","line":5,"column":59,"nodeType":"883","messageId":"884","endLine":5,"endColumn":68},{"ruleId":"881","severity":1,"message":"897","line":37,"column":17,"nodeType":"883","messageId":"884","endLine":37,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":38,"column":12,"nodeType":"883","messageId":"884","endLine":38,"endColumn":16},{"ruleId":"881","severity":1,"message":"984","line":59,"column":13,"nodeType":"883","messageId":"884","endLine":59,"endColumn":26},{"ruleId":"881","severity":1,"message":"985","line":75,"column":11,"nodeType":"883","messageId":"884","endLine":75,"endColumn":24},{"ruleId":"881","severity":1,"message":"986","line":94,"column":13,"nodeType":"883","messageId":"884","endLine":94,"endColumn":27},{"ruleId":"881","severity":1,"message":"891","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":14},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"934","line":5,"column":19,"nodeType":"883","messageId":"884","endLine":5,"endColumn":28},{"ruleId":"881","severity":1,"message":"935","line":5,"column":39,"nodeType":"883","messageId":"884","endLine":5,"endColumn":48},{"ruleId":"881","severity":1,"message":"936","line":5,"column":59,"nodeType":"883","messageId":"884","endLine":5,"endColumn":68},{"ruleId":"881","severity":1,"message":"896","line":37,"column":19,"nodeType":"883","messageId":"884","endLine":37,"endColumn":29},{"ruleId":"881","severity":1,"message":"973","line":38,"column":12,"nodeType":"883","messageId":"884","endLine":38,"endColumn":18},{"ruleId":"881","severity":1,"message":"897","line":39,"column":17,"nodeType":"883","messageId":"884","endLine":39,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":40,"column":12,"nodeType":"883","messageId":"884","endLine":40,"endColumn":16},{"ruleId":"881","severity":1,"message":"981","line":63,"column":13,"nodeType":"883","messageId":"884","endLine":63,"endColumn":25},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"896","line":36,"column":19,"nodeType":"883","messageId":"884","endLine":36,"endColumn":29},{"ruleId":"881","severity":1,"message":"897","line":37,"column":17,"nodeType":"883","messageId":"884","endLine":37,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":38,"column":12,"nodeType":"883","messageId":"884","endLine":38,"endColumn":16},{"ruleId":"881","severity":1,"message":"920","line":40,"column":12,"nodeType":"883","messageId":"884","endLine":40,"endColumn":20},{"ruleId":"881","severity":1,"message":"971","line":70,"column":11,"nodeType":"883","messageId":"884","endLine":70,"endColumn":27},{"ruleId":"881","severity":1,"message":"956","line":75,"column":13,"nodeType":"883","messageId":"884","endLine":75,"endColumn":29},{"ruleId":"881","severity":1,"message":"987","line":82,"column":13,"nodeType":"883","messageId":"884","endLine":82,"endColumn":20},{"ruleId":"881","severity":1,"message":"913","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"914","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":22},{"ruleId":"881","severity":1,"message":"915","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":29},{"ruleId":"881","severity":1,"message":"896","line":36,"column":19,"nodeType":"883","messageId":"884","endLine":36,"endColumn":29},{"ruleId":"881","severity":1,"message":"897","line":37,"column":17,"nodeType":"883","messageId":"884","endLine":37,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":38,"column":12,"nodeType":"883","messageId":"884","endLine":38,"endColumn":16},{"ruleId":"881","severity":1,"message":"920","line":40,"column":12,"nodeType":"883","messageId":"884","endLine":40,"endColumn":20},{"ruleId":"881","severity":1,"message":"971","line":69,"column":11,"nodeType":"883","messageId":"884","endLine":69,"endColumn":27},{"ruleId":"881","severity":1,"message":"956","line":76,"column":13,"nodeType":"883","messageId":"884","endLine":76,"endColumn":29},{"ruleId":"881","severity":1,"message":"988","line":87,"column":13,"nodeType":"883","messageId":"884","endLine":87,"endColumn":25},{"ruleId":"881","severity":1,"message":"915","line":1,"column":24,"nodeType":"883","messageId":"884","endLine":1,"endColumn":29},{"ruleId":"881","severity":1,"message":"891","line":5,"column":10,"nodeType":"883","messageId":"884","endLine":5,"endColumn":14},{"ruleId":"881","severity":1,"message":"894","line":10,"column":23,"nodeType":"883","messageId":"884","endLine":10,"endColumn":34},{"ruleId":"881","severity":1,"message":"895","line":10,"column":35,"nodeType":"883","messageId":"884","endLine":10,"endColumn":41},{"ruleId":"881","severity":1,"message":"896","line":63,"column":19,"nodeType":"883","messageId":"884","endLine":63,"endColumn":29},{"ruleId":"881","severity":1,"message":"897","line":64,"column":17,"nodeType":"883","messageId":"884","endLine":64,"endColumn":25},{"ruleId":"881","severity":1,"message":"903","line":1,"column":10,"nodeType":"883","messageId":"884","endLine":1,"endColumn":19},{"ruleId":"881","severity":1,"message":"903","line":1,"column":10,"nodeType":"883","messageId":"884","endLine":1,"endColumn":19},{"ruleId":"881","severity":1,"message":"903","line":1,"column":10,"nodeType":"883","messageId":"884","endLine":1,"endColumn":19},{"ruleId":"881","severity":1,"message":"903","line":1,"column":10,"nodeType":"883","messageId":"884","endLine":1,"endColumn":19},{"ruleId":"881","severity":1,"message":"892","line":3,"column":24,"nodeType":"883","messageId":"884","endLine":3,"endColumn":32},{"ruleId":"881","severity":1,"message":"893","line":3,"column":33,"nodeType":"883","messageId":"884","endLine":3,"endColumn":49},{"ruleId":"881","severity":1,"message":"895","line":8,"column":22,"nodeType":"883","messageId":"884","endLine":8,"endColumn":28},{"ruleId":"881","severity":1,"message":"989","line":8,"column":51,"nodeType":"883","messageId":"884","endLine":8,"endColumn":67},{"ruleId":"881","severity":1,"message":"918","line":25,"column":12,"nodeType":"883","messageId":"884","endLine":25,"endColumn":16},{"ruleId":"881","severity":1,"message":"896","line":27,"column":19,"nodeType":"883","messageId":"884","endLine":27,"endColumn":29},{"ruleId":"881","severity":1,"message":"897","line":28,"column":17,"nodeType":"883","messageId":"884","endLine":28,"endColumn":25},{"ruleId":"881","severity":1,"message":"898","line":29,"column":12,"nodeType":"883","messageId":"884","endLine":29,"endColumn":17},{"ruleId":"881","severity":1,"message":"899","line":29,"column":19,"nodeType":"883","messageId":"884","endLine":29,"endColumn":27},{"ruleId":"881","severity":1,"message":"930","line":37,"column":12,"nodeType":"883","messageId":"884","endLine":37,"endColumn":21},{"ruleId":"881","severity":1,"message":"896","line":39,"column":19,"nodeType":"883","messageId":"884","endLine":39,"endColumn":29},{"ruleId":"881","severity":1,"message":"897","line":40,"column":17,"nodeType":"883","messageId":"884","endLine":40,"endColumn":25},{"ruleId":"881","severity":1,"message":"918","line":41,"column":12,"nodeType":"883","messageId":"884","endLine":41,"endColumn":16},{"ruleId":"881","severity":1,"message":"986","line":124,"column":15,"nodeType":"883","messageId":"884","endLine":124,"endColumn":29},{"ruleId":"881","severity":1,"message":"929","line":9,"column":9,"nodeType":"883","messageId":"884","endLine":9,"endColumn":14},{"ruleId":"881","severity":1,"message":"930","line":65,"column":10,"nodeType":"883","messageId":"884","endLine":65,"endColumn":19},{"ruleId":"881","severity":1,"message":"910","line":66,"column":8,"nodeType":"883","messageId":"884","endLine":66,"endColumn":15},{"ruleId":"881","severity":1,"message":"896","line":66,"column":17,"nodeType":"883","messageId":"884","endLine":66,"endColumn":27},{"ruleId":"881","severity":1,"message":"911","line":67,"column":8,"nodeType":"883","messageId":"884","endLine":67,"endColumn":13},{"ruleId":"881","severity":1,"message":"897","line":67,"column":15,"nodeType":"883","messageId":"884","endLine":67,"endColumn":23},{"ruleId":"881","severity":1,"message":"931","line":68,"column":10,"nodeType":"883","messageId":"884","endLine":68,"endColumn":14},{"ruleId":"881","severity":1,"message":"919","line":69,"column":10,"nodeType":"883","messageId":"884","endLine":69,"endColumn":19},{"ruleId":"881","severity":1,"message":"932","line":69,"column":21,"nodeType":"883","messageId":"884","endLine":69,"endColumn":33},{"ruleId":"881","severity":1,"message":"920","line":70,"column":9,"nodeType":"883","messageId":"884","endLine":70,"endColumn":17},{"ruleId":"881","severity":1,"message":"933","line":2,"column":37,"nodeType":"883","messageId":"884","endLine":2,"endColumn":47},{"ruleId":"881","severity":1,"message":"892","line":4,"column":24,"nodeType":"883","messageId":"884","endLine":4,"endColumn":32},{"ruleId":"881","severity":1,"message":"893","line":4,"column":33,"nodeType":"883","messageId":"884","endLine":4,"endColumn":49},{"ruleId":"881","severity":1,"message":"934","line":5,"column":19,"nodeType":"883","messageId":"884","endLine":5,"endColumn":28},{"ruleId":"881","severity":1,"message":"935","line":5,"column":39,"nodeType":"883","messageId":"884","endLine":5,"endColumn":48},{"ruleId":"881","severity":1,"message":"936","line":5,"column":59,"nodeType":"883","messageId":"884","endLine":5,"endColumn":68},{"ruleId":"881","severity":1,"message":"897","line":48,"column":15,"nodeType":"883","messageId":"884","endLine":48,"endColumn":23},{"ruleId":"881","severity":1,"message":"978","line":5,"column":10,"nodeType":"883","messageId":"884","endLine":5,"endColumn":22},{"ruleId":"881","severity":1,"message":"937","line":12,"column":5,"nodeType":"883","messageId":"884","endLine":12,"endColumn":9},{"ruleId":"881","severity":1,"message":"908","line":24,"column":7,"nodeType":"883","messageId":"884","endLine":24,"endColumn":15},{"ruleId":"881","severity":1,"message":"911","line":33,"column":10,"nodeType":"883","messageId":"884","endLine":33,"endColumn":15},{"ruleId":"881","severity":1,"message":"897","line":33,"column":17,"nodeType":"883","messageId":"884","endLine":33,"endColumn":25},{"ruleId":"881","severity":1,"message":"978","line":5,"column":10,"nodeType":"883","messageId":"884","endLine":5,"endColumn":22},{"ruleId":"881","severity":1,"message":"937","line":12,"column":5,"nodeType":"883","messageId":"884","endLine":12,"endColumn":9},{"ruleId":"881","severity":1,"message":"908","line":24,"column":7,"nodeType":"883","messageId":"884","endLine":24,"endColumn":15},{"ruleId":"881","severity":1,"message":"911","line":33,"column":10,"nodeType":"883","messageId":"884","endLine":33,"endColumn":15},{"ruleId":"881","severity":1,"message":"897","line":33,"column":17,"nodeType":"883","messageId":"884","endLine":33,"endColumn":25},{"ruleId":"881","severity":1,"message":"990","line":1,"column":25,"nodeType":"883","messageId":"884","endLine":1,"endColumn":39},{"ruleId":"881","severity":1,"message":"991","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":20},{"ruleId":"881","severity":1,"message":"992","line":8,"column":8,"nodeType":"883","messageId":"884","endLine":8,"endColumn":16},{"ruleId":"881","severity":1,"message":"993","line":9,"column":8,"nodeType":"883","messageId":"884","endLine":9,"endColumn":16},{"ruleId":"881","severity":1,"message":"994","line":10,"column":8,"nodeType":"883","messageId":"884","endLine":10,"endColumn":20},{"ruleId":"881","severity":1,"message":"995","line":11,"column":8,"nodeType":"883","messageId":"884","endLine":11,"endColumn":29},{"ruleId":"881","severity":1,"message":"978","line":13,"column":10,"nodeType":"883","messageId":"884","endLine":13,"endColumn":22},{"ruleId":"881","severity":1,"message":"937","line":20,"column":5,"nodeType":"883","messageId":"884","endLine":20,"endColumn":9},{"ruleId":"881","severity":1,"message":"939","line":34,"column":22,"nodeType":"883","messageId":"884","endLine":34,"endColumn":27},{"ruleId":"881","severity":1,"message":"996","line":35,"column":10,"nodeType":"883","messageId":"884","endLine":35,"endColumn":23},{"ruleId":"881","severity":1,"message":"908","line":55,"column":7,"nodeType":"883","messageId":"884","endLine":55,"endColumn":15},{"ruleId":"881","severity":1,"message":"997","line":62,"column":7,"nodeType":"883","messageId":"884","endLine":62,"endColumn":17},{"ruleId":"881","severity":1,"message":"941","line":109,"column":7,"nodeType":"883","messageId":"884","endLine":109,"endColumn":11},{"ruleId":"881","severity":1,"message":"911","line":119,"column":10,"nodeType":"883","messageId":"884","endLine":119,"endColumn":15},{"ruleId":"881","severity":1,"message":"897","line":119,"column":17,"nodeType":"883","messageId":"884","endLine":119,"endColumn":25},{"ruleId":"881","severity":1,"message":"998","line":121,"column":11,"nodeType":"883","messageId":"884","endLine":121,"endColumn":15},{"ruleId":"881","severity":1,"message":"999","line":122,"column":11,"nodeType":"883","messageId":"884","endLine":122,"endColumn":22},{"ruleId":"881","severity":1,"message":"1000","line":125,"column":11,"nodeType":"883","messageId":"884","endLine":125,"endColumn":22},{"ruleId":"881","severity":1,"message":"945","line":131,"column":12,"nodeType":"883","messageId":"884","endLine":131,"endColumn":17},{"ruleId":"881","severity":1,"message":"1001","line":132,"column":11,"nodeType":"883","messageId":"884","endLine":132,"endColumn":21},{"ruleId":"881","severity":1,"message":"1002","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":13},{"ruleId":"881","severity":1,"message":"1003","line":4,"column":10,"nodeType":"883","messageId":"884","endLine":4,"endColumn":16},{"ruleId":"881","severity":1,"message":"1004","line":4,"column":18,"nodeType":"883","messageId":"884","endLine":4,"endColumn":23},{"ruleId":"881","severity":1,"message":"1005","line":5,"column":8,"nodeType":"883","messageId":"884","endLine":5,"endColumn":12},{"ruleId":"881","severity":1,"message":"937","line":13,"column":5,"nodeType":"883","messageId":"884","endLine":13,"endColumn":9},{"ruleId":"881","severity":1,"message":"1006","line":23,"column":7,"nodeType":"883","messageId":"884","endLine":23,"endColumn":12},{"ruleId":"881","severity":1,"message":"941","line":41,"column":7,"nodeType":"883","messageId":"884","endLine":41,"endColumn":11},{"ruleId":"881","severity":1,"message":"990","line":1,"column":25,"nodeType":"883","messageId":"884","endLine":1,"endColumn":39},{"ruleId":"881","severity":1,"message":"991","line":2,"column":10,"nodeType":"883","messageId":"884","endLine":2,"endColumn":20},{"ruleId":"881","severity":1,"message":"993","line":9,"column":8,"nodeType":"883","messageId":"884","endLine":9,"endColumn":16},{"ruleId":"881","severity":1,"message":"994","line":10,"column":8,"nodeType":"883","messageId":"884","endLine":10,"endColumn":20},{"ruleId":"881","severity":1,"message":"978","line":13,"column":10,"nodeType":"883","messageId":"884","endLine":13,"endColumn":22},{"ruleId":"881","severity":1,"message":"937","line":20,"column":5,"nodeType":"883","messageId":"884","endLine":20,"endColumn":9},{"ruleId":"881","severity":1,"message":"939","line":34,"column":37,"nodeType":"883","messageId":"884","endLine":34,"endColumn":42},{"ruleId":"881","severity":1,"message":"996","line":35,"column":10,"nodeType":"883","messageId":"884","endLine":35,"endColumn":23},{"ruleId":"881","severity":1,"message":"908","line":55,"column":7,"nodeType":"883","messageId":"884","endLine":55,"endColumn":15},{"ruleId":"881","severity":1,"message":"941","line":109,"column":7,"nodeType":"883","messageId":"884","endLine":109,"endColumn":11},{"ruleId":"881","severity":1,"message":"911","line":151,"column":10,"nodeType":"883","messageId":"884","endLine":151,"endColumn":15},{"ruleId":"881","severity":1,"message":"897","line":151,"column":17,"nodeType":"883","messageId":"884","endLine":151,"endColumn":25},{"ruleId":"881","severity":1,"message":"900","line":14,"column":20,"nodeType":"883","messageId":"884","endLine":14,"endColumn":28},{"ruleId":"881","severity":1,"message":"908","line":24,"column":7,"nodeType":"883","messageId":"884","endLine":24,"endColumn":15},"no-native-reassign",["1007"],"no-negated-in-lhs",["1008"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Notifications' is defined but never used.","'Maps' is defined but never used.","'Tables' is defined but never used.","'Icons' is defined but never used.","'Charts' is defined but never used.","'Link' is defined but never used.","'useField' is defined but never used.","'useFormikContext' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'setLoading' is assigned a value but never used.","'setColor' is assigned a value but never used.","'bhead' is assigned a value but never used.","'setBHead' is assigned a value but never used.","'useState' is defined but never used.","'theme' is assigned a value but never used.","'getMainChartData' is defined but never used.","'lightBlue' is defined but never used.",["1007"],["1008"],"'loginUser' is defined but never used.","'DotLoader' is defined but never used.","'override' is assigned a value but never used.","'userDispatch' is assigned a value but never used.","'loading' is assigned a value but never used.","'color' is assigned a value but never used.","'setError' is assigned a value but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'MUIDataTable' is defined but never used.","'states' is assigned a value but never used.","'user' is assigned a value but never used.","'marketers' is assigned a value but never used.","'navigate' is assigned a value but never used.","'currentId' is assigned a value but never used.","'setCurrentId' is assigned a value but never used.","'deleteBranch' is assigned a value but never used.","'edit_branch' is assigned a value but never used.","'useLocation' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'toast' is defined but never used.","'isLoading' is assigned a value but never used.","'data' is assigned a value but never used.","'setMarketers' is assigned a value but never used.","'useContext' is defined but never used.","'yupObject' is defined but never used.","'yupString' is defined but never used.","'yupNumber' is defined but never used.","'Chip' is defined but never used.","'OutlinedInput' is defined but never used.","'Paper' is defined but never used.","'Context' is defined but never used.","'rows' is assigned a value but never used.","'MenuProps' is assigned a value but never used.","'names' is assigned a value but never used.","'getStyles' is defined but never used.","'openn' is assigned a value but never used.","'handleClosee' is assigned a value but never used.","'locks' is assigned a value but never used.","'handleLocks' is assigned a value but never used.","'personName' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Loading' is assigned a value but never used.","'setloading' is assigned a value but never used.","'savingsFormState' is assigned a value but never used.","'savingsValidationSchema' is assigned a value but never used.","'savings' is assigned a value but never used.","'validationSchema' is assigned a value but never used.","'deleteCustomer' is assigned a value but never used.","'handleProps' is assigned a value but never used.","'BounceLoaderk' is defined but never used.","'Widget' is defined but never used.","'Table' is defined but never used.","'TableRow' is defined but never used.","'TableHead' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'Grid' is defined but never used.","'ActionButton' is defined but never used.","'DateTimePicker' is defined but never used.","'bvn' is assigned a value but never used.","'setBvn' is assigned a value but never used.","'initialFormState' is assigned a value but never used.","'add_product' is assigned a value but never used.","'loader' is assigned a value but never used.","'branches' is assigned a value but never used.","'products' is assigned a value but never used.","'add_borrower' is assigned a value but never used.","'Fragment' is defined but never used.","'BounceLoader' is defined but never used.","'PageTitle' is defined but never used.","'classes' is assigned a value but never used.","'approve_loan' is assigned a value but never used.","'activateCustomer' is assigned a value but never used.","'deactivateCustomer' is assigned a value but never used.","'edit_marketer' is assigned a value but never used.","'fund_marketer' is assigned a value but never used.","'deleteMarketer' is assigned a value but never used.","'add_fee' is assigned a value but never used.","'add_interest' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","'TableContainer' is defined but never used.","'makeStyles' is defined but never used.","'MenuItem' is defined but never used.","'EditIcon' is defined but never used.","'FileCopyIcon' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'textTransform' is defined but never used.","'StyledMenu' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'css' is defined but never used.","'styled' is defined but never used.","'alpha' is defined but never used.","'Menu' is defined but never used.","'style' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]